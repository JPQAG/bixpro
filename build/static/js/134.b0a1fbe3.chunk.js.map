{"version":3,"sources":["../node_modules/deni-react-treeview/styles/themes sync /^/.*/-theme/.scss$","views/ui-elements/advance/AdvanceTree.js","components/Widgets/Statistic/Notification.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","treeStyles","position","top","left","color","fill","width","AdvanceTree","typeFolder","className","typeFolderClose","typeHtml5","typePdf","typeBlank","typeCode","typeImage","typeZip","typeJson","Fragment","sm","message","link","md","xl","Header","Title","as","Body","items","treeData","showRoot","theme","showCheckbox","showIcon","selectRow","Text","content","type","canHide","open","style","Notification","props","variant","Link","href","target"],"mappings":"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","file":"static/js/134.b0a1fbe3.chunk.js","sourcesContent":["var map = {\n\t\"./base-theme.scss\": 2373,\n\t\"./classic-theme.scss\": 2374,\n\t\"./green-theme.scss\": 2375,\n\t\"./icons-theme.scss\": 2376,\n\t\"./metro-theme.scss\": 2377,\n\t\"./moonlight-theme.scss\": 2378,\n\t\"./orange-theme.scss\": 2379,\n\t\"./purple-theme.scss\": 2380,\n\t\"./red-theme.scss\": 2381,\n\t\"./silver-theme.scss\": 2382\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2372;","import React from 'react';\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport AnimatedTree from 'react-animated-tree'\r\nimport TreeView from 'deni-react-treeview';\r\nimport treeData from './data/tree.json';\r\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\r\n\r\nconst treeStyles = {\r\n    position: 'inherit',\r\n    top: 40,\r\n    left: 40,\r\n    color: '#888',\r\n    fill: '#000',\r\n    width: '100%'\r\n};\r\n\r\nconst AdvanceTree = () => {\r\n    const typeFolder = <i className=\"fa fa-folder-open fa-2x text-warning align-middle\" />;\r\n    const typeFolderClose = <i className=\"fa fa-folder fa-2x text-warning align-middle\" />;\r\n    const typeHtml5 = <i className=\"fa fa-html5 fa-2x text-danger align-middle\" />;\r\n    const typePdf = <i className=\"fa fa-file-pdf-o fa-2x text-info align-middle\" />;\r\n    const typeBlank = <i className=\"fa fa-file-text fa-2x align-middle\" />;\r\n    const typeCode = <i className=\"fa fa-file-code-o fa-2x align-middle\" />;\r\n    const typeImage = <i className=\"fa fa-file-image-o fa-2x text-primary align-middle\" />;\r\n    const typeZip = <i className=\"fa fa-file-archive-o fa-2x text-info align-middle\" />;\r\n    const typeJson = <i className=\"fa fa-file fa-2x align-middle\" />;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col sm={12}>  \r\n                    <ModuleNotification message=\"For more info please check the components's official documentation\" link='https://www.npmjs.com/package/deni-react-treeview' />\r\n                </Col>\r\n                <Col sm={12} md={6} xl={4}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Basic Tree</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <TreeView className=\"customizable-tree\" items={treeData} showRoot={ true } />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={12} md={6} xl={4}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">With Checkbox</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <TreeView className=\"customizable-tree\" items={treeData} theme=\"orange\" showCheckbox={ true } showRoot={ true } />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={12} md={6} xl={4}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Without Icon</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <TreeView className=\"customizable-tree\" items={treeData} showRoot={ true } showCheckbox={ true } theme=\"moonlight\" showIcon={ false } />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={12} md={6} xl={4}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Tree Select Row</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <TreeView\r\n                                className=\"customizable-tree\"\r\n                                theme=\"purple\"\r\n                                items={treeData}\r\n                                showRoot={ true }\r\n                                showCheckbox={ true }\r\n                                selectRow={ true }\r\n                            />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={12} md={6} xl={4}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Metro Theme Tree</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <TreeView className=\"customizable-tree\" items={treeData} theme=\"metro\" showRoot={ true } />\r\n                            <Card.Text>Theme: <code>classic(default)</code>, <code>metro</code>, <code>moonlight</code>, <code>purple</code>, <code>green</code>, <code>orange</code>, <code>red</code>, <code>silver</code></Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={12}>  \r\n                    <ModuleNotification message=\"For more info please check the components's official documentation\" link='https://www.npmjs.com/package/react-animated-tree' />\r\n                </Col>\r\n                <Col sm={12} md={6} xl={4}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Animated Tree</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <div>\r\n                                <AnimatedTree content=\"Root Node\" type={typeFolder} canHide open style={treeStyles}>\r\n                                    <AnimatedTree content=\"Child Node\" type={typeFolder} open canHide>\r\n                                        <AnimatedTree content=\"user.php\" type={typeHtml5} />\r\n                                        <AnimatedTree content=\"invoice.pdf\" type={typePdf} />\r\n                                        <AnimatedTree content=\"data.text\" type={typeBlank} />\r\n                                        <AnimatedTree content=\"script.js\" type={typeCode} />\r\n                                    </AnimatedTree>\r\n                                    <AnimatedTree content=\"Child Node\" type={typeFolderClose} canHide>\r\n                                        <AnimatedTree content=\"logo.npg\" type={typeImage} />\r\n                                        <AnimatedTree content=\"Sub Node\" type={typeFolderClose}>\r\n                                            <AnimatedTree content=\"avatar.jpg\" type={typeImage} />\r\n                                            <AnimatedTree content=\"favicon.ico\" type={typeImage} />\r\n                                        </AnimatedTree>\r\n                                    </AnimatedTree>\r\n                                    <AnimatedTree content=\"index.html\" type={typeHtml5} />\r\n                                    <AnimatedTree content=\"package.json\" type={typeJson} />\r\n                                    <AnimatedTree content=\"root.zip\" type={typeZip} />\r\n                                </AnimatedTree>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AdvanceTree;","import React from \"react\";\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Notification = props => {\r\n    return (\r\n        <React.Fragment>\r\n            <Alert variant='warning'>\r\n                {props.message}\r\n                <Alert.Link href={props.link} target='_blank' className='float-right'>Demo & Documentation</Alert.Link>\r\n            </Alert>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Notification;"],"sourceRoot":""}