{"version":3,"sources":["components/cryptX/cards/BitcoinWalletVal.js","components/cryptX/cards/EthereumWalletVal.js","components/cryptX/cards/TotalWalletVal.js","components/cryptX/charts/chart/HoldingsQtyPieDonutChart.js","components/cryptX/charts/chart/HoldingsValPieDonutChart.js","views/cryptX/MacroView/Dashboard/Holdings/index.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js"],"names":["secretKey","CONFIG","binance","apiKey","require","options","APIKEY","APISECRET","useServerTime","recvWindow","verbose","log","console","formatter","Intl","NumberFormat","style","currency","BitcoinWalletValCard","useState","bitcoinPrice","setBitcoinPrice","holdings","setHoldings","getHoldings","a","prices","ticker","balance","error","balances","holding","symbol","format","useEffect","interval","setInterval","clearInterval","data","newData","prop","push","available","onOrder","marketPrice","marketValue","objectParse","Fragment","className","Body","EthereumWalletValCard","EthereumVal","setEthereumVal","TotalWalletValCard","TotalWalletVal","setTotalWalletVal","totalWalletValuation","HoldingsQtyPieDonutChart","futuresPrices","info","pieData","parseFloat","createPieData","filter","width","height","chartType","loader","title","pieHole","colors","rootProps","HoldingsValPieDonutChart","DashHoldings","md","xl","Header","Title","as","React","forwardRef","p","ref","createElement","_extends","classNames","DEVICE_SIZES","Col","_ref","bsPrefix","_ref$as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","spans","classes","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","length","apply","concat","displayName","Row","noGutters","decoratedBsPrefix","sizePrefix","cols","defaultProps","CardImg","variant","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","text","border","body","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Provider","value","Img","Subtitle","Link","Text","Footer","ImgOverlay"],"mappings":"2OAMMA,EAAYC,IAAOC,QAAQF,UAC3BG,EAASF,IAAOC,QAAQC,OAGxBD,GAAU,IADAE,EAAQ,QACMC,QAAQ,CACpCC,OAAQH,EACRI,UAAWP,IAEbE,EAAQG,QAAQ,CACdC,OAAQH,EACRI,UAAWP,EACXQ,eAAe,EACfC,WAAY,IACZC,SAAS,EACTC,IAAK,SAAAA,GACHC,QAAQD,IAAIA,MAoBhB,IAAIE,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC3CC,MAAO,WACPC,SAAU,QAqECC,IA7Dc,WAAO,IAAD,EACWC,mBAAS,IADpB,mBACvBC,EADuB,KACTC,EADS,OAEGF,mBAAS,IAFZ,mBAEvBG,EAFuB,KAEbC,EAFa,KAIzBC,EAAW,uCAAG,4BAAAC,EAAA,sEAEGvB,EAAQwB,SAFX,cAEZC,EAFY,gBAIVzB,EAAQM,gBAJE,OAKhBN,EAAQ0B,SAAQ,SAACC,EAAOC,GACtB,GAAKD,EAAQ,OAAOjB,QAAQiB,MAAMA,GAClC,IAAK,IAAME,KAAWD,EACpB,GAAIA,EAASC,GAAT,WAAkC,GAAI,CACxC,IAAMC,EAASD,EAAU,OACzBD,EAASC,GAAT,YAAmCJ,EAAOK,GAC1B,QAAZD,GACAV,EACIR,EAAUoB,OAAOH,EAASC,GAAT,YAAmCD,EAASC,GAAT,YAOhE,OADAR,EAAYO,GACLH,KApBO,2CAAH,qDAwBjBO,qBAAU,WACNV,IAEA,IAAMW,EAASC,aAAY,WACvBZ,MACD,KAEH,OAAM,kBAAMa,cACRF,MAED,KA/DX,SAAqBG,GACjB,IAAIC,EAAU,GACd,IAAK,IAAMC,KAAQF,EACjBC,EAAQE,KAAK,CACXT,OAAQQ,EACRE,UAAWJ,EAAKE,GAAME,UACtBC,QAASL,EAAKE,GAAMG,QACpBC,YAAaN,EAAKE,GAAMI,YACxBC,YAAcP,EAAKE,GAAMI,YAAcN,EAAKE,GAAME,YA0DtCI,CAAYxB,GAM5B,OAFAV,QAAQD,IAAI,kBAAoBS,GAG5B,cAAC,IAAM2B,SAAP,UACI,cAAC,IAAD,CAAMC,UAAU,0BAAhB,SACI,eAAC,IAAKC,KAAN,WACI,oBAAID,UAAU,kBAAd,4BACA,oBAAIA,UAAU,0BAAd,SAAyC5B,IACzC,sBAAM4B,UAAU,qBAAhB,gCACA,mBAAGA,UAAU,4C,gHCnG3BhD,EAAYC,IAAOC,QAAQF,UAC3BG,EAASF,IAAOC,QAAQC,OAGxBD,GAAU,IADAE,EAAQ,QACMC,QAAQ,CACpCC,OAAQH,EACRI,UAAWP,IAEbE,EAAQG,QAAQ,CACdC,OAAQH,EACRI,UAAWP,EACXQ,eAAe,EACfC,WAAY,IACZC,SAAS,EACTC,IAAK,SAAAA,GACHC,QAAQD,IAAIA,MAoBhB,IAAIE,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC3CC,MAAO,WACPC,SAAU,QAmECiC,IA3De,WAAO,IAAD,EACQ/B,mBAAS,IADjB,mBACxBgC,EADwB,KACXC,EADW,OAEEjC,mBAAS,IAFX,mBAExBG,EAFwB,KAEdC,EAFc,KAI1BC,EAAW,uCAAG,4BAAAC,EAAA,sEAEGvB,EAAQwB,SAFX,cAEZC,EAFY,gBAIVzB,EAAQM,gBAJE,OAKhBN,EAAQ0B,SAAQ,SAACC,EAAOC,GACtB,GAAKD,EAAQ,OAAOjB,QAAQiB,MAAMA,GAClC,IAAK,IAAME,KAAWD,EACpB,GAAIA,EAASC,GAAT,WAAkC,GAAI,CACxC,IAAMC,EAASD,EAAU,OACzBD,EAASC,GAAT,YAAmCJ,EAAOK,GAC1B,QAAZD,GACAqB,EACIvC,EAAUoB,OAAOH,EAASC,GAAT,YAAmCD,EAASC,GAAT,YAOhE,OADAR,EAAYO,GACLH,KApBO,2CAAH,qDAwBjBO,qBAAU,WACNV,IAEA,IAAMW,EAASC,aAAY,WACvBZ,MACD,KAEH,OAAM,kBAAMa,cACRF,MAED,KA/DX,SAAqBG,GACjB,IAAIC,EAAU,GACd,IAAK,IAAMC,KAAQF,EACjBC,EAAQE,KAAK,CACXT,OAAQQ,EACRE,UAAWJ,EAAKE,GAAME,UACtBC,QAASL,EAAKE,GAAMG,QACpBC,YAAaN,EAAKE,GAAMI,YACxBC,YAAcP,EAAKE,GAAMI,YAAcN,EAAKE,GAAME,YA0DtCI,CAAYxB,GAI5B,OACI,cAAC,IAAMyB,SAAP,UACI,cAAC,IAAD,CAAMC,UAAU,2BAAhB,SACI,eAAC,IAAKC,KAAN,WACI,oBAAID,UAAU,kBAAd,6BACA,oBAAIA,UAAU,0BAAd,SAAyCG,IACzC,sBAAMH,UAAU,qBAAhB,gCACA,mBAAGA,UAAU,4C,gHCjG3BhD,EAAYC,IAAOC,QAAQF,UAC3BG,EAASF,IAAOC,QAAQC,OAGxBD,GAAU,IADAE,EAAQ,QACMC,QAAQ,CACpCC,OAAQH,EACRI,UAAWP,IAEbE,EAAQG,QAAQ,CACdC,OAAQH,EACRI,UAAWP,EACXQ,eAAe,EACfC,WAAY,IACZC,SAAS,EACTC,IAAK,SAAAA,GACHC,QAAQD,IAAIA,MAoBhB,IAAIE,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC3CC,MAAO,WACPC,SAAU,QA0ECoC,IAlEY,WAAO,IAAD,EACiBlC,mBAAS,IAD1B,mBACrBmC,EADqB,KACLC,EADK,OAEKpC,mBAAS,IAFd,mBAErBG,EAFqB,KAEXC,EAFW,KAIvBC,EAAW,uCAAG,4BAAAC,EAAA,sEAEGvB,EAAQwB,SAFX,cAEZC,EAFY,gBAIVzB,EAAQM,gBAJE,OAKhBN,EAAQ0B,SAAQ,SAACC,EAAOC,GACtB,GAAKD,EAAQ,OAAOjB,QAAQiB,MAAMA,GAClC,IAAI2B,EAAuB,EAC3B,IAAK,IAAMzB,KAAWD,EAAU,CAC9B,GAAIA,EAASC,GAAT,WAAkC,GAAI,CACxC,IAAMC,EAASD,EAAU,OACzBD,EAASC,GAAT,YAAmCJ,EAAOK,GAC1B,QAAZD,GACAwB,EACI1C,EAAUoB,OAAOH,EAASC,GAAT,YAAmCD,EAASC,GAAT,YAI1DD,EAASC,GAAT,UAAiC,IACjCyB,GAAyB1B,EAASC,GAAT,YAAmCD,EAASC,GAAT,WAEhEnB,QAAQD,IAAI,qBAAuB6C,GAMrC,OAJAD,EACI1C,EAAUoB,OAAOuB,IAErBjC,EAAYO,GACLH,KA3BO,2CAAH,qDA+BjBO,qBAAU,WACNV,IAEA,IAAMW,EAASC,aAAY,WACvBZ,MACD,KAEH,OAAM,kBAAMa,cACRF,MAED,KAtEX,SAAqBG,GACjB,IAAIC,EAAU,GACd,IAAK,IAAMC,KAAQF,EACjBC,EAAQE,KAAK,CACXT,OAAQQ,EACRE,UAAWJ,EAAKE,GAAME,UACtBC,QAASL,EAAKE,GAAMG,QACpBC,YAAaN,EAAKE,GAAMI,YACxBC,YAAcP,EAAKE,GAAMI,YAAcN,EAAKE,GAAME,YAiEtCI,CAAYxB,GAI5B,OACI,cAAC,IAAMyB,SAAP,UACI,cAAC,IAAD,CAAMC,UAAU,2BAAhB,SACI,eAAC,IAAKC,KAAN,WACI,oBAAID,UAAU,kBAAd,0BACA,oBAAIA,UAAU,0BAAd,SAAyCM,IACzC,sBAAMN,UAAU,qBAAhB,gCACA,mBAAGA,UAAU,4C,uGCxG3BhD,EAAYC,IAAOC,QAAQF,UAC3BG,EAASF,IAAOC,QAAQC,OAGxBD,GAAU,IADAE,EAAQ,QACMC,QAAQ,CACpCC,OAAQH,EACRI,UAAWP,IAEbE,EAAQG,QAAQ,CACdC,OAAQH,EACRI,UAAWP,EACXQ,eAAe,EACfC,WAAY,IACZC,SAAS,EACTC,IAAK,SAAAA,GACHC,QAAQD,IAAIA,MAyGD8C,IArEkB,WAAO,IAAD,EAEDtC,mBAAS,IAFR,mBAE3BG,EAF2B,KAEjBC,EAFiB,KAI7BC,EAAW,uCAAG,4BAAAC,EAAA,kEAEhBb,QAFgB,SAEIV,EAAQwD,gBAFZ,+BAERC,KAFQ,yBAGGzD,EAAQwB,SAHX,cAGZC,EAHY,iBAKVzB,EAAQM,gBALE,QAMhBN,EAAQ0B,SAAQ,SAACC,EAAOC,GACtB,GAAKD,EAAQ,OAAOjB,QAAQiB,MAAMA,GAClC,IAAK,IAAME,KAAWD,EACpB,GAAIA,EAASC,GAAT,WAAkC,GAAI,CACxC,IAAMC,EAASD,EAAU,OACzBD,EAASC,GAAT,YAAmCJ,EAAOK,GAM9C,OAHApB,QAAQD,IAAI,iBAAkBmB,GAE9BP,EAAYO,GACLH,KAjBO,4CAAH,qDAqBjBO,qBAAU,WACNV,IAEA,IAAMW,EAASC,aAAY,WACvBZ,MACD,KAEH,OAAM,kBAAMa,cACRF,MAED,IAGP,IAMMG,EA5DV,SAAuBA,GACnB,IAAMsB,EAAU,CACZ,CAAC,SAAU,aAGf,IAAK,IAAM7B,KAAWO,EAClBsB,EAAQnB,KAAK,CACTH,EAAKP,GAAL,OACA8B,WAAWvB,EAAKP,GAAL,aAEfnB,QAAQD,IAAIiD,GAGhB,OAAOA,EA+CME,CA3EjB,SAAqBxB,GACjB,IAAIC,EAAU,GACd,IAAK,IAAMC,KAAQF,EACjBC,EAAQE,KAAK,CACXT,OAAQQ,EACRE,UAAWJ,EAAKE,GAAME,UACtBC,QAASL,EAAKE,GAAMG,QACpBC,YAAaN,EAAKE,GAAMI,YACxBC,YAAcP,EAAKE,GAAMI,YAAcN,EAAKE,GAAME,YAGtD,OAAOH,EA0DSO,CAAYxB,GAEQyC,QAAO,SAAAhC,GAAO,OAC9CA,EAAQW,UAAY,MAKxB,OAAO,cAAC,IAAD,CACHsB,MAAM,OACNC,OAAO,QACPC,UAAU,WACVC,OAAQ,gDACR7B,KAAMA,EASNjC,QAAS,CACL+D,MAAO,cACPC,QAAS,GACTC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,YAEzDC,UAAW,CAAE,cAAe,S,uGCpH9BvE,EAAYC,IAAOC,QAAQF,UAC3BG,EAASF,IAAOC,QAAQC,OAGxBD,GAAU,IADAE,EAAQ,QACMC,QAAQ,CACpCC,OAAQH,EACRI,UAAWP,IAEbE,EAAQG,QAAQ,CACdC,OAAQH,EACRI,UAAWP,EACXQ,eAAe,EACfC,WAAY,IACZC,SAAS,EACTC,IAAK,SAAAA,GACHC,QAAQD,IAAIA,MAyGD6D,IArEkB,WAAO,IAAD,EAEDrD,mBAAS,IAFR,mBAE3BG,EAF2B,KAEjBC,EAFiB,KAI7BC,EAAW,uCAAG,4BAAAC,EAAA,kEAEhBb,QAFgB,SAEIV,EAAQwD,gBAFZ,+BAERC,KAFQ,yBAGGzD,EAAQwB,SAHX,cAGZC,EAHY,iBAKVzB,EAAQM,gBALE,QAMhBN,EAAQ0B,SAAQ,SAACC,EAAOC,GACtB,GAAKD,EAAQ,OAAOjB,QAAQiB,MAAMA,GAClC,IAAK,IAAME,KAAWD,EACpB,GAAIA,EAASC,GAAT,WAAkC,GAAI,CACxC,IAAMC,EAASD,EAAU,OACzBD,EAASC,GAAT,YAAmCJ,EAAOK,GAM9C,OAHApB,QAAQD,IAAI,iBAAkBmB,GAE9BP,EAAYO,GACLH,KAjBO,4CAAH,qDAqBjBO,qBAAU,WACNV,IAEA,IAAMW,EAASC,aAAY,WACvBZ,MACD,KAEH,OAAM,kBAAMa,cACRF,MAED,IAGP,IAMMG,EA5DV,SAAuBA,GACnB,IAAMsB,EAAU,CACZ,CAAC,SAAU,cAGf,IAAK,IAAM7B,KAAWO,EAClBsB,EAAQnB,KAAK,CACTH,EAAKP,GAAL,OACA8B,WAAWvB,EAAKP,GAAL,eAEfnB,QAAQD,IAAIiD,GAGhB,OAAOA,EA+CME,CA3EjB,SAAqBxB,GACjB,IAAIC,EAAU,GACd,IAAK,IAAMC,KAAQF,EACjBC,EAAQE,KAAK,CACXT,OAAQQ,EACRE,UAAWJ,EAAKE,GAAME,UACtBC,QAASL,EAAKE,GAAMG,QACpBC,YAAaN,EAAKE,GAAMI,YACxBC,YAAcP,EAAKE,GAAMI,YAAcN,EAAKE,GAAME,YAGtD,OAAOH,EA0DSO,CAAYxB,GAEQyC,QAAO,SAAAhC,GAAO,OAC9CA,EAAQW,UAAY,MAKxB,OAAO,cAAC,IAAD,CACHsB,MAAM,OACNC,OAAO,QACPC,UAAU,WACVC,OAAQ,gDACR7B,KAAMA,EASNjC,QAAS,CACL+D,MAAO,eACPC,QAAS,GACTC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,YAEzDC,UAAW,CAAE,cAAe,S,kCC1HpC,wHA0DeE,UA9CM,WAEjB,OACI,eAAC,IAAM1B,SAAP,WACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAK2B,GAAI,EAAGC,GAAI,EAAhB,SACI,cAAC,IAAD,MAEJ,cAAC,IAAD,CAAKD,GAAI,EAAGC,GAAI,EAAhB,SACI,cAAC,IAAD,MAEJ,cAAC,IAAD,CAAKD,GAAI,EAAGC,GAAI,EAAhB,SACI,cAAC,IAAD,SAGR,eAAC,IAAD,WACI,cAAC,IAAD,CAAKD,GAAI,EAAGC,GAAI,EAAhB,SACI,eAAC,IAAD,WACI,cAAC,IAAKC,OAAN,UACI,cAAC,IAAKC,MAAN,CAAYC,GAAG,KAAf,qCAEJ,cAAC,IAAK7B,KAAN,UACI,cAAC,IAAD,WAIZ,cAAC,IAAD,CAAKyB,GAAI,EAAGC,GAAI,EAAhB,SACI,eAAC,IAAD,WACI,cAAC,IAAKC,OAAN,UACI,cAAC,IAAKC,MAAN,CAAYC,GAAG,KAAf,qCAEJ,cAAC,IAAK7B,KAAN,UACI,cAAC,IAAD,mB,iCC5C5B,4CAGgB,aAAUD,GACxB,OAAoB+B,IAAMC,YAAW,SAAUC,EAAGC,GAChD,OAAoBH,IAAMI,cAAc,MAAOC,YAAS,GAAIH,EAAG,CAC7DC,IAAKA,EACLlC,UAAWqC,IAAWJ,EAAEjC,UAAWA,W,iCCPzC,2DAKIsC,EAAe,CAAC,KAAM,KAAM,KAAM,KAAM,MACxCC,EAAmBR,IAAMC,YAC7B,SAAUQ,EAAMN,GACd,IAAIO,EAAWD,EAAKC,SAChBzC,EAAYwC,EAAKxC,UACjB0C,EAAUF,EAAKV,GACfa,OAAwB,IAAZD,EAAqB,MAAQA,EACzCE,EAAQC,YAA8BL,EAAM,CAAC,WAAY,YAAa,OAEtEM,EAASC,YAAmBN,EAAU,OACtCO,EAAQ,GACRC,EAAU,GA2Bd,OA1BAX,EAAaY,SAAQ,SAAUC,GAC7B,IAEIC,EACAC,EACAC,EAJAC,EAAYX,EAAMO,GAMtB,UALOP,EAAMO,GAKY,kBAAdI,GAAuC,MAAbA,EAAmB,CACtD,IAAIC,EAAkBD,EAAUH,KAChCA,OAA2B,IAApBI,GAAoCA,EAC3CH,EAASE,EAAUF,OACnBC,EAAQC,EAAUD,WAElBF,EAAOG,EAGT,IAAIE,EAAqB,OAAbN,EAAoB,IAAMA,EAAW,GAC7CC,GAAMJ,EAAMvD,MAAc,IAAT2D,EAAgB,GAAKN,EAASW,EAAQ,GAAKX,EAASW,EAAQ,IAAML,GAC1E,MAATE,GAAeL,EAAQxD,KAAK,QAAUgE,EAAQ,IAAMH,GAC1C,MAAVD,GAAgBJ,EAAQxD,KAAK,SAAWgE,EAAQ,IAAMJ,MAGvDL,EAAMU,QACTV,EAAMvD,KAAKqD,GAGOf,IAAMI,cAAcQ,EAAWP,YAAS,GAAIQ,EAAO,CACrEV,IAAKA,EACLlC,UAAWqC,IAAWsB,WAAM,EAAQ,CAAC3D,GAAW4D,OAAOZ,EAAOC,UAGlEV,EAAIsB,YAAc,MACHtB,O,iCCjDf,2DAKID,EAAe,CAAC,KAAM,KAAM,KAAM,KAAM,MAIxCwB,EAAmB/B,IAAMC,YAAW,SAAUQ,EAAMN,GACtD,IAAIO,EAAWD,EAAKC,SAChBzC,EAAYwC,EAAKxC,UACjB+D,EAAYvB,EAAKuB,UACjBrB,EAAUF,EAAKV,GACfa,OAAwB,IAAZD,EAAqB,MAAQA,EACzCE,EAAQC,YAA8BL,EAAM,CAAC,WAAY,YAAa,YAAa,OAEnFwB,EAAoBjB,YAAmBN,EAAU,OACjDwB,EAAaD,EAAoB,QACjCf,EAAU,GAed,OAdAX,EAAaY,SAAQ,SAAUC,GAC7B,IAEIe,EAFAX,EAAYX,EAAMO,UACfP,EAAMO,GASb,IAAIM,EAAqB,OAAbN,EAAoB,IAAMA,EAAW,GACrC,OANVe,EADe,MAAbX,GAA0C,kBAAdA,EACvBA,EAAUW,KAEVX,IAISN,EAAQxD,KAAK,GAAKwE,EAAaR,EAAQ,IAAMS,MAE7CnC,IAAMI,cAAcQ,EAAWP,YAAS,CAC1DF,IAAKA,GACJU,EAAO,CACR5C,UAAWqC,IAAWsB,WAAM,EAAQ,CAAC3D,EAAWgE,EAAmBD,GAAa,cAAcH,OAAOX,UAGzGa,EAAID,YAAc,MAClBC,EAAIK,aAnCe,CACjBJ,WAAW,GAmCED,O,sHClCXM,EAAuBrC,IAAMC,YACjC,SAAUQ,EAAMN,GACd,IAAIO,EAAWD,EAAKC,SAChBzC,EAAYwC,EAAKxC,UACjBqE,EAAU7B,EAAK6B,QACf3B,EAAUF,EAAKV,GACfa,OAAwB,IAAZD,EAAqB,MAAQA,EACzCE,EAAQC,YAA8BL,EAAM,CAAC,WAAY,YAAa,UAAW,OAEjFM,EAASC,YAAmBN,EAAU,YAC1C,OAAoBV,IAAMI,cAAcQ,EAAWP,YAAS,CAC1DF,IAAKA,EACLlC,UAAWqC,IAAWgC,EAAUvB,EAAS,IAAMuB,EAAUvB,EAAQ9C,IAChE4C,OAELwB,EAAQP,YAAc,UACtBO,EAAQD,aAnBW,CACjBE,QAAS,MAmBID,QChBXE,EAAgBC,YAAiB,MACjCC,EAAgBD,YAAiB,MACjCE,EAAWC,YAAmB,aAC9BC,EAAYD,YAAmB,aAAc,CAC/C/B,UAAW2B,IAETM,EAAeF,YAAmB,gBAAiB,CACrD/B,UAAW6B,IAETK,EAAWH,YAAmB,YAAa,CAC7C/B,UAAW,MAETmC,EAAWJ,YAAmB,YAAa,CAC7C/B,UAAW,MAEToC,EAAaL,YAAmB,eAChCM,EAAaN,YAAmB,eAChCO,EAAiBP,YAAmB,oBAIpCQ,EAAoBnD,IAAMC,YAAW,SAAUQ,EAAMN,GACvD,IAAIO,EAAWD,EAAKC,SAChBzC,EAAYwC,EAAKxC,UACjBmF,EAAK3C,EAAK2C,GACVC,EAAO5C,EAAK4C,KACZC,EAAS7C,EAAK6C,OACdC,EAAO9C,EAAK8C,KACZC,EAAW/C,EAAK+C,SAChB7C,EAAUF,EAAKV,GACfa,OAAwB,IAAZD,EAAqB,MAAQA,EACzCE,EAAQC,YAA8BL,EAAM,CAAC,WAAY,YAAa,KAAM,OAAQ,SAAU,OAAQ,WAAY,OAElHM,EAASC,YAAmBN,EAAU,QACtC+C,EAAcC,mBAAQ,WACxB,MAAO,CACLC,mBAAoB5C,EAAS,aAE9B,CAACA,IACJ,OAAoBf,IAAMI,cAAcwD,IAAYC,SAAU,CAC5DC,MAAOL,GACOzD,IAAMI,cAAcQ,EAAWP,YAAS,CACtDF,IAAKA,GACJU,EAAO,CACR5C,UAAWqC,IAAWrC,EAAW8C,EAAQqC,GAAM,MAAQA,EAAIC,GAAQ,QAAUA,EAAMC,GAAU,UAAYA,KACvGC,EAGJvD,IAAMI,cAAcsC,EAAU,KAAMc,GAAYA,OAElDL,EAAKrB,YAAc,OACnBqB,EAAKf,aAjCc,CACjBmB,MAAM,GAiCRJ,EAAKY,IAAM1B,EACXc,EAAKrD,MAAQ8C,EACbO,EAAKa,SAAWnB,EAChBM,EAAKjF,KAAOwE,EACZS,EAAKc,KAAOnB,EACZK,EAAKe,KAAOnB,EACZI,EAAKtD,OAASmD,EACdG,EAAKgB,OAASlB,EACdE,EAAKiB,WAAalB,EACHC","file":"static/js/20.9e2370fe.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { CONFIG } from '../../../config/constant';\r\n\r\n//API Configuration\r\n///Import for API Keys from Config\r\nconst secretKey = CONFIG.binance.secretKey;\r\nconst apiKey = CONFIG.binance.apiKey;\r\n//Binance API\r\nconst Binance = require('node-binance-api');\r\nconst binance = new Binance().options({\r\n  APIKEY: apiKey,\r\n  APISECRET: secretKey\r\n});\r\nbinance.options({\r\n  APIKEY: apiKey,\r\n  APISECRET: secretKey,\r\n  useServerTime: true,\r\n  recvWindow: 5000, // Set a higher recvWindow to increase response timeout\r\n  verbose: true, // Add extra output when subscribing to WebSockets, etc\r\n  log: log => {\r\n    console.log(log); // You can create your own logger here, or disable console output\r\n  }\r\n});\r\n\r\n//Refactor Data Function\r\nfunction objectParse(data) {\r\n    let newData = [];\r\n    for (const prop in data) {\r\n      newData.push({\r\n        symbol: prop,\r\n        available: data[prop].available,\r\n        onOrder: data[prop].onOrder,\r\n        marketPrice: data[prop].marketPrice,\r\n        marketValue: (data[prop].marketPrice * data[prop].available),\r\n      })\r\n    };\r\n    return newData;\r\n};\r\n\r\n//Currency Formatter\r\nvar formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  \r\n    // These options are needed to round to whole numbers if that's what you want.\r\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\r\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\r\n});\r\n  \r\n  \r\nconst BitcoinWalletValCard = () => {\r\n    const [ bitcoinPrice, setBitcoinPrice ] = useState('');\r\n    const [ holdings, setHoldings ] = useState('');\r\n\r\n    const getHoldings = async () => {\r\n        //Binance API\r\n        let ticker = await binance.prices();\r\n        // console.log(\"TICKER LIST\", ticker);\r\n        await binance.useServerTime();\r\n        binance.balance((error, balances) => {\r\n          if ( error ) return console.error(error);\r\n          for (const holding in balances) {\r\n            if (balances[holding]['available'] > -10) {\r\n              const symbol = holding + \"BUSD\";\r\n              balances[holding]['marketPrice'] = ticker[symbol];\r\n              if (holding === \"BTC\") {\r\n                  setBitcoinPrice(\r\n                      formatter.format(balances[holding]['marketPrice'] * balances[holding]['available'])\r\n                    )\r\n              };\r\n            };\r\n            \r\n          };\r\n          setHoldings(balances)\r\n          return ticker;\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getHoldings()\r\n  \r\n        const interval=setInterval(() => {\r\n            getHoldings()\r\n        }, 10000)\r\n  \r\n        return() => clearInterval(\r\n            interval\r\n            )\r\n        }, []\r\n    );\r\n\r\n    const dataOne = objectParse(holdings);\r\n\r\n    const data = dataOne;\r\n\r\n    console.log('Bitcoin Price: ' + bitcoinPrice);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Card className='theme-bg bitcoin-wallet'>\r\n                <Card.Body>\r\n                    <h5 className=\"text-white mb-2\">Bitcoin Wallet</h5>\r\n                    <h2 className=\"text-white mb-3 f-w-300\">{bitcoinPrice}</h2>\r\n                    <span className=\"text-white d-block\">Pricing by Binance</span>\r\n                    <i className=\"fab fa-bitcoin f-70 text-white\"/>\r\n                </Card.Body>\r\n            </Card>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default BitcoinWalletValCard;","import React, { useState, useEffect } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { CONFIG } from '../../../config/constant';\r\n\r\n//API Configuration\r\n///Import for API Keys from Config\r\nconst secretKey = CONFIG.binance.secretKey;\r\nconst apiKey = CONFIG.binance.apiKey;\r\n//Binance API\r\nconst Binance = require('node-binance-api');\r\nconst binance = new Binance().options({\r\n  APIKEY: apiKey,\r\n  APISECRET: secretKey\r\n});\r\nbinance.options({\r\n  APIKEY: apiKey,\r\n  APISECRET: secretKey,\r\n  useServerTime: true,\r\n  recvWindow: 5000, // Set a higher recvWindow to increase response timeout\r\n  verbose: true, // Add extra output when subscribing to WebSockets, etc\r\n  log: log => {\r\n    console.log(log); // You can create your own logger here, or disable console output\r\n  }\r\n});\r\n\r\n//Refactor Data Function\r\nfunction objectParse(data) {\r\n    let newData = [];\r\n    for (const prop in data) {\r\n      newData.push({\r\n        symbol: prop,\r\n        available: data[prop].available,\r\n        onOrder: data[prop].onOrder,\r\n        marketPrice: data[prop].marketPrice,\r\n        marketValue: (data[prop].marketPrice * data[prop].available),\r\n      })\r\n    };\r\n    return newData;\r\n};\r\n\r\n//Currency Formatter\r\nvar formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  \r\n    // These options are needed to round to whole numbers if that's what you want.\r\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\r\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\r\n});\r\n  \r\n  \r\nconst EthereumWalletValCard = () => {\r\n    const [ EthereumVal, setEthereumVal ] = useState('');\r\n    const [ holdings, setHoldings ] = useState('');\r\n\r\n    const getHoldings = async () => {\r\n        //Binance API\r\n        let ticker = await binance.prices();\r\n        // console.log(\"TICKER LIST\", ticker);\r\n        await binance.useServerTime();\r\n        binance.balance((error, balances) => {\r\n          if ( error ) return console.error(error);\r\n          for (const holding in balances) {\r\n            if (balances[holding]['available'] > -10) {\r\n              const symbol = holding + \"BUSD\";\r\n              balances[holding]['marketPrice'] = ticker[symbol];\r\n              if (holding === \"ETH\") {\r\n                  setEthereumVal(\r\n                      formatter.format(balances[holding]['marketPrice'] * balances[holding]['available'])\r\n                    )\r\n              };\r\n            };\r\n            \r\n          };\r\n          setHoldings(balances)\r\n          return ticker;\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getHoldings()\r\n  \r\n        const interval=setInterval(() => {\r\n            getHoldings()\r\n        }, 10000)\r\n  \r\n        return() => clearInterval(\r\n            interval\r\n            )\r\n        }, []\r\n    );\r\n\r\n    const dataOne = objectParse(holdings);\r\n\r\n    const data = dataOne;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Card className='theme-bg2 bitcoin-wallet'>\r\n                <Card.Body>\r\n                    <h5 className=\"text-white mb-2\">Ethereum Wallet</h5>\r\n                    <h2 className=\"text-white mb-3 f-w-300\">{EthereumVal}</h2>\r\n                    <span className=\"text-white d-block\">Pricing by Binance</span>\r\n                    <i className=\"fab fa-bitcoin f-70 text-white\"/>\r\n                </Card.Body>\r\n            </Card>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default EthereumWalletValCard;","import React, { useState, useEffect } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { CONFIG } from '../../../config/constant';\r\n\r\n//API Configuration\r\n///Import for API Keys from Config\r\nconst secretKey = CONFIG.binance.secretKey;\r\nconst apiKey = CONFIG.binance.apiKey;\r\n//Binance API\r\nconst Binance = require('node-binance-api');\r\nconst binance = new Binance().options({\r\n  APIKEY: apiKey,\r\n  APISECRET: secretKey\r\n});\r\nbinance.options({\r\n  APIKEY: apiKey,\r\n  APISECRET: secretKey,\r\n  useServerTime: true,\r\n  recvWindow: 5000, // Set a higher recvWindow to increase response timeout\r\n  verbose: true, // Add extra output when subscribing to WebSockets, etc\r\n  log: log => {\r\n    console.log(log); // You can create your own logger here, or disable console output\r\n  }\r\n});\r\n\r\n//Refactor Data Function\r\nfunction objectParse(data) {\r\n    let newData = [];\r\n    for (const prop in data) {\r\n      newData.push({\r\n        symbol: prop,\r\n        available: data[prop].available,\r\n        onOrder: data[prop].onOrder,\r\n        marketPrice: data[prop].marketPrice,\r\n        marketValue: (data[prop].marketPrice * data[prop].available),\r\n      })\r\n    };\r\n    return newData;\r\n};\r\n\r\n//Currency Formatter\r\nvar formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  \r\n    // These options are needed to round to whole numbers if that's what you want.\r\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\r\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\r\n});\r\n  \r\n  \r\nconst TotalWalletValCard = () => {\r\n    const [ TotalWalletVal, setTotalWalletVal ] = useState('');\r\n    const [ holdings, setHoldings ] = useState('');\r\n\r\n    const getHoldings = async () => {\r\n        //Binance API\r\n        let ticker = await binance.prices();\r\n        // console.log(\"TICKER LIST\", ticker);\r\n        await binance.useServerTime();\r\n        binance.balance((error, balances) => {\r\n          if ( error ) return console.error(error);\r\n          let totalWalletValuation = 0;\r\n          for (const holding in balances) {\r\n            if (balances[holding]['available'] > -10) {\r\n              const symbol = holding + \"BUSD\";\r\n              balances[holding]['marketPrice'] = ticker[symbol];\r\n              if (holding === \"ETH\") {\r\n                  setTotalWalletVal(\r\n                      formatter.format(balances[holding]['marketPrice'] * balances[holding]['available'])\r\n                    )\r\n              };\r\n            };\r\n            if (balances[holding]['available'] > 0) {\r\n                totalWalletValuation += (balances[holding]['marketPrice'] * balances[holding]['available']);\r\n            }\r\n            console.log('Total Wallet Val: ' + totalWalletValuation)\r\n          };\r\n          setTotalWalletVal(\r\n              formatter.format(totalWalletValuation)\r\n            );\r\n          setHoldings(balances)\r\n          return ticker;\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getHoldings()\r\n  \r\n        const interval=setInterval(() => {\r\n            getHoldings()\r\n        }, 10000)\r\n  \r\n        return() => clearInterval(\r\n            interval\r\n            )\r\n        }, []\r\n    );\r\n\r\n    const dataOne = objectParse(holdings);\r\n\r\n    const data = dataOne;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Card className='bg-c-blue bitcoin-wallet'>\r\n                <Card.Body>\r\n                    <h5 className=\"text-white mb-2\">Total Wallet</h5>\r\n                    <h2 className=\"text-white mb-3 f-w-300\">{TotalWalletVal}</h2>\r\n                    <span className=\"text-white d-block\">Pricing by Binance</span>\r\n                    <i className=\"fab fa-bitcoin f-70 text-white\"/>\r\n                </Card.Body>\r\n            </Card>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TotalWalletValCard;","import React, { useState, useEffect } from 'react';\r\nimport { CONFIG } from '../../../../config/constant';\r\nimport Chart from 'react-google-charts';\r\n\r\n//API Configuration\r\n///Import for API Keys from Config\r\nconst secretKey = CONFIG.binance.secretKey;\r\nconst apiKey = CONFIG.binance.apiKey;\r\n//Binance API\r\nconst Binance = require('node-binance-api');\r\nconst binance = new Binance().options({\r\n  APIKEY: apiKey,\r\n  APISECRET: secretKey\r\n});\r\nbinance.options({\r\n  APIKEY: apiKey,\r\n  APISECRET: secretKey,\r\n  useServerTime: true,\r\n  recvWindow: 5000, // Set a higher recvWindow to increase response timeout\r\n  verbose: true, // Add extra output when subscribing to WebSockets, etc\r\n  log: log => {\r\n    console.log(log); // You can create your own logger here, or disable console output\r\n  }\r\n});\r\n\r\n//Refactor Data Function\r\nfunction objectParse(data) {\r\n    let newData = [];\r\n    for (const prop in data) {\r\n      newData.push({\r\n        symbol: prop,\r\n        available: data[prop].available,\r\n        onOrder: data[prop].onOrder,\r\n        marketPrice: data[prop].marketPrice,\r\n        marketValue: (data[prop].marketPrice * data[prop].available),\r\n      })\r\n    };\r\n    return newData;\r\n};\r\n\r\n//Create Data for Pie Chart from data set\r\nfunction createPieData(data) {\r\n    const pieData = [\r\n        ['Symbol', 'Quantity']\r\n    ];\r\n\r\n    for (const holding in data) {\r\n        pieData.push([\r\n            data[holding]['symbol'],\r\n            parseFloat(data[holding]['available'])\r\n        ]);\r\n        console.log(pieData);\r\n    };\r\n\r\n    return pieData;\r\n}\r\n\r\nconst HoldingsQtyPieDonutChart = () => {\r\n\r\n    const [ holdings, setHoldings ] = useState('');\r\n\r\n    const getHoldings = async () => {\r\n        //Binance API\r\n        console.info( await binance.futuresPrices() );\r\n        let ticker = await binance.prices();\r\n        // console.log(\"TICKER LIST\", ticker);\r\n        await binance.useServerTime();\r\n        binance.balance((error, balances) => {\r\n          if ( error ) return console.error(error);\r\n          for (const holding in balances) {\r\n            if (balances[holding]['available'] > -10) {\r\n              const symbol = holding + \"BUSD\";\r\n              balances[holding]['marketPrice'] = ticker[symbol];\r\n            }\r\n          };\r\n          console.log(\"Final Balances\", balances);\r\n    \r\n          setHoldings(balances)\r\n          return ticker;\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getHoldings()\r\n  \r\n        const interval=setInterval(() => {\r\n            getHoldings()\r\n        }, 10000)\r\n  \r\n        return() => clearInterval(\r\n            interval\r\n            )\r\n        }, []\r\n    );\r\n\r\n    const dataOne = objectParse(holdings);\r\n\r\n    const filteredHoldingsTwo = dataOne.filter(holding => \r\n        holding.available > 0\r\n    );\r\n\r\n    const data = createPieData(filteredHoldingsTwo);\r\n\r\n    return <Chart\r\n        width='100%'\r\n        height='300px'\r\n        chartType=\"PieChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={data}\r\n        // data={[\r\n        //     ['Task', 'Hours per Day'],\r\n        //     ['Work', 11],\r\n        //     ['Eat', 2],\r\n        //     ['Commute', 2],\r\n        //     ['Watch TV', 2],\r\n        //     ['Sleep', 7],\r\n        // ]}\r\n        options={{\r\n            title: 'by Quantity',\r\n            pieHole: 0.4,\r\n            colors: ['#1dc4e9', '#1de9b6', '#3ebfea', '#A389D4', '#899FD4']\r\n        }}\r\n        rootProps={{ 'data-testid': '3' }}\r\n    />;\r\n}\r\n\r\nexport default HoldingsQtyPieDonutChart;","import React, { useState, useEffect } from 'react';\r\nimport { CONFIG } from '../../../../config/constant';\r\nimport Chart from 'react-google-charts';\r\n\r\n//API Configuration\r\n///Import for API Keys from Config\r\nconst secretKey = CONFIG.binance.secretKey;\r\nconst apiKey = CONFIG.binance.apiKey;\r\n//Binance API\r\nconst Binance = require('node-binance-api');\r\nconst binance = new Binance().options({\r\n  APIKEY: apiKey,\r\n  APISECRET: secretKey\r\n});\r\nbinance.options({\r\n  APIKEY: apiKey,\r\n  APISECRET: secretKey,\r\n  useServerTime: true,\r\n  recvWindow: 5000, // Set a higher recvWindow to increase response timeout\r\n  verbose: true, // Add extra output when subscribing to WebSockets, etc\r\n  log: log => {\r\n    console.log(log); // You can create your own logger here, or disable console output\r\n  }\r\n});\r\n\r\n//Refactor Data Function\r\nfunction objectParse(data) {\r\n    let newData = [];\r\n    for (const prop in data) {\r\n      newData.push({\r\n        symbol: prop,\r\n        available: data[prop].available,\r\n        onOrder: data[prop].onOrder,\r\n        marketPrice: data[prop].marketPrice,\r\n        marketValue: (data[prop].marketPrice * data[prop].available),\r\n      })\r\n    };\r\n    return newData;\r\n};\r\n\r\n//Create Data for Pie Chart from data set\r\nfunction createPieData(data) {\r\n    const pieData = [\r\n        ['Symbol', 'Valuation']\r\n    ];\r\n\r\n    for (const holding in data) {\r\n        pieData.push([\r\n            data[holding]['symbol'],\r\n            parseFloat(data[holding]['marketValue'])\r\n        ]);\r\n        console.log(pieData);\r\n    };\r\n\r\n    return pieData;\r\n}\r\n\r\nconst HoldingsValPieDonutChart = () => {\r\n\r\n    const [ holdings, setHoldings ] = useState('');\r\n\r\n    const getHoldings = async () => {\r\n        //Binance API\r\n        console.info( await binance.futuresPrices() );\r\n        let ticker = await binance.prices();\r\n        // console.log(\"TICKER LIST\", ticker);\r\n        await binance.useServerTime();\r\n        binance.balance((error, balances) => {\r\n          if ( error ) return console.error(error);\r\n          for (const holding in balances) {\r\n            if (balances[holding]['available'] > -10) {\r\n              const symbol = holding + \"BUSD\";\r\n              balances[holding]['marketPrice'] = ticker[symbol];\r\n            }\r\n          };\r\n          console.log(\"Final Balances\", balances);\r\n    \r\n          setHoldings(balances)\r\n          return ticker;\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getHoldings()\r\n  \r\n        const interval=setInterval(() => {\r\n            getHoldings()\r\n        }, 10000)\r\n  \r\n        return() => clearInterval(\r\n            interval\r\n            )\r\n        }, []\r\n    );\r\n\r\n    const dataOne = objectParse(holdings);\r\n\r\n    const filteredHoldingsTwo = dataOne.filter(holding => \r\n        holding.available > 0\r\n    );\r\n\r\n    const data = createPieData(filteredHoldingsTwo);\r\n\r\n    return <Chart\r\n        width='100%'\r\n        height='300px'\r\n        chartType=\"PieChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={data}\r\n        // data={[\r\n        //     ['Task', 'Hours per Day'],\r\n        //     ['Work', 11],\r\n        //     ['Eat', 2],\r\n        //     ['Commute', 2],\r\n        //     ['Watch TV', 2],\r\n        //     ['Sleep', 7],\r\n        // ]}\r\n        options={{\r\n            title: 'by Valuation',\r\n            pieHole: 0.4,\r\n            colors: ['#1dc4e9', '#1de9b6', '#3ebfea', '#A389D4', '#899FD4']\r\n        }}\r\n        rootProps={{ 'data-testid': '3' }}\r\n    />;\r\n}\r\n\r\nexport default HoldingsValPieDonutChart;","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Card, Table, Tab, Nav, Form, InputGroup, FormControl } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport BitcoinWalletValCard from \"../../../../../components/cryptX/cards/BitcoinWalletVal.js\";\r\nimport EthereumWalletValCard from \"../../../../../components/cryptX/cards/EthereumWalletVal.js\";\r\nimport TotalWalletValCard from \"../../../../../components/cryptX/cards/TotalWalletVal.js\";\r\nimport HoldingsQtyPieDonutChart from \"../../../../../components/cryptX/charts/chart/HoldingsQtyPieDonutChart.js\";\r\nimport HoldingsValPieDonutChart from \"../../../../../components/cryptX/charts/chart/HoldingsValPieDonutChart.js\";\r\n\r\nimport axios from 'axios';\r\n\r\nconst DashHoldings = () => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col md={6} xl={4}>\r\n                    <BitcoinWalletValCard></BitcoinWalletValCard>\r\n                </Col>\r\n                <Col md={6} xl={4}>\r\n                    <EthereumWalletValCard></EthereumWalletValCard>\r\n                </Col>\r\n                <Col md={6} xl={4}>\r\n                    <TotalWalletValCard></TotalWalletValCard>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={6} xl={6}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Portfolio Composition</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <HoldingsQtyPieDonutChart></HoldingsQtyPieDonutChart>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col md={6} xl={6}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Portfolio Composition</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <HoldingsValPieDonutChart></HoldingsValPieDonutChart>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    )\r\n\r\n    \r\n\r\n\r\n\r\n}\r\n\r\nexport default DashHoldings;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return /*#__PURE__*/React.forwardRef(function (p, ref) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;"],"sourceRoot":""}