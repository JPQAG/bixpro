{"version":3,"sources":["views/maps/google-maps/InfoBox.js","views/maps/google-maps/MarkerClusterer.js","views/maps/google-maps/Marker.js","views/maps/google-maps/StreetViewPanorma.js","views/maps/GoogleMaps.js","components/Widgets/Statistic/Notification.js"],"names":["StyledMapWithAnInfoBox","compose","withProps","googleMapURL","loadingElement","style","height","containerElement","mapElement","center","lat","lng","withStateHandlers","isOpen","onToggleOpen","withScriptjs","withGoogleMap","props","defaultZoom","defaultCenter","defaultOptions","styles","fancyMapStyles","defaultPosition","google","maps","LatLng","options","closeBoxURL","enableEventPropagation","backgroundColor","opacity","padding","fontSize","fontColor","position","onClick","onCloseClick","MarkerClusterer","require","MapWithAMarkerClusterer","withHandlers","onMarkerClustererClick","markerClusterer","clickedMarkers","getMarkers","console","log","length","averageCenter","enableRetinaIcons","gridSize","markers","map","marker","latitude","longitude","photo_id","MapWithAMarker","GoogleMap","StreetViewPanorama","OverlayView","getPixelPositionOffset","width","x","y","StreetViewPanormaWithAnOverlayView","visible","mapPaneName","OVERLAY_LAYER","background","color","borderRadius","GoogleMaps","useState","setMarkers","useEffect","url","join","fetch","then","res","json","data","photos","Fragment","Row","Col","sm","message","link","xl","Card","Header","Title","as","Body","Marker","StreetViewPanorma","Notification","variant","Link","href","target","className"],"mappings":"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","file":"static/js/140.1a860ab1.chunk.js","sourcesContent":["/*global google*/\r\n\r\nimport InfoBox from 'react-google-maps/lib/components/addons/InfoBox';\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\r\nimport { compose, withProps, withStateHandlers } from 'recompose';\r\nimport fancyMapStyles from './fancy-map-styles.json';\r\n\r\nconst StyledMapWithAnInfoBox = compose(\r\n  withProps({\r\n    googleMapURL: 'https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places',\r\n    loadingElement: <div style={{ height: `100%` }} />,\r\n    containerElement: <div style={{ height: `400px` }} />,\r\n    mapElement: <div style={{ height: `100%` }} />,\r\n    center: { lat: 28.5274851, lng: 77.1389452 },\r\n  }),\r\n  withStateHandlers(() => ({\r\n    isOpen: false,\r\n  }), {\r\n    onToggleOpen: ({ isOpen }) => () => ({\r\n      isOpen: !isOpen,\r\n    })\r\n  }),\r\n  withScriptjs,\r\n  withGoogleMap\r\n)(props =>\r\n  <GoogleMap\r\n    defaultZoom={5}\r\n    defaultCenter={props.center}\r\n    defaultOptions={{ styles: fancyMapStyles }}\r\n  >\r\n    <InfoBox\r\n      defaultPosition={new google.maps.LatLng(props.center.lat, props.center.lng)}\r\n      options={{ closeBoxURL: ``, enableEventPropagation: true }}\r\n    >\r\n      <div style={{ backgroundColor: `yellow`, opacity: 0.75, padding: `12px` }}>\r\n        <div style={{ fontSize: `16px`, fontColor: `#08233B` }}>\r\n          Hello, India!\r\n        </div>\r\n      </div>\r\n    </InfoBox>\r\n    <Marker\r\n      position={{ lat: 23.0204978, lng: 72.4396583 }}\r\n      onClick={props.onToggleOpen}\r\n    >\r\n      {props.isOpen && <InfoBox\r\n        onCloseClick={props.onToggleOpen}\r\n        options={{ closeBoxURL: ``, enableEventPropagation: true }}\r\n      >\r\n        <div style={{ backgroundColor: `yellow`, opacity: 0.75, padding: `12px` }}>\r\n          <div style={{ fontSize: `16px`, fontColor: `#08233B` }}>\r\n            Hello, Gujarat!\r\n          </div>\r\n        </div>\r\n      </InfoBox>}\r\n    </Marker>\r\n  </GoogleMap>\r\n);\r\n\r\nexport default StyledMapWithAnInfoBox;","import { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\r\nimport { compose, withProps, withHandlers } from 'recompose';\r\n\r\nconst { MarkerClusterer } = require(\"react-google-maps/lib/components/addons/MarkerClusterer\");\r\n\r\nconst MapWithAMarkerClusterer = compose(\r\n  withProps({\r\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places\",\r\n    loadingElement: <div style={{ height: `100%` }} />,\r\n    containerElement: <div style={{ height: `400px` }} />,\r\n    mapElement: <div style={{ height: `100%` }} />,\r\n  }),\r\n  withHandlers({\r\n    onMarkerClustererClick: () => (markerClusterer) => {\r\n      const clickedMarkers = markerClusterer.getMarkers()\r\n      console.log(`Current clicked markers length: ${clickedMarkers.length}`)\r\n      console.log(clickedMarkers)\r\n    },\r\n  }),\r\n  withScriptjs,\r\n  withGoogleMap\r\n)(props =>\r\n  <GoogleMap\r\n    defaultZoom={3}\r\n    defaultCenter={{ lat: 25.0391667, lng: 121.525 }}\r\n  >\r\n    <MarkerClusterer\r\n      onClick={props.onMarkerClustererClick}\r\n      averageCenter\r\n      enableRetinaIcons\r\n      gridSize={60}\r\n    >\r\n      {props.markers.map(marker => (\r\n        <Marker\r\n          key={marker.photo_id}\r\n          position={{ lat: marker.latitude, lng: marker.longitude }}\r\n        />\r\n      ))}\r\n    </MarkerClusterer>\r\n  </GoogleMap>\r\n);\r\n\r\nexport default MapWithAMarkerClusterer;","import { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\r\nimport { compose } from 'recompose';\r\n\r\nconst MapWithAMarker = compose(\r\n  withScriptjs,\r\n  withGoogleMap\r\n)(props =>\r\n  <GoogleMap\r\n    defaultZoom={8}\r\n    defaultCenter={{ lat: 28.5274851, lng: 77.1389452 }}\r\n  >\r\n    <Marker\r\n      position={{ lat: 28.5274851, lng: 77.1389452 }}\r\n    />\r\n  </GoogleMap>\r\n);\r\n\r\nexport default MapWithAMarker;","const { compose, withProps } = require(\"recompose\");\r\n\r\nconst {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  StreetViewPanorama,\r\n  OverlayView,\r\n} = require(\"react-google-maps\");\r\n\r\nconst getPixelPositionOffset = (width, height) => ({\r\n  x: -(width / 2),\r\n  y: -(height / 2),\r\n})\r\n\r\nconst StreetViewPanormaWithAnOverlayView = compose(\r\n  withProps({\r\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places\",\r\n    loadingElement: <div style={{ height: `100%` }} />,\r\n    containerElement: <div style={{ height: `400px` }} />,\r\n    mapElement: <div style={{ height: `100%` }} />,\r\n    center: { lat: 49.2853171, lng: -123.1119202 },\r\n  }),\r\n  withScriptjs,\r\n  withGoogleMap\r\n)(props =>\r\n  <GoogleMap defaultZoom={8} defaultCenter={props.center}>\r\n    <StreetViewPanorama defaultPosition={props.center} visible>\r\n      <OverlayView\r\n        position={{ lat: 49.28590291211115, lng: -123.11248166065218 }}\r\n          mapPaneName={OverlayView.OVERLAY_LAYER}\r\n          getPixelPositionOffset={getPixelPositionOffset}\r\n      >\r\n        <div style={{ background: `red`, color: `white`, padding: 5, borderRadius: `50%` }}>\r\n          OverlayView\r\n        </div>\r\n      </OverlayView>\r\n    </StreetViewPanorama>\r\n  </GoogleMap>\r\n);\r\n\r\nexport default StreetViewPanormaWithAnOverlayView;","import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport InfoBox from './google-maps/InfoBox';\r\nimport MarkerClusterer from './google-maps/MarkerClusterer';\r\nimport Marker from './google-maps/Marker';\r\nimport StreetViewPanorma from './google-maps/StreetViewPanorma';\r\nimport ModuleNotification from '../../components/Widgets/Statistic/Notification';\r\n\r\nimport fetch from 'isomorphic-fetch';\r\n\r\n\r\nconst GoogleMaps = () => {\r\n    const [markers, setMarkers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const url = [\r\n            // Length issue\r\n            `https://gist.githubusercontent.com`,\r\n            `/farrrr/dfda7dd7fccfec5474d3`,\r\n            `/raw/758852bbc1979f6c4522ab4e92d1c92cba8fb0dc/data.json`\r\n          ].join(\"\")\r\n      \r\n          fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n              setMarkers(data.photos);\r\n            });\r\n\r\n            return () => {\r\n                setMarkers([]);\r\n            }\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col sm={12}>  \r\n                    <ModuleNotification message=\"For more info please check the components's official documentation\" link='https://www.npmjs.com/package/react-google-maps' />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Default Marker</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                        <Marker\r\n                            googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places\"\r\n                            loadingElement={<div style={{ height: `100%` }} />}\r\n                            containerElement={<div style={{ height: `400px` }} />}\r\n                            mapElement={<div style={{ height: `100%` }} />}\r\n                            />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col xl={6}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Infobox</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <InfoBox />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col xl={6}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Marker Clusterer</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <MarkerClusterer markers={markers} />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col xl={6}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Street View Panorma</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <StreetViewPanorma />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default GoogleMaps;","import React from \"react\";\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Notification = props => {\r\n    return (\r\n        <React.Fragment>\r\n            <Alert variant='warning'>\r\n                {props.message}\r\n                <Alert.Link href={props.link} target='_blank' className='float-right'>Demo & Documentation</Alert.Link>\r\n            </Alert>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Notification;"],"sourceRoot":""}