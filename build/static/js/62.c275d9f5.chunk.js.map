{"version":3,"sources":["components/Card/MainCard.js","../node_modules/react-bootstrap/esm/Collapse.js","../node_modules/react-bootstrap/esm/ButtonGroup.js","../node_modules/react-bootstrap/esm/ToggleButton.js","../node_modules/react-bootstrap/esm/ButtonToolbar.js","../node_modules/react-bootstrap/esm/Tooltip.js","../node_modules/react-bootstrap/esm/DropdownButton.js","../node_modules/react-bootstrap/esm/ToggleButtonGroup.js","../node_modules/react-bootstrap/esm/SplitButton.js","views/ui-elements/basic/BasicButton.js","components/Widgets/Statistic/Notification.js"],"names":["MainCard","props","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","isOption","title","children","cardClass","optionClass","useState","fullCard","setFullCard","collapseCard","setCollapseCard","loadCard","setloadCard","cardRemove","setCardRemove","windowSize","useWindowSize","mainCardClass","className","alignRight","Toggle","id","Menu","as","Item","onClick","to","setInterval","Header","Title","position","top","left","right","width","height","join","style","in","Body","Fragment","_collapseStyles","MARGINS","getDefaultDimensionValue","dimension","elem","value","toUpperCase","slice","margins","parseInt","css","collapseStyles","EXITED","EXITING","ENTERING","ENTERED","defaultProps","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","Collapse","React","forwardRef","_ref","ref","onEnter","onEntering","onEntered","onExit","onExiting","_ref$dimension","_ref$getDimensionValu","_objectWithoutPropertiesLoose","computedDimension","handleEnter","useMemo","createChainedFunction","handleEntering","scroll","handleEntered","handleExit","triggerBrowserReflow","handleExiting","createElement","Transition","_extends","addEndListener","transitionEnd","role","state","innerProps","cloneElement","classNames","ButtonGroup","bsPrefix","size","toggle","vertical","_ref$as","Component","rest","prefix","useBootstrapPrefix","baseClass","displayName","noop","ToggleButton","name","checked","type","onChange","disabled","inputRef","_useState","focused","setFocused","handleFocus","useCallback","e","target","tagName","handleBlur","Button","undefined","active","autoComplete","onFocus","onBlur","ButtonToolbar","Tooltip","placement","arrowProps","popper","show","primaryPlacement","split","propTypes","PropTypes","any","href","string","func","node","isRequired","bool","menuAlign","alignPropType","menuRole","renderMenuOnMount","rootCloseEvent","variant","DropdownButton","Dropdown","DropdownToggle","childBsPrefix","DropdownMenu","align","renderOnMount","ToggleButtonGroup","_useUncontrolled","useUncontrolled","controlledProps","getValues","concat","invariant","map","child","values","_child$props","childVal","childOnChange","indexOf","chainFunction","inputVal","event","isActive","filter","n","handleToggle","toggleLabel","SplitButton","toString","BasicButton","buttonVariants","buttonOptions","icon","buttonOnlyIconOptions","basicButtons","idx","OverlayTrigger","overlay","outlineButtons","squareButtons","disabledButtons","roundedButtons","glowButtons","iconButtons","button","outlineIconButtons","onlyIconButtons","onlyOutlineIconButtons","onlyIconRoundedButtons","onlyOutlineIconRoundedButtons","basicDropdownButton","eventKey","splitDropdownButton","Divider","basicOutlineDropdownButton","splitOutlineDropdownButton","basicIconDropdownButton","outlineIconDropdownButton","basicIconDropdownRoundedButton","outlineIconDropdownRoundedButton","Row","Col","sm","message","link","md","defaultValue","aria-label","xl","Notification","Link"],"mappings":"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","file":"static/js/62.c275d9f5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Dropdown, Card, Collapse } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport useWindowSize from \"../../hooks/useWindowSize\";\r\n\r\nconst MainCard = (props) => {\r\n    const { isOption, title, children, cardClass, optionClass } = props;\r\n    \r\n    const [fullCard, setFullCard] = useState(false);\r\n    const [collapseCard, setCollapseCard] = useState(false);\r\n    const [loadCard, setloadCard] = useState(false);\r\n    const [cardRemove, setCardRemove] = useState(false);\r\n\r\n    const windowSize = useWindowSize();\r\n\r\n    const cardReloadHandler = () => {\r\n        setloadCard(true);\r\n        setInterval(() => {\r\n            setloadCard(false);\r\n        }, 3000);\r\n    };\r\n\r\n    const cardRemoveHandler = () => {\r\n        setCardRemove(true);\r\n    };\r\n\r\n    let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n    let card = '';\r\n    let mainCardClass = [];\r\n\r\n    if (isOption) {\r\n        cardHeaderRight = (\r\n            <div className={\"card-header-right \" + optionClass}>\r\n                <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                    <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                        <i className=\"feather icon-more-horizontal\"/>\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                        <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => setFullCard(!fullCard)}>\r\n                            <i className={fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                            <Link to='#'> {fullCard ? 'Restore' : 'Maximize'} </Link>\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => setCollapseCard(!collapseCard)}>\r\n                            <i className={collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                            <Link to='#'> {collapseCard ? 'Expand' : 'Collapse'} </Link>\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item as='li' className=\"dropdown-item\" onClick={cardReloadHandler}>\r\n                            <i className='feather icon-refresh-cw'/>\r\n                            <Link to='#'> Reload </Link>\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item as='li' className=\"dropdown-item\" onClick={cardRemoveHandler}>\r\n                            <i className='feather icon-trash'/>\r\n                            <Link to='#'> Remove </Link>\r\n                        </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    cardHeader = (\r\n        <Card.Header>\r\n            <Card.Title as='h5'>{title}</Card.Title>\r\n            {cardHeaderRight}\r\n        </Card.Header>\r\n    );\r\n\r\n    if (fullCard) {\r\n        mainCardClass = [...mainCardClass, 'full-card'];\r\n        fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: windowSize.width, height: windowSize.height};\r\n    }\r\n\r\n    if (loadCard) {\r\n        mainCardClass = [...mainCardClass, 'card-load'];\r\n        loader = (\r\n            <div className=\"card-loader\">\r\n                <i className=\"pct-loader1 anim-rotate\"/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (cardRemove) {\r\n        mainCardClass = [...mainCardClass, 'd-none'];\r\n    }\r\n\r\n    if (cardClass) {\r\n        mainCardClass = [...mainCardClass, cardClass];\r\n    }\r\n\r\n    card = (\r\n        <Card className={mainCardClass.join(' ')} style={fullScreenStyle}>\r\n            {cardHeader}\r\n            <Collapse in={!collapseCard}>\r\n                <div>\r\n                    <Card.Body>\r\n                        {children}\r\n                    </Card.Body>\r\n                </div>\r\n            </Collapse>\r\n            {loader}\r\n        </Card>\r\n    );\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {card}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default MainCard;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _collapseStyles;\n\nimport classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport React, { useMemo } from 'react';\nimport Transition, { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nvar MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  var offset = \"offset\" + dimension[0].toUpperCase() + dimension.slice(1);\n  var value = elem[offset];\n  var margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nvar collapseStyles = (_collapseStyles = {}, _collapseStyles[EXITED] = 'collapse', _collapseStyles[EXITING] = 'collapsing', _collapseStyles[ENTERING] = 'collapsing', _collapseStyles[ENTERED] = 'collapse show', _collapseStyles);\nvar defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nvar Collapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var onEnter = _ref.onEnter,\n      onEntering = _ref.onEntering,\n      onEntered = _ref.onEntered,\n      onExit = _ref.onExit,\n      onExiting = _ref.onExiting,\n      className = _ref.className,\n      children = _ref.children,\n      _ref$dimension = _ref.dimension,\n      dimension = _ref$dimension === void 0 ? 'height' : _ref$dimension,\n      _ref$getDimensionValu = _ref.getDimensionValue,\n      getDimensionValue = _ref$getDimensionValu === void 0 ? getDefaultDimensionValue : _ref$getDimensionValu,\n      props = _objectWithoutPropertiesLoose(_ref, [\"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"className\", \"children\", \"dimension\", \"getDimensionValue\"]);\n\n  /* Compute dimension */\n  var computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  var handleEnter = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = '0';\n    }, onEnter);\n  }, [computedDimension, onEnter]);\n  var handleEntering = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      var scroll = \"scroll\" + computedDimension[0].toUpperCase() + computedDimension.slice(1);\n      elem.style[computedDimension] = elem[scroll] + \"px\";\n    }, onEntering);\n  }, [computedDimension, onEntering]);\n  var handleEntered = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = null;\n    }, onEntered);\n  }, [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  var handleExit = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = getDimensionValue(computedDimension, elem) + \"px\";\n      triggerBrowserReflow(elem);\n    }, onExit);\n  }, [onExit, getDimensionValue, computedDimension]);\n  var handleExiting = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = null;\n    }, onExiting);\n  }, [computedDimension, onExiting]);\n  return /*#__PURE__*/React.createElement(Transition // @ts-ignore\n  , _extends({\n    ref: ref,\n    addEndListener: transitionEnd\n  }, props, {\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting\n  }), function (state, innerProps) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({}, innerProps, {\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'width')\n    }));\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      toggle = _ref.toggle,\n      vertical = _ref.vertical,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  role: 'toolbar'\n};\nvar ButtonToolbar = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-toolbar');\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, props, {\n    ref: ref,\n    className: classNames(className, prefix)\n  }));\n});\nButtonToolbar.displayName = 'ButtonToolbar';\nButtonToolbar.defaultProps = defaultProps;\nexport default ButtonToolbar;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  placement: 'right'\n};\nvar Tooltip = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      placement = _ref.placement,\n      className = _ref.className,\n      style = _ref.style,\n      children = _ref.children,\n      arrowProps = _ref.arrowProps,\n      _ = _ref.popper,\n      _2 = _ref.show,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"placement\", \"className\", \"style\", \"children\", \"arrowProps\", \"popper\", \"show\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'tooltip');\n\n  var _ref2 = (placement == null ? void 0 : placement.split('-')) || [],\n      primaryPlacement = _ref2[0];\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    style: style,\n    role: \"tooltip\",\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, bsPrefix, \"bs-tooltip-\" + primaryPlacement)\n  }, props), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: \"arrow\"\n  }, arrowProps)), /*#__PURE__*/React.createElement(\"div\", {\n    className: bsPrefix + \"-inner\"\n  }, children));\n});\nTooltip.defaultProps = defaultProps;\nTooltip.displayName = 'Tooltip';\nexport default Tooltip;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu, { alignPropType } from './DropdownMenu';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu responsively.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"left\"|\"right\"|{ sm: \"left\"|\"right\" }|{ md: \"left\"|\"right\" }|{ lg: \"left\"|\"right\" }|{ xl: \"left\"|\"right\"} }\n   */\n  menuAlign: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nvar DropdownButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var title = _ref.title,\n      children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      rootCloseEvent = _ref.rootCloseEvent,\n      variant = _ref.variant,\n      size = _ref.size,\n      menuAlign = _ref.menuAlign,\n      menuRole = _ref.menuRole,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      id = _ref.id,\n      props = _objectWithoutPropertiesLoose(_ref, [\"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"variant\", \"size\", \"menuAlign\", \"menuRole\", \"renderMenuOnMount\", \"disabled\", \"href\", \"id\"]);\n\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix\n  }, title), /*#__PURE__*/React.createElement(DropdownMenu, {\n    align: menuAlign,\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio',\n  vertical: false\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    value: 'onChange'\n  }),\n      children = _useUncontrolled.children,\n      type = _useUncontrolled.type,\n      name = _useUncontrolled.name,\n      value = _useUncontrolled.value,\n      onChange = _useUncontrolled.onChange,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"children\", \"type\", \"name\", \"value\", \"onChange\"]);\n\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n\n  var handleToggle = function handleToggle(inputVal, event) {\n    if (!onChange) {\n      return;\n    }\n\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive && onChange) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(values, [inputVal]), event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/React.createElement(ButtonGroup, _extends({}, controlledProps, {\n    ref: ref,\n    toggle: true\n  }), map(children, function (child) {\n    var values = getValues();\n    var _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n\n    var handler = function handler(e) {\n      return handleToggle(childVal, e);\n    };\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      type: type,\n      name: child.name || name,\n      checked: values.indexOf(childVal) !== -1,\n      onChange: chainFunction(childOnChange, handler)\n    });\n  }));\n});\nToggleButtonGroup.defaultProps = defaultProps;\nToggleButtonGroup.Button = ToggleButton;\nexport default ToggleButtonGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\nimport ButtonGroup from './ButtonGroup';\nimport Dropdown from './Dropdown';\nimport { alignPropType } from './DropdownMenu';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /**\n   * Accessible label for the toggle; the value of `title` if not specified.\n   */\n  toggleLabel: PropTypes.string,\n\n  /** An `href` passed to the non-toggle Button */\n  href: PropTypes.string,\n\n  /** An anchor `target` passed to the non-toggle Button */\n  target: PropTypes.string,\n\n  /** An `onClick` handler passed to the non-toggle Button */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** A `type` passed to the non-toggle Button */\n  type: PropTypes.string,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu responsively.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"left\"|\"right\"|{ sm: \"left\"|\"right\" }|{ md: \"left\"|\"right\" }|{ lg: \"left\"|\"right\" }|{ xl: \"left\"|\"right\"} }\n   */\n  menuAlign: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\nvar defaultProps = {\n  toggleLabel: 'Toggle dropdown',\n  type: 'button'\n};\n/**\n * A convenience component for simple or general use split button dropdowns. Renders a\n * `ButtonGroup` containing a `Button` and a `Button` toggle for the `Dropdown`. All `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of [`Dropdown`'s\n * props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._\n * The Button `variant`, `size` and `bsPrefix` props are passed to the button and toggle,\n * and menu-related props are passed to the `Dropdown.Menu`\n */\n\nvar SplitButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      variant = _ref.variant,\n      title = _ref.title,\n      type = _ref.type,\n      toggleLabel = _ref.toggleLabel,\n      children = _ref.children,\n      onClick = _ref.onClick,\n      href = _ref.href,\n      target = _ref.target,\n      menuAlign = _ref.menuAlign,\n      menuRole = _ref.menuRole,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      rootCloseEvent = _ref.rootCloseEvent,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"bsPrefix\", \"size\", \"variant\", \"title\", \"type\", \"toggleLabel\", \"children\", \"onClick\", \"href\", \"target\", \"menuAlign\", \"menuRole\", \"renderMenuOnMount\", \"rootCloseEvent\"]);\n\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props, {\n    as: ButtonGroup\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: size,\n    variant: variant,\n    disabled: props.disabled,\n    bsPrefix: bsPrefix,\n    href: href,\n    target: target,\n    onClick: onClick,\n    type: type\n  }, title), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    split: true,\n    id: id ? id.toString() : undefined,\n    size: size,\n    variant: variant,\n    disabled: props.disabled,\n    childBsPrefix: bsPrefix\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, toggleLabel)), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    align: menuAlign,\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nSplitButton.propTypes = propTypes;\nSplitButton.defaultProps = defaultProps;\nSplitButton.displayName = 'SplitButton';\nexport default SplitButton;","import React from \"react\";\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button,\r\n    OverlayTrigger,\r\n    Tooltip,\r\n    ButtonToolbar,\r\n    ToggleButtonGroup,\r\n    ToggleButton,\r\n    Dropdown,\r\n    DropdownButton,\r\n    SplitButton,\r\n    ButtonGroup\r\n} from 'react-bootstrap';\r\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\r\n\r\nimport Card from \"../../../components/Card/MainCard\";\r\n\r\nconst BasicButton = () => {\r\n    const buttonVariants = [\r\n        'primary',\r\n        'secondary',\r\n        'success',\r\n        'danger',\r\n        'warning',\r\n        'info',\r\n        'light',\r\n        'dark',\r\n    ];\r\n\r\n    const buttonOptions = [\r\n        {variant: 'primary', icon:'feather icon-thumbs-up mx-1'},\r\n        {variant: 'secondary', icon:'feather icon-camera mx-1'},\r\n        {variant: 'success', icon:'feather icon-check-circle mx-1'},\r\n        {variant: 'danger', icon:'feather icon-slash mx-1'},\r\n        {variant: 'warning', icon:'feather icon-alert-triangle mx-1'},\r\n        {variant: 'info', icon:'feather icon-info mx-1'}\r\n    ];\r\n\r\n    const buttonOnlyIconOptions = [\r\n        {variant: 'primary', icon:'feather icon-thumbs-up'},\r\n        {variant: 'secondary', icon:'feather icon-camera'},\r\n        {variant: 'success', icon:'feather icon-check-circle'},\r\n        {variant: 'danger', icon:'feather icon-slash'},\r\n        {variant: 'warning', icon:'feather icon-alert-triangle'},\r\n        {variant: 'info', icon:'feather icon-info'}\r\n    ];\r\n\r\n    const basicButtons = buttonVariants.map((variant, idx) => (\r\n        <OverlayTrigger key={idx} overlay={<Tooltip>{variant}</Tooltip>}>\r\n            <Button variant={variant} className='text-capitalize'>{variant}</Button>\r\n        </OverlayTrigger>\r\n    ));\r\n\r\n    const outlineButtons = buttonVariants.map((variant, idx) => (\r\n        <OverlayTrigger key={idx} overlay={<Tooltip>{'outline-'+variant}</Tooltip>}>\r\n            <Button variant={'outline-'+variant} className='text-capitalize'>{variant}</Button>\r\n        </OverlayTrigger>\r\n    ));\r\n\r\n    const squareButtons = buttonVariants.map((variant, idx) => <Button key={idx} className='btn-square text-capitalize' variant={variant}>{variant}</Button>);\r\n    const disabledButtons = buttonVariants.map((variant, idx) => <Button key={idx} disabled variant={variant} className='text-capitalize'>{variant}</Button>);\r\n    const roundedButtons = buttonVariants.map((variant, idx) => <Button key={idx} className='btn-rounded text-capitalize' variant={variant}>{variant}</Button>);\r\n\r\n    const glowButtons = buttonVariants.map((variant, idx) => (\r\n        <OverlayTrigger key={idx} overlay={<Tooltip>{'btn-glow-'+variant}</Tooltip>}>\r\n            <Button className={'text-capitalize btn-glow-'+variant} variant={variant}>{variant}</Button>\r\n        </OverlayTrigger>\r\n    ));\r\n\r\n    const iconButtons = buttonOptions.map((button, idx) => (\r\n            <Button key={idx} variant={button.variant} className='text-capitalize'>\r\n                <i className={button.icon} />\r\n                {button.variant}\r\n            </Button>\r\n        )\r\n    );\r\n\r\n    const outlineIconButtons = buttonOptions.map((button, idx) => (\r\n            <Button key={idx} variant={'outline-'+button.variant} className='text-capitalize'>\r\n                <i className={button.icon} />\r\n                {button.variant}\r\n            </Button>\r\n        )\r\n    );\r\n\r\n    const onlyIconButtons = buttonOnlyIconOptions.map((button, idx) => (\r\n            <Button className='btn-icon' key={idx} variant={button.variant}>\r\n                <i className={button.icon} />\r\n            </Button>\r\n        )\r\n    );\r\n\r\n    const onlyOutlineIconButtons = buttonOnlyIconOptions.map((button, idx) => (\r\n            <Button className='btn-icon' key={idx} variant={'outline-'+button.variant}>\r\n                <i className={button.icon} />\r\n            </Button>\r\n        )\r\n    );\r\n\r\n    const onlyIconRoundedButtons = buttonOnlyIconOptions.map((button, idx) => (\r\n            <Button className='btn-icon btn-rounded' key={idx} variant={button.variant}>\r\n                <i className={button.icon} />\r\n            </Button>\r\n        )\r\n    );\r\n\r\n    const onlyOutlineIconRoundedButtons = buttonOnlyIconOptions.map((button, idx) => (\r\n            <Button className='btn-icon btn-rounded' key={idx} variant={'outline-'+button.variant}>\r\n                <i className={button.icon} />\r\n            </Button>\r\n        )\r\n    );\r\n\r\n    const basicDropdownButton = buttonOptions.map(\r\n        button => {\r\n            const title = button.variant;\r\n            return (\r\n            <DropdownButton\r\n                className='text-capitalize'\r\n                title={title}\r\n                variant={button.variant}\r\n                id={`dropdown-variants-${button.variant}`}\r\n                key={button.variant}\r\n            >\r\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n            </DropdownButton>\r\n        );\r\n    });\r\n\r\n    const splitDropdownButton = buttonOptions.map(\r\n        button => {\r\n            const title = button.variant;\r\n            return (\r\n            <SplitButton\r\n                title={title}\r\n                variant={button.variant}\r\n                id={`dropdown-split-variants-${button.variant}`}\r\n                key={button.variant}\r\n                className=\"mr-2 mb-2 text-capitalize\"\r\n            >\r\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n            </SplitButton>\r\n        );\r\n    });\r\n\r\n    const basicOutlineDropdownButton = buttonOptions.map(\r\n        button => {\r\n            const title = button.variant;\r\n            return (\r\n            <DropdownButton\r\n                title={title}\r\n                variant={'outline-'+button.variant}\r\n                id={`dropdown-variants-${button.variant}`}\r\n                key={button.variant}\r\n                className='text-capitalize'\r\n            >\r\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n            </DropdownButton>\r\n        );\r\n    });\r\n\r\n    const splitOutlineDropdownButton = buttonOptions.map(\r\n        button => {\r\n            const title = button.variant;\r\n            return (\r\n            <SplitButton\r\n                title={title}\r\n                variant={'outline-'+button.variant}\r\n                id={`dropdown-split-variants-${button.variant}`}\r\n                key={button.variant}\r\n                className=\"mr-2 mb-2 text-capitalize\"\r\n            >\r\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n            </SplitButton>\r\n        );\r\n    });\r\n\r\n    const basicIconDropdownButton = buttonOnlyIconOptions.map(\r\n        button => {\r\n            const title = <i className={button.icon} />;\r\n            return (\r\n                <DropdownButton\r\n                    title={title}\r\n                    variant={button.variant}\r\n                    id={`dropdown-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                    className='drp-icon'\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                </DropdownButton>\r\n            );\r\n        });\r\n\r\n    const outlineIconDropdownButton = buttonOnlyIconOptions.map(\r\n        button => {\r\n            const title = <i className={button.icon} />;\r\n            return (\r\n                <DropdownButton\r\n                    title={title}\r\n                    variant={'outline-'+button.variant}\r\n                    id={`dropdown-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                    className='drp-icon'\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                </DropdownButton>\r\n            );\r\n        });\r\n\r\n    const basicIconDropdownRoundedButton = buttonOnlyIconOptions.map(\r\n        button => {\r\n            const title = <i className={button.icon} />;\r\n            return (\r\n                <DropdownButton\r\n                    title={title}\r\n                    variant={button.variant}\r\n                    id={`dropdown-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                    className='drp-icon btn-rounded'\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                </DropdownButton>\r\n            );\r\n        });\r\n\r\n    const outlineIconDropdownRoundedButton = buttonOnlyIconOptions.map(\r\n        button => {\r\n            const title = <i className={button.icon} />;\r\n            return (\r\n                <DropdownButton\r\n                    title={title}\r\n                    variant={'outline-'+button.variant}\r\n                    id={`dropdown-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                    className='drp-icon btn-rounded'\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                </DropdownButton>\r\n            );\r\n        });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col sm={12}>  \r\n                    <ModuleNotification message=\"For more info please check the components's official documentation\" link='https://react-bootstrap.github.io/components/buttons/' />\r\n                </Col>\r\n            </Row>\r\n            <Row className='btn-page'>\r\n                    <Col>\r\n                        <Card title=\"Default\">\r\n                            {basicButtons}\r\n                            <OverlayTrigger overlay={<Tooltip>link</Tooltip>}>\r\n                                <Button variant=\"link\">Link</Button>\r\n                            </OverlayTrigger>\r\n                        </Card>\r\n                        <Card title=\"Outline\">\r\n                            {outlineButtons}\r\n                        </Card>\r\n                        <Card title=\"Square Button\">\r\n                            {squareButtons}\r\n                        </Card>\r\n                        <Card title=\"Disabled Button\">\r\n                            {disabledButtons}\r\n                        </Card>\r\n                        <Card title=\"Rounded Button\">\r\n                            {roundedButtons}\r\n                        </Card>\r\n                        <Card title=\"Glow Button\">\r\n                            {glowButtons}\r\n                        </Card>\r\n                        <Card title=\"Shadow Button\">\r\n                            <OverlayTrigger overlay={<Tooltip>shadow-1</Tooltip>}>\r\n                                <Button className=\"shadow-1\" variant='primary'>Shadow 1</Button>\r\n                            </OverlayTrigger>\r\n                            <OverlayTrigger overlay={<Tooltip>shadow-2</Tooltip>}>\r\n                                <Button className=\"shadow-2\" variant='success'>Shadow 2</Button>\r\n                            </OverlayTrigger>\r\n                            <OverlayTrigger overlay={<Tooltip>shadow-3</Tooltip>}>\r\n                                <Button className=\"shadow-3\" variant='danger'>Shadow 3</Button>\r\n                            </OverlayTrigger>\r\n                            <OverlayTrigger overlay={<Tooltip>shadow-4</Tooltip>}>\r\n                                <Button className=\"shadow-4\" variant='warning'>Shadow 4</Button>\r\n                            </OverlayTrigger>\r\n                            <OverlayTrigger overlay={<Tooltip>shadow-5</Tooltip>}>\r\n                                <Button className=\"shadow-5\" variant='info'>Shadow 5</Button>\r\n                            </OverlayTrigger>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='btn-page'>\r\n                    <Col md={6}>\r\n                        <Card title=\"Sizes [ Large ]\">\r\n                            <Button variant='primary' size='lg'>Large Button</Button>\r\n                            <Button variant='secondary' size='lg'>Large Button</Button>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Sizes [ Small ]\">\r\n                            <Button variant='primary' size='sm'>Small Button</Button>\r\n                            <Button variant='secondary' size='sm'>Small Button</Button>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Checkbox Button\">\r\n                            <ButtonToolbar>\r\n                                <ToggleButtonGroup type=\"checkbox\" defaultValue={1}>\r\n                                    <ToggleButton variant='secondary' value={1}>Checkbox</ToggleButton>\r\n                                    <ToggleButton variant='secondary' value={2}>Checkbox</ToggleButton>\r\n                                </ToggleButtonGroup>\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Radio Button\">\r\n                            <ButtonToolbar>\r\n                                <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\r\n                                    <ToggleButton variant='secondary' value={1}>Active</ToggleButton>\r\n                                    <ToggleButton variant='secondary' value={2}>Radio</ToggleButton>\r\n                                    <ToggleButton variant='secondary' value={3}>Radio</ToggleButton>\r\n                                </ToggleButtonGroup>\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Button With Icon\">\r\n                            {iconButtons}\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Outline Icon Buttons\">\r\n                            {outlineIconButtons}\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Only Icon\">\r\n                            {onlyIconButtons}\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Outline Icon\">\r\n                            {onlyOutlineIconButtons}\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Icon Button Rounded\">\r\n                            {onlyIconRoundedButtons}\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Icon Outline Button Rounded\">\r\n                            {onlyOutlineIconRoundedButtons}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='btn-page'>\r\n                    <Col>\r\n                        <Card title=\"Basic Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {basicDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                        <Card title=\"Split Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {splitDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                        <Card title=\"Basic Outline Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {basicOutlineDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                        <Card title=\"Split Outline Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {splitOutlineDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='btn-page'>\r\n                <Col md={6}>\r\n                        <Card title=\"Basic Icon Dropdown\">\r\n                            <ButtonToolbar>\r\n                                {basicIconDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Outline Icon Dropdown\">\r\n                            <ButtonToolbar>\r\n                                {outlineIconDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Basic Rounded Icon Dropdown\">\r\n                            <ButtonToolbar>\r\n                                {basicIconDropdownRoundedButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Outline Rounded Icon Dropdown\">\r\n                            <ButtonToolbar>\r\n                                {outlineIconDropdownRoundedButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Basic Button Group\">\r\n                            <ButtonGroup aria-label=\"Basic example\">\r\n                                <Button variant=\"secondary\">Left</Button>\r\n                                <Button variant=\"secondary\">Middle</Button>\r\n                                <Button variant=\"secondary\">Right</Button>\r\n                            </ButtonGroup>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Button Toolbar\">\r\n                            <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                                <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n                                    <Button variant=\"secondary\">1</Button>\r\n                                    <Button variant=\"secondary\">2</Button>\r\n                                    <Button variant=\"secondary\">3</Button>\r\n                                    <Button variant=\"secondary\">4</Button>\r\n                                </ButtonGroup>\r\n\r\n                                <ButtonGroup className=\"mr-2\" aria-label=\"Second group\">\r\n                                    <Button variant=\"secondary\">5</Button>\r\n                                    <Button variant=\"secondary\">6</Button>\r\n                                    <Button variant=\"secondary\">7</Button>\r\n                                </ButtonGroup>\r\n\r\n                                <ButtonGroup aria-label=\"Third group\">\r\n                                    <Button variant=\"secondary\">8</Button>\r\n                                </ButtonGroup>\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='btn-page'>\r\n                    <Col>\r\n                        <Card title=\"Button Toolbar Size\">\r\n                            <Row>\r\n                                <Col xl={4} md={12}>\r\n                                    <p>use <code>size=\"lg\"</code> props in component <code>ButtonGroup</code> to get large button toolbar</p>\r\n                                    <ButtonGroup size=\"lg\">\r\n                                        <Button variant=\"secondary\">Left</Button>\r\n                                        <Button variant=\"secondary\">Middle</Button>\r\n                                        <Button variant=\"secondary\">Right</Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                                <Col xl={4} md={6}>\r\n                                    <p>default toolbar size</p>\r\n                                    <ButtonGroup>\r\n                                        <Button variant=\"secondary\">Left</Button>\r\n                                        <Button variant=\"secondary\">Middle</Button>\r\n                                        <Button variant=\"secondary\">Right</Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                                <Col xl={4} md={6}>\r\n                                    <p>use <code>size=\"sm\"</code> props in component <code>ButtonGroup</code> to get small button toolbar</p>\r\n                                    <ButtonGroup size=\"sm\">\r\n                                        <Button variant=\"secondary\">Left</Button>\r\n                                        <Button variant=\"secondary\">Middle</Button>\r\n                                        <Button variant=\"secondary\">Right</Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='btn-page'>\r\n                    <Col md={6}>\r\n                        <Card title=\"Nesting\">\r\n                            <ButtonGroup>\r\n                                <Button variant='secondary'>1</Button>\r\n                                <Button variant='secondary'>2</Button>\r\n                                <DropdownButton variant='secondary' as={ButtonGroup} title=\"Dropdown\" id=\"bg-nested-dropdown\">\r\n                                    <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\r\n                                    <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\r\n                                </DropdownButton>\r\n                            </ButtonGroup>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card title=\"Vertical Variation\">\r\n                            <Row>\r\n                                <Col>\r\n                                    <ButtonGroup vertical>\r\n                                        <Button variant='secondary' className=\"mr-0 mb-0\">1</Button>\r\n                                        <Button variant='secondary' className=\"mr-0 mb-0\">2</Button>\r\n                                        <Button variant='secondary' className=\"mr-0 mb-0\">3</Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                                <Col>\r\n                                    <ButtonGroup vertical>\r\n                                        <Button variant='secondary' className=\"mr-0 mb-0\">1</Button>\r\n                                        <Button variant='secondary' className=\"mr-0 mb-0\">2</Button>\r\n                                        <DropdownButton variant='secondary' as={ButtonGroup} title=\"Dropdown\" id=\"bg-nested-dropdown\">\r\n                                            <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\r\n                                            <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\r\n                                        </DropdownButton>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default BasicButton;","import React from \"react\";\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Notification = props => {\r\n    return (\r\n        <React.Fragment>\r\n            <Alert variant='warning'>\r\n                {props.message}\r\n                <Alert.Link href={props.link} target='_blank' className='float-right'>Demo & Documentation</Alert.Link>\r\n            </Alert>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Notification;"],"sourceRoot":""}