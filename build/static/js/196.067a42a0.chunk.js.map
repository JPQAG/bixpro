{"version":3,"sources":["views/charts/e-chart/chart/AreaChart1.js","views/charts/e-chart/chart/AreaChart2.js","views/charts/e-chart/chart/BarBasicColumnChart.js","views/charts/e-chart/chart/BarHorizontalChart.js","views/charts/e-chart/chart/PieBasicColumnChart.js","views/charts/e-chart/chart/PieDoughnutChart.js","views/charts/e-chart/chart/GaugeChart.js","views/charts/e-chart/index.js"],"names":["AreaChart1","option","tooltip","trigger","xAxis","type","data","yAxis","color","series","AreaChart2","legend","calculable","splitLine","show","boundaryGap","name","smooth","itemStyle","normal","areaStyle","BarBasicColumnChart","axisLabel","formatter","markPoint","markLine","value","BarHorizontalChart","PieBasicColumnChart","orient","x","radius","center","PieDoughnutChart","label","labelLine","emphasis","position","textStyle","fontSize","fontWeight","GaugeChart","axisLine","lineStyle","width","detail","EChart","Fragment","Row","Col","md","Card","Header","Title","as","Body","sm"],"mappings":"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","file":"static/js/196.067a42a0.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst AreaChart1 = () => {\r\n    const getOption = () => {\r\n        return {\r\n            tooltip: {\r\n                trigger: 'axis'\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            color: '#04a9f5',\r\n            series: [{\r\n                data: [1, 5, 3, 6, 4, 8, 10],\r\n                type: 'line',\r\n            }]\r\n        }\r\n    };\r\n\r\n    return <ReactEcharts option={getOption()} />;\r\n}\r\n\r\nexport default AreaChart1;","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst AreaChart2 = () => {\r\n    const getOption = () => {\r\n        return {\r\n            tooltip: {\r\n                trigger: 'axis'\r\n            },\r\n            legend: {\r\n                data: ['abc', 'def', 'pqr']\r\n            },\r\n            calculable: true,\r\n            xAxis: [{\r\n                type: 'category',\r\n                splitLine: {\r\n                    show: false\r\n                },\r\n                boundaryGap: false,\r\n                data: ['Monday', 'Tuesday', 'Wednesday', 'Thrusday', 'Friday', 'Saturday', 'Sunday']\r\n            }],\r\n            color: ['rgba(163, 137, 212, 0.5)', 'rgba(4, 169, 246, 0.5)', 'rgba(28, 233, 181, 0.5)'],\r\n            yAxis: [{\r\n                type: 'value',\r\n                splitLine: {\r\n                    show: false\r\n                }\r\n            }],\r\n            series: [\r\n                {\r\n                    name: 'abc',\r\n                    type: 'line',\r\n                    smooth: true,\r\n                    itemStyle: {\r\n                        normal: {\r\n                            areaStyle: {\r\n                                type: 'macarons'\r\n                            }\r\n                        }\r\n                    },\r\n                    data: [10, 12, 21, 54, 260, 830, 710]\r\n                },\r\n                {\r\n                    name: 'def',\r\n                    type: 'line',\r\n                    smooth: true,\r\n                    itemStyle: {\r\n                        normal: {\r\n                            areaStyle: {\r\n                                type: 'macarons'\r\n                            }\r\n                        }\r\n                    },\r\n                    data: [30, 182, 434, 791, 390, 30, 10]\r\n                },\r\n                {\r\n                    name: 'pqr',\r\n                    type: 'line',\r\n                    smooth: true,\r\n                    itemStyle: {\r\n                        normal: {\r\n                            areaStyle: {\r\n                                type: 'macarons'\r\n                            }\r\n                        }\r\n                    },\r\n                    data: [1320, 1132, 601, 234, 120, 90, 20]\r\n                }\r\n            ]\r\n        }\r\n    };\r\n\r\n    return <ReactEcharts option={getOption()} />;\r\n}\r\n\r\nexport default AreaChart2;","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst BarBasicColumnChart = () => {\r\n    const getOption = () => {\r\n        return {\r\n            tooltip: {\r\n                trigger: 'axis'\r\n            },\r\n            legend: {\r\n                data: ['Data1', 'Data2']\r\n            },\r\n            calculable: true,\r\n            color: ['rgba(163, 137, 212, 1)', 'rgba(28, 233, 181, 1)'],\r\n            xAxis: [{\r\n                type: 'category',\r\n                boundaryGap: false,\r\n                data: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\r\n            }],\r\n            yAxis: [{\r\n                type: 'value',\r\n                axisLabel: {\r\n                    formatter: '{value} Â°C'\r\n                }\r\n            }],\r\n            series: [\r\n                {\r\n                    name: 'Data1',\r\n                    type: 'line',\r\n                    smooth: true,\r\n                    data: [11, 11, 15, 13, 12, 13, 10],\r\n                    markPoint: {\r\n                        data: [{\r\n                            type: 'max',\r\n                            name: 'Maximum'\r\n                        },\r\n                            {\r\n                                type: 'min',\r\n                                name: 'Minimum'\r\n                            }\r\n                        ]\r\n                    },\r\n                    markLine: {\r\n                        data: [{\r\n                            type: 'average',\r\n                            name: '100'\r\n                        }]\r\n                    }\r\n                },\r\n                {\r\n                    name: 'Data2',\r\n                    type: 'line',\r\n                    smooth: true,\r\n                    data: [1, -2, 2, 5, 3, 2, 0],\r\n                    markPoint: {\r\n                        data: [{\r\n                            name: 'Week Minimum',\r\n                            value: -2,\r\n                            xAxis: 1,\r\n                            yAxis: -1.5\r\n                        }]\r\n                    },\r\n                    markLine: {\r\n                        data: [{\r\n                            type: 'average',\r\n                            name: '100'\r\n                        }]\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    };\r\n\r\n    return <ReactEcharts option={getOption()} />;\r\n}\r\n\r\nexport default BarBasicColumnChart;","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst BarHorizontalChart = () => {\r\n    const getOption = () => {\r\n        return {\r\n            tooltip: {\r\n                trigger: 'axis'\r\n            },\r\n            legend: {\r\n                data: ['2017', '2018']\r\n            },\r\n            color: ['rgba(163, 137, 212, 1)', 'rgba(28, 233, 181, 1)'],\r\n            calculable: true,\r\n            xAxis: [{\r\n                type: 'value',\r\n                boundaryGap: [0, 0.01]\r\n            }],\r\n            yAxis: [{\r\n                type: 'category',\r\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n            }],\r\n            series: [\r\n                {\r\n                    name: '2017',\r\n                    type: 'bar',\r\n                    data: [18203, 23489, 29034, 104970, 131744, 130230, 29034]\r\n                },\r\n                {\r\n                    name: '2018',\r\n                    type: 'bar',\r\n                    data: [19325, 23438, 31000, 121594, 134141, 181807, 31000]\r\n                }\r\n            ]\r\n        }\r\n    };\r\n\r\n    return <ReactEcharts option={getOption()} />;\r\n}\r\n\r\nexport default BarHorizontalChart;","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst PieBasicColumnChart = () => {\r\n    const getOption = () => {\r\n        return {\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                x: 'left',\r\n                data: ['HTML', 'SCSS', 'JS', 'Images', 'Icons']\r\n            },\r\n            color: ['#f4c22b', '#A389D4', '#3ebfea', '#04a9f5', '#1de9b6'],\r\n            calculable: true,\r\n            series: [\r\n                {\r\n                    name: 'Webpage',\r\n                    type: 'pie',\r\n                    radius: '55%',\r\n                    center: ['50%', '60%'],\r\n                    data: [\r\n                        {\r\n                        value: 335,\r\n                        name: 'HTML'\r\n                        },\r\n                        {\r\n                            value: 310,\r\n                            name: 'SCSS'\r\n                        },\r\n                        {\r\n                            value: 234,\r\n                            name: 'JS'\r\n                        },\r\n                        {\r\n                            value: 135,\r\n                            name: 'Images'\r\n                        },\r\n                        {\r\n                            value: 1548,\r\n                            name: 'Icons'\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    };\r\n\r\n    return <ReactEcharts option={getOption()} />;\r\n}\r\n\r\nexport default PieBasicColumnChart;","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst PieDoughnutChart = () => {\r\n    const getOption = () => {\r\n        return {\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                x: 'left',\r\n                data: ['HTML', 'SCSS', 'JS', 'Images', 'Icons']\r\n            },\r\n            color: ['#f4c22b', '#A389D4', '#3ebfea', '#04a9f5', '#1de9b6'],\r\n            calculable: true,\r\n            series: [{\r\n                name: 'Webpage',\r\n                type: 'pie',\r\n                radius: ['50%', '70%'],\r\n                itemStyle: {\r\n                    normal: {\r\n                        label: {\r\n                            show: false\r\n                        },\r\n                        labelLine: {\r\n                            show: false\r\n                        }\r\n                    },\r\n                    emphasis: {\r\n                        label: {\r\n                            show: true,\r\n                            position: 'center',\r\n                            textStyle: {\r\n                                fontSize: '15',\r\n                                fontWeight: 'bold'\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                data: [{\r\n                    value: 335,\r\n                    name: 'HTML'\r\n                },\r\n                    {\r\n                        value: 310,\r\n                        name: 'SCSS'\r\n                    },\r\n                    {\r\n                        value: 234,\r\n                        name: 'JS'\r\n                    },\r\n                    {\r\n                        value: 135,\r\n                        name: 'Images'\r\n                    },\r\n                    {\r\n                        value: 1548,\r\n                        name: 'Icons'\r\n                    }\r\n                ]\r\n            }]\r\n        }\r\n    };\r\n\r\n    return <ReactEcharts option={getOption()} />;\r\n}\r\n\r\nexport default PieDoughnutChart;","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst GaugeChart = () => {\r\n    const getOption = () => {\r\n        return {\r\n            tooltip: {\r\n                formatter: '{a} <br/>{b} : {c}%'\r\n            },\r\n            series: [{\r\n                name: 'gauge Chart',\r\n                type: 'gauge',\r\n                axisLine: {\r\n                    show: true,\r\n                    lineStyle: {\r\n                        color: [\r\n                            [0.2, '#1de9b6'],\r\n                            [0.8, '#04a9f5'],\r\n                            [1, '#A389D4']\r\n                        ],\r\n                        width: 10\r\n                    }\r\n                },\r\n                detail: {\r\n                    formatter: '{value}%'\r\n                },\r\n                data: [{\r\n                    value: 50,\r\n                    name: ''\r\n                }]\r\n            }]\r\n        }\r\n    };\r\n\r\n    return <ReactEcharts option={getOption()} />;\r\n}\r\n\r\nexport default GaugeChart;","import React from 'react';\r\nimport {Row, Col, Card} from 'react-bootstrap';\r\n\r\nimport AreaChart1 from \"./chart/AreaChart1\";\r\nimport AreaChart2 from \"./chart/AreaChart2\";\r\nimport BarBasicColumnChart from \"./chart/BarBasicColumnChart\";\r\nimport BarHorizontalChart from \"./chart/BarHorizontalChart\";\r\nimport PieBasicColumnChart from \"./chart/PieBasicColumnChart\";\r\nimport PieDoughnutChart from \"./chart/PieDoughnutChart\";\r\nimport GaugeChart from \"./chart/GaugeChart\";\r\n\r\nconst EChart = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col md={6}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Area Chart</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <AreaChart1/>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col md={6}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Area Chart</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <AreaChart2/>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col md={6}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Bar [ Basic Column ] Chart</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <BarBasicColumnChart/>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col md={6}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Bar [ Basic Bar ] Chart</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <BarHorizontalChart/>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col md={6}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Pie [ Basic Column ] Chart</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <PieBasicColumnChart/>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col md={6}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Pie [ Doughnut ] Chart</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <PieDoughnutChart/>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={12}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Gauge Chart</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <GaugeChart/>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default EChart;"],"sourceRoot":""}