{"version":3,"sources":["views/applications/message/Friends/Friend/index.js","views/applications/message/Friends/Chat/Messages/index.js","views/applications/message/Search/index.js","views/applications/message/index.js"],"names":["images","require","Friend","data","activeId","clicked","photo","timeClass","status","time","className","join","newFriend","new","id","Fragment","Media","onClick","to","src","default","alt","name","Body","Messages","message","image","type","msgClass","msg","Search","props","onChange","placeholder","Message","formRef","createRef","useState","scrollEl","setScrollEl","friend","setFriend","chatMsg","setChatMsg","user","setUser","newMsg","setNewMsg","getFriend","a","axios","get","response","friends","getFriendChat","params","messages","elmnt","document","getElementById","scrollTop","offsetHeight","useEffect","friendList","map","f","item","friendListHandler","filter","chats","index","friend_photo","handleSearchChange","event","persist","value","target","query","results","console","error","handleSubmit","e","formData","inputs","preventDefault","post","then","resetForm","current","resetValidationState","Row","Col","Card","xl","md","style","height","containerRef","ref","onSubmit","onErrorSubmit","errorInputs","Form","Group","as","required","append","Button","variant","autoComplete"],"mappings":"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","file":"static/js/181.77e34c47.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Media } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst images = require.context('../../../../../assets/images/user', true);\r\n\r\nconst Friend = ({ data, activeId, clicked }) => {\r\n    let photo = images(`./${data.photo}`);\r\n    let timeClass = ['d-block'];\r\n    if (data.status) {\r\n        timeClass = [...timeClass, 'text-c-green'];\r\n    } else {\r\n        timeClass = [...timeClass, 'text-muted'];\r\n    }\r\n\r\n    let time = '';\r\n    if (data.time) {\r\n        time = <small className={timeClass.join(' ')}>{data.time}</small>;\r\n    }\r\n\r\n    let newFriend = '';\r\n    if (data.new && activeId !== data.id) {\r\n        newFriend = <div className=\"live-status\">{data.new}</div>;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Media className={activeId === data.id ? 'userlist-box active' : 'userlist-box'} onClick={clicked}>\r\n                <Link to='#' className=\"media-left\"> <img className=\"media-object img-radius\" src={photo.default} alt={data.name}/>{newFriend}</Link>\r\n                <Media.Body>\r\n                    <h6 className=\"chat-header\">{data.name}{time}</h6>\r\n                </Media.Body>\r\n            </Media>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Friend;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Media } from 'react-bootstrap';\r\n\r\nconst images = require.context('../../../../../../assets/images/user', true);\r\n\r\nconst Messages = ({ message, photo, name }) => {\r\n    let image = '';\r\n    if (message.type) {\r\n        image = (\r\n            <Link to='#' className=\"media-left photo-table\">\r\n                <img className=\"media-object img-radius img-radius m-t-5\" src={(images(`./${photo}`)).default} alt={name} />\r\n            </Link>\r\n        );\r\n    }\r\n\r\n    let msgClass = [];\r\n    if(message.type) {\r\n        msgClass = [...msgClass, 'chat-menu-content'];\r\n    } else {\r\n        msgClass = [...msgClass, 'chat-menu-reply text-muted'];\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Media className=\"media chat-messages\">\r\n                {image}\r\n                <Media.Body className={msgClass.join(' ')}>\r\n                    <div className=\"\">\r\n                        <p className=\"chat-cont\">{message.msg}</p>\r\n                    </div>\r\n                    <p className=\"chat-time\">{message.time}</p>\r\n                </Media.Body>\r\n            </Media>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default Messages;\r\n","import React from 'react';\r\n\r\nconst Search = props => {\r\n    const { onChange } = props\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"h-list-header m-b-5\">\r\n                <div className=\"input-group\">\r\n                    <input type=\"text\" id=\"msg-friends\" className=\"form-control\" placeholder=\"Search Friend . . .\" onChange={onChange} />\r\n                    <div className=\"input-group-append\">\r\n                        <span className=\"input-group-text\"><i className=\"feather icon-search\"/></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Search;","import React, { createRef, useState, useEffect } from 'react';\r\nimport { Row, Col, Card, Button, Form } from 'react-bootstrap';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { ValidationForm, TextInputGroup } from 'react-bootstrap4-form-validation';\r\n\r\nimport Friend from \"./Friends/Friend\";\r\nimport Messages from \"./Friends/Chat/Messages\";\r\n\r\nimport Search from \"./Search\";\r\n\r\nimport axios from '../../../utils/axios';\r\n\r\nconst Message = () => {\r\n    const formRef = createRef();\r\n    const [scrollEl, setScrollEl] = useState();\r\n\r\n    const [friend, setFriend] = useState([]);\r\n    const [chatMsg, setChatMsg] = useState([]);\r\n    const [user, setUser] = useState({ id: 6 });\r\n    const [newMsg, setNewMsg] = useState('');\r\n\r\n    const getFriend = async () => {\r\n        const response = await axios.get('/api/friend/list');\r\n        setFriend(response.data.friends);\r\n    };\r\n\r\n    const getFriendChat = async (user, scrollEl) => {\r\n        const response = await axios.get('/api/friend/chat', {\r\n            params: {\r\n                id: user.id\r\n            }\r\n        });\r\n        setChatMsg(response.data.messages);\r\n\r\n        const elmnt = document.getElementById(\"main-friend-chat\");\r\n        if (scrollEl) {\r\n            scrollEl.scrollTop = elmnt.offsetHeight;\r\n        }   \r\n    };\r\n\r\n    useEffect(() => {        \r\n        getFriend();\r\n        getFriendChat(user, scrollEl);\r\n    }, [user, scrollEl]);\r\n\r\n    const friendListHandler = (item) => {\r\n        setUser(item);\r\n        const elmnt = document.getElementById(\"main-friend-chat\");\r\n        scrollEl.scrollTop = elmnt.offsetHeight;\r\n    }\r\n\r\n    const friendList = (friend).map(f => {\r\n        return <Friend key={f.id} data={f} activeId={user.id} clicked={() => friendListHandler(f)} />;\r\n    });\r\n\r\n    let message = <div className=\"text-center text-danger\">Chat Not Found</div>;\r\n    chatMsg.filter(chats => {\r\n        message = (chats.messages).map((msg, index) => {\r\n            return <Messages key={index} message={msg} name={user.name} photo={chats.friend_photo} />;\r\n        });\r\n        return false;\r\n    });\r\n\r\n    const handleSearchChange = async (event) => {\r\n        try {\r\n          event.persist();\r\n    \r\n          const { value } = event.target;\r\n          if (value) {\r\n            const response = await axios.get('/api/friend/search', {\r\n                params: {\r\n                    query: value\r\n                }\r\n            });\r\n            setFriend(response.data.results);\r\n          } else {\r\n            const response = await axios.get('/api/friend/list');\r\n            setFriend(response.data.friends);\r\n          }\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      };\r\n\r\n    const handleChange = (e) => {\r\n        setNewMsg(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (e, formData, inputs) => {\r\n        e.preventDefault();\r\n        await axios.post('/api/friend/chat/add', {\r\n            id: user.id,\r\n            msg: newMsg\r\n        }).then(response => {\r\n            resetForm();\r\n            setNewMsg('');\r\n            setChatMsg(response.data.messages);\r\n            const elmnt = document.getElementById(\"main-friend-chat\");\r\n            scrollEl.scrollTop = elmnt.offsetHeight;\r\n        });\r\n    };\r\n\r\n    const resetForm = () => {\r\n        (formRef.current).resetValidationState(true);\r\n    };\r\n\r\n    const handleErrorSubmit = (e, formData, errorInputs) => {\r\n        //console.log(errorInputs);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <Card className=\"msg-card\">\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <Col xl={3} md={12}>\r\n                                    <Search onChange={handleSearchChange} />\r\n                                    <div className=\"h-list-body\">\r\n                                        <div className=\"msg-user-list scroll-div\">\r\n                                            <div className=\"main-friend-list\" style={{height: 'calc(100vh - 300px)'}}>\r\n                                                <PerfectScrollbar>\r\n                                                    {friendList}\r\n                                                </PerfectScrollbar>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col xl={9} md={12}>\r\n                                    <div className=\"h-list-body\">\r\n                                        <div className=\"msg-user-chat scroll-div\" style={{height: 'calc(100vh - 340px)'}}>\r\n                                            <PerfectScrollbar containerRef={ref => {setScrollEl(ref);}}>\r\n                                                <div id='main-friend-chat' className=\"main-friend-chat\">\r\n                                                    {message}\r\n                                                </div>\r\n                                            </PerfectScrollbar>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr/>\r\n                                    <div className=\"msg-form\">\r\n                                        <ValidationForm ref={formRef} onSubmit={handleSubmit} onErrorSubmit={handleErrorSubmit}>\r\n                                            <Form.Row>\r\n                                                <Form.Group as={Col}>\r\n                                                    <TextInputGroup\r\n                                                        name=\"newMsg\"\r\n                                                        id=\"newMsg\"\r\n                                                        placeholder=\"Send message\"\r\n                                                        required\r\n                                                        append={<Button type=\"submit\" variant=\"link\" className='btn-theme btn-icon btn-msg-send'><i className=\"feather icon-play\"/></Button>}\r\n                                                        value={newMsg}\r\n                                                        onChange={handleChange}\r\n                                                        autoComplete=\"off\"\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </Form.Row>\r\n                                        </ValidationForm>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Message;"],"sourceRoot":""}