{"version":3,"sources":["views/ui-elements/advance/AdvanceAlert.js","components/Widgets/Statistic/Notification.js"],"names":["AdvanceAlert","sweetAlertHandler","alert","withReactContent","Swal","fire","title","text","type","Fragment","sm","message","link","Header","Title","Body","className","onClick","variant","MySwal","showCloseButton","showCancelButton","then","willDelete","value","input","result","inputAttributes","autocapitalize","confirmButtonText","showLoaderOnConfirm","preConfirm","login","fetch","response","ok","Error","statusText","json","catch","error","showValidationMessage","allowOutsideClick","isLoading","undefined","imageUrl","avatar_url","Notification","props","Link","href","target"],"mappings":"8PAsHeA,UAhHM,WACjB,IAAMC,EAAoB,SAACC,GACRC,IAAiBC,KACzBC,KAAK,CACRC,MAAOJ,EAAMI,MACbC,KAAML,EAAMK,KACZC,KAAMN,EAAMM,QA4EpB,OACI,eAAC,IAAMC,SAAP,WACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKC,GAAI,GAAT,SACI,cAAC,IAAD,CAAoBC,QAAQ,qEAAqEC,KAAK,gEAG9G,cAAC,IAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAKC,OAAN,UACI,cAAC,IAAKC,MAAN,uBAEJ,eAAC,IAAKC,KAAN,CAAWC,UAAU,WAArB,UACI,cAAC,IAAD,CAAQC,QAAS,kBAAMhB,EAAkB,CAACK,MAAO,GAAIE,KAAM,GAAID,KAAM,kBAArE,mBACA,cAAC,IAAD,CAAQW,QAAQ,UAAUD,QAAS,kBAAMhB,EAAkB,CAACK,MAAO,YAAaE,KAAM,UAAWD,KAAM,6BAAvG,qBACA,cAAC,IAAD,CAAQW,QAAQ,SAASD,QAAS,kBAAMhB,EAAkB,CAACK,MAAO,YAAaE,KAAM,QAASD,KAAM,6BAApG,mBACA,cAAC,IAAD,CAAQW,QAAQ,UAAUD,QAAS,kBAAMhB,EAAkB,CAACK,MAAO,YAAaE,KAAM,UAAWD,KAAM,6BAAvG,qBACA,cAAC,IAAD,CAAQW,QAAQ,OAAOD,QAAS,kBAAMhB,EAAkB,CAACK,MAAO,YAAaE,KAAM,OAAQD,KAAM,6BAAjG,kBACA,cAAC,IAAD,CAAQU,QA3FJ,WACxB,IAAME,EAAShB,IAAiBC,KAChCe,EAAOd,KAAK,CACRC,MAAO,gBACPC,KAAM,qEACNC,KAAM,UACNY,iBAAiB,EACjBC,kBAAkB,IACnBC,MAAK,SAACC,GACL,OAAIA,EAAWC,MACJL,EAAOd,KAAK,GAAI,8CAA+C,WAE/Dc,EAAOd,KAAK,GAAI,+BAAgC,aA+E3C,qBACA,cAAC,IAAD,CAAQY,QA3EL,WACvB,IAAME,EAAShB,IAAiBC,KAChCe,EAAOd,KAAK,CACRE,KAAM,wBACNkB,MAAO,SACRH,MAAK,SAACI,GACL,OAAIA,EAAOF,MACAL,EAAOd,KAAK,GAAZ,qBAA8BqB,EAAOF,QAErCL,EAAOd,KAAK,WAAY,mBAAoB,aAkEvC,oBACA,cAAC,IAAD,CAAQY,QA9DP,WACrB,IAAME,EAAShB,IAAiBC,KAChCe,EAAOd,KAAK,CACRE,KAAM,8BACNkB,MAAO,OACPE,gBAAiB,CACbC,eAAgB,OAEpBP,kBAAkB,EAClBQ,kBAAmB,UACnBC,qBAAqB,EACrBC,WAAY,SAACC,GACT,OAAIA,EACOC,MAAM,0BAAD,OAA2BD,IAClCV,MAAK,SAAAY,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,YAE7B,OAAOH,EAASI,UAEnBC,OAAM,SAAAC,GACHpC,IAAKqC,sBAAL,0BACuBD,OAIxBrB,EAAOd,KAAK,WAAY,gBAAiB,UAGxDqC,kBAAmB,kBAAOtC,IAAKuC,eAChCrB,MAAK,SAACI,GACL,GAAIA,EAAOF,YAAgCoB,IAAvBlB,EAAOF,MAAMQ,MAC7B,OAAOb,EAAOd,KAAK,CACfC,MAAM,GAAD,OAAKoB,EAAOF,MAAMQ,MAAlB,aACLa,SAAUnB,EAAOF,MAAMsB,iBA4Bf,iC,qEC/FbC,IAXM,SAAAC,GACjB,OACI,cAAC,IAAMvC,SAAP,UACI,eAAC,IAAD,CAAOS,QAAQ,UAAf,UACK8B,EAAMrC,QACP,cAAC,IAAMsC,KAAP,CAAYC,KAAMF,EAAMpC,KAAMuC,OAAO,SAASnC,UAAU,cAAxD","file":"static/js/160.0384b7a9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Button} from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\r\n\r\nconst AdvanceAlert = () => {\r\n    const sweetAlertHandler = (alert) => {\r\n        const MySwal = withReactContent(Swal);\r\n        MySwal.fire({\r\n            title: alert.title,\r\n            text: alert.text,\r\n            type: alert.type\r\n        });\r\n    };\r\n\r\n    const sweetConfirmHandler = () => {\r\n        const MySwal = withReactContent(Swal);\r\n        MySwal.fire({\r\n            title: 'Are you sure?',\r\n            text: 'Once deleted, you will not be able to recover this imaginary file!',\r\n            type: 'warning',\r\n            showCloseButton: true,\r\n            showCancelButton: true\r\n        }).then((willDelete) => {\r\n            if (willDelete.value) {\r\n                return MySwal.fire('', 'Poof! Your imaginary file has been deleted!', 'success');\r\n            } else {\r\n                return MySwal.fire('', 'Your imaginary file is safe!', 'error');\r\n            }\r\n        });\r\n    };\r\n\r\n    const sweetPromptHandler = () => {\r\n        const MySwal = withReactContent(Swal);\r\n        MySwal.fire({\r\n            text: 'Write something here:',\r\n            input: 'text',\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                return MySwal.fire('', `You Typed: ${result.value}`);\r\n            } else {\r\n                return MySwal.fire('Invalid!', 'No message write', 'error');\r\n            }\r\n        });\r\n    };\r\n\r\n    const sweetAjaxHandler = () => {\r\n        const MySwal = withReactContent(Swal);\r\n        MySwal.fire({\r\n            text: 'Submit your Github username',\r\n            input: 'text',\r\n            inputAttributes: {\r\n                autocapitalize: 'off'\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Look up',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: (login) => {\r\n                if (login) {\r\n                    return fetch(`//api.github.com/users/${login}`)\r\n                        .then(response => {\r\n                            if (!response.ok) {\r\n                                throw new Error(response.statusText);\r\n                            }\r\n                            return response.json();\r\n                        })\r\n                        .catch(error => {\r\n                            Swal.showValidationMessage(\r\n                                `Request failed: ${error}`\r\n                            );\r\n                        });\r\n                } else {\r\n                    return MySwal.fire('Invalid!', 'No name enter', 'error');\r\n                }\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        }).then((result) => {\r\n            if (result.value && result.value.login !== undefined) {\r\n                return MySwal.fire({\r\n                    title: `${result.value.login}'s avatar`,\r\n                    imageUrl: result.value.avatar_url\r\n                });\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col sm={12}>  \r\n                    <ModuleNotification message=\"For more info please check the components's official documentation\" link='https://www.npmjs.com/package/sweetalert2-react-content' />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title>Alerts</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body className='btn-page'>\r\n                            <Button onClick={() => sweetAlertHandler({title: '', type: '', text: 'Hello World!'})}>Basic</Button>\r\n                            <Button variant=\"success\" onClick={() => sweetAlertHandler({title: 'Good job!', type: 'success', text: 'You clicked the button!'})}>Success</Button>\r\n                            <Button variant=\"danger\" onClick={() => sweetAlertHandler({title: 'Good job!', type: 'error', text: 'You clicked the button!'})}>Error</Button>\r\n                            <Button variant=\"warning\" onClick={() => sweetAlertHandler({title: 'Good job!', type: 'warning', text: 'You clicked the button!'})}>Warning</Button>\r\n                            <Button variant=\"info\" onClick={() => sweetAlertHandler({title: 'Good job!', type: 'info', text: 'You clicked the button!'})}>Info</Button>\r\n                            <Button onClick={sweetConfirmHandler}>Confirm</Button>\r\n                            <Button onClick={sweetPromptHandler}>Prompt</Button>\r\n                            <Button onClick={sweetAjaxHandler}>Ajax</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AdvanceAlert;","import React from \"react\";\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Notification = props => {\r\n    return (\r\n        <React.Fragment>\r\n            <Alert variant='warning'>\r\n                {props.message}\r\n                <Alert.Link href={props.link} target='_blank' className='float-right'>Demo & Documentation</Alert.Link>\r\n            </Alert>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Notification;"],"sourceRoot":""}