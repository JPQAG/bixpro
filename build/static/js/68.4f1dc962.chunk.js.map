{"version":3,"sources":["assets/images/gallery-grid/img-grd-gal-1.jpg","assets/images/gallery-grid/img-grd-gal-2.jpg","assets/images/gallery-grid/img-grd-gal-3.jpg","assets/images/gallery-grid/img-grd-gal-4.jpg","assets/images/gallery-grid/img-grd-gal-5.jpg","assets/images/gallery-grid/img-grd-gal-6.jpg","components/Gallery/SimpleGallery.js","views/applications/gallery/GalleryGrid.js","components/Widgets/Statistic/Notification.js"],"names":["SimpleGallery","props","itemVariant","images","texts","singleItem","videos","heading","subheading","showThumbnails","theme","backdropClosesModal","useState","lightboxIsOpen","setLightboxIsOpen","currentItem","setCurrentItem","itemType","openLightbox","event","index","preventDefault","gotoNext","prevState","gotoItem","handleClickItem","length","Fragment","className","gallery","filter","i","useForDemo","map","obj","href","src","css","classes","thumbnail","orientation","onClick","e","source","alt","xl","lg","md","sm","xs","text","text_thumbail","videoId","videoThumbnail","to","video_thumbnail","source_video","renderGallery","items","type","isOpen","onClickImage","onClickNext","onClickPrev","onClickThumbnail","onClose","displayName","gutter","StyleSheet","create","marginRight","overflow","boxSizing","display","float","lineHeight","paddingRight","paddingBottom","width","height","cursor","padding","margin","border","color","landscape","square","maxWidth","GalleryGrid","message","link","Header","Title","as","Body","thumb1","caption","thumb2","thumb3","thumb4","thumb5","thumb6","Notification","variant","Link","target"],"mappings":"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","file":"static/js/68.4f1dc962.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img-grd-gal-1.caf9fcc6.jpg\";","export default __webpack_public_path__ + \"static/media/img-grd-gal-2.aa1027ef.jpg\";","export default __webpack_public_path__ + \"static/media/img-grd-gal-3.4250c1f2.jpg\";","export default __webpack_public_path__ + \"static/media/img-grd-gal-4.ee7f86f7.jpg\";","export default __webpack_public_path__ + \"static/media/img-grd-gal-5.19343d86.jpg\";","export default __webpack_public_path__ + \"static/media/img-grd-gal-6.f590feca.jpg\";","import React, { useState } from 'react';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport { css, StyleSheet } from 'aphrodite/no-important';\r\nimport Lightbox from 'react-images-texts-videos';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SimpleGallery = props => {\r\n    const { images, texts, singleItem, videos, heading, subheading, showThumbnails, theme, backdropClosesModal } = props;\r\n\r\n    let itemVariant;\r\n    if (images) {\r\n        itemVariant = 'images'\r\n    } else if (texts) {\r\n        itemVariant = 'texts'\r\n    } else {\r\n        itemVariant = 'videos'\r\n    }\r\n\r\n    const [lightboxIsOpen, setLightboxIsOpen] = useState(false);\r\n    const [currentItem, setCurrentItem] = useState(0);\r\n    const [itemType] = useState(itemVariant);\r\n\r\n    const openLightbox = (event, index) => {\r\n        event.preventDefault();\r\n        setCurrentItem(index);\r\n        setLightboxIsOpen(true);\r\n\r\n    }\r\n\r\n    const closeLightbox = () => {\r\n        setCurrentItem(0);\r\n        setLightboxIsOpen(false);\r\n    }\r\n\r\n    const gotoPrevious = () => {\r\n        setCurrentItem(prevState => {\r\n            return prevState - 1\r\n        })\r\n    }\r\n\r\n    const gotoNext = () => {\r\n        setCurrentItem(prevState => {\r\n            return prevState + 1\r\n        })\r\n    }\r\n\r\n    const gotoItem = index => {\r\n        setCurrentItem(index);\r\n    }\r\n\r\n    const handleClickItem = () => {\r\n        if (currentItem === props[itemType].length - 1) return;\r\n        gotoNext();\r\n    }\r\n\r\n    const renderGallery = () => {\r\n        if (itemType === 'images') {\r\n            if (!images) return;\r\n\r\n            let gallery;\r\n\r\n            if (singleItem) {\r\n                gallery = images.filter(i => i.useForDemo).map((obj, i) => {\r\n                    return (\r\n                        <a\r\n                            href={obj.src}\r\n                            className={css(classes.thumbnail, classes[obj.orientation])}\r\n                            onClick={(e) => openLightbox(e, i)}\r\n                            key={i}\r\n                        >\r\n                            <div className='img-thumbnail'>\r\n                                <img src={obj.thumbnail} className={css(classes.source)} alt=\"\" />\r\n                            </div>\r\n                        </a>\r\n                    );\r\n                });\r\n                return (\r\n                    <div className={css(classes.gallery)}>\r\n                        {gallery}\r\n                    </div>\r\n                );\r\n            } else {\r\n                gallery = images.filter(i => i.useForDemo).map((obj, i) => {\r\n                    return (\r\n                        <Col xl={2} lg={3} md={4} sm={6} xs={12} key={i} className=\"mb-1\">\r\n                            <a\r\n                                href={obj.src}\r\n                                className={css(classes.thumbnail, classes[obj.orientation])}\r\n                                onClick={(e) => openLightbox(e, i)}\r\n                            >\r\n                                <div className='img-thumbnail'>\r\n                                    <img src={obj.thumbnail} className={css(classes.source)} alt=\"\" />\r\n                                </div>\r\n                            </a>\r\n                        </Col>\r\n                    );\r\n                });\r\n                return (\r\n                    <div className={css(classes.gallery)}>\r\n                        <Row>\r\n                            {gallery}\r\n                        </Row>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n        } else if (itemType === 'texts') {\r\n            let gallery;\r\n            if (!texts) return;\r\n\r\n            if (singleItem) {\r\n                gallery = texts.map((text, i) => {\r\n                    return (\r\n                        <p className={css(classes.text_thumbail)} key={i} onClick={(e) => openLightbox(e, i)}>\r\n                            {text}\r\n                        </p>\r\n                    );\r\n                });\r\n\r\n                return (\r\n                    <div className={css(classes.gallery)}>\r\n                        {gallery}\r\n                    </div>\r\n                );\r\n            } else {\r\n                gallery = texts.map((text, i) => {\r\n                    return (\r\n                        <Col xl={2} lg={3} md={4} sm={6} xs={12} key={i} className=\"mb-1\">\r\n                            <p\r\n                                className={css(classes.text_thumbail)}\r\n                                onClick={(e) => openLightbox(e, i)}\r\n                            >\r\n                                {text}\r\n                            </p>\r\n                        </Col>\r\n                    );\r\n                });\r\n\r\n                return (\r\n                    <div className={css(classes.gallery)}>\r\n                        {gallery}\r\n                    </div>\r\n                );\r\n            }\r\n        } else {\r\n            let gallery;\r\n            if (!videos) return;\r\n\r\n            if (singleItem) {\r\n                gallery = videos.map((videoId, i) => {\r\n                    const videoThumbnail = `https://img.youtube.com/vi/${videoId}/0.jpg`;\r\n                    return (\r\n                        <Link to='#'\r\n                           className={css(classes.video_thumbnail)}\r\n                           key={i}\r\n                           onClick={(e) => openLightbox(e, i)}\r\n                        >\r\n                            <div className='img-thumbnail'>\r\n                                <img src={videoThumbnail} className={css(classes.source_video)} alt=\"\" />\r\n                            </div>\r\n                        </Link>\r\n                    );\r\n                });\r\n\r\n                return (\r\n                    <div className={css(classes.gallery)}>\r\n                        {gallery}\r\n                    </div>\r\n                );\r\n            } else {\r\n                gallery = videos.map((videoId, i) => {\r\n                    const videoThumbnail = `https://img.youtube.com/vi/${videoId}/0.jpg`;\r\n                    return (\r\n                        <Col xl={2} lg={3} md={4} sm={6} xs={12} key={i} className=\"mb-1\">\r\n                            <Link to='#'\r\n                               className={css(classes.video_thumbnail)}\r\n                               onClick={(e) => openLightbox(e, i)}\r\n                            >\r\n                                <div className='img-thumbnail'>\r\n                                    <img src={videoThumbnail} className={css(classes.source_video)} alt=\"\" />\r\n                                </div>\r\n                            </Link>\r\n                        </Col>\r\n                    );\r\n                });\r\n\r\n                return (\r\n                    <div className={css(classes.gallery)}>\r\n                        <Row>\r\n                            {gallery}\r\n                        </Row>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='section'>\r\n                {heading && <h2>{heading}</h2>}\r\n                {subheading && <p>{subheading}</p>}\r\n                {renderGallery()}\r\n                <Lightbox\r\n                    currentItem={currentItem}\r\n                    items={{type:itemType,items:props[itemType]}}\r\n                    isOpen={lightboxIsOpen}\r\n                    onClickImage={() => handleClickItem}\r\n                    onClickNext={gotoNext}\r\n                    onClickPrev={gotoPrevious}\r\n                    onClickThumbnail={() => gotoItem}\r\n                    onClose={closeLightbox}\r\n                    showThumbnails={showThumbnails}\r\n                    theme={theme}\r\n                    backdropClosesModal={backdropClosesModal}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nSimpleGallery.displayName = 'Gallery';\r\n\r\nconst gutter = {\r\n    small: 2,\r\n    large: 4,\r\n};\r\nconst classes = StyleSheet.create({\r\n    gallery: {\r\n        marginRight: -gutter.small,\r\n        overflow: 'hidden',\r\n\r\n        '@media (min-width: 500px)': {\r\n            marginRight: -gutter.large,\r\n        },\r\n    },\r\n\r\n    // anchor\r\n    thumbnail: {\r\n        boxSizing: 'border-box',\r\n        display: 'block',\r\n        float: 'left',\r\n        lineHeight: 0,\r\n        paddingRight: gutter.small,\r\n        paddingBottom: gutter.small,\r\n        overflow: 'hidden',\r\n\r\n        '@media (min-width: 500px)': {\r\n            paddingRight: gutter.large,\r\n            paddingBottom: gutter.large,\r\n        },\r\n    },\r\n\r\n    // anchor\r\n    video_thumbnail: {\r\n        width:'50%',\r\n        height: '258px',\r\n        boxSizing: 'border-box',\r\n        display: 'block',\r\n        float: 'left',\r\n        lineHeight: 0,\r\n        paddingRight: gutter.small,\r\n        paddingBottom: gutter.small,\r\n        overflow: 'hidden',\r\n\r\n        '@media (min-width: 500px)': {\r\n            paddingRight: gutter.large,\r\n            paddingBottom: gutter.large,\r\n        },\r\n    },\r\n\r\n    // anchor\r\n    text_thumbail: {\r\n        cursor: 'pointer',\r\n        height: '200px',\r\n        'text-align': 'justify',\r\n        'font-size': '16px',\r\n        width: '46%',\r\n        padding: '10px',\r\n        margin: '10px',\r\n        boxSizing: 'border-box',\r\n        display: 'block',\r\n        float: 'left',\r\n        overflow: 'scroll',\r\n        border: 'solid 1px #E6E6E8',\r\n        'border-radius': '4px',\r\n        color: 'darkgray',\r\n\r\n        '@media (min-width: 500px)': {\r\n        },\r\n    },\r\n\r\n    // orientation\r\n    landscape: {\r\n        width: '30%',\r\n    },\r\n    square: {\r\n        paddingBottom: 0,\r\n        width: '40%',\r\n\r\n        '@media (min-width: 500px)': {\r\n            paddingBottom: 0,\r\n        },\r\n    },\r\n\r\n    // actual <img />\r\n    source: {\r\n        border: 0,\r\n        display: 'block',\r\n        height: 'auto',\r\n        maxWidth: '100%',\r\n        width: 'auto',\r\n    },\r\n\r\n\r\n    source_video: {\r\n        border: 0,\r\n        height: 'auto',\r\n        maxWidth: '90%',\r\n        width: 'auto',\r\n    },\r\n});\r\n\r\nexport default SimpleGallery;","import React from 'react';\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport Gallery from '../../../components/Gallery/SimpleGallery';\r\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\r\n\r\nimport thumb1 from '../../../assets/images/gallery-grid/img-grd-gal-1.jpg';\r\nimport thumb2 from '../../../assets/images/gallery-grid/img-grd-gal-2.jpg';\r\nimport thumb3 from '../../../assets/images/gallery-grid/img-grd-gal-3.jpg';\r\nimport thumb4 from '../../../assets/images/gallery-grid/img-grd-gal-4.jpg';\r\nimport thumb5 from '../../../assets/images/gallery-grid/img-grd-gal-5.jpg';\r\nimport thumb6 from '../../../assets/images/gallery-grid/img-grd-gal-6.jpg';\r\n\r\nconst GalleryGrid = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col sm={12}>  \r\n                    <ModuleNotification message=\"For more info please check the components's official documentation\" link='https://www.npmjs.com/package/react-images-texts-videos' />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as='h5'>Image Grid</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <Col xl={4} md={6} className='mb-4'>\r\n                                    <Gallery images={[{src: thumb1, thumbnail: thumb1, caption:\"Gradient Able Image 1\", useForDemo:true}]} backdropClosesModal singleItem />\r\n                                </Col>\r\n                                <Col xl={4} md={6} className='mb-4'>\r\n                                    <Gallery images={[{src: thumb2, thumbnail: thumb2, caption:\"Gradient Able Image 2\", useForDemo:true}]} backdropClosesModal singleItem />\r\n                                </Col>\r\n                                <Col xl={4} md={6} className='mb-4'>\r\n                                    <Gallery images={[{src: thumb3, thumbnail: thumb3, caption:\"Gradient Able Image 3\", useForDemo:true}]} backdropClosesModal singleItem />\r\n                                </Col>\r\n                                <Col xl={4} md={6} className='mb-4'>\r\n                                    <Gallery images={[{src: thumb4, thumbnail: thumb4, caption:\"Gradient Able Image 4\", useForDemo:true}]} backdropClosesModal singleItem />\r\n                                </Col>\r\n                                <Col xl={4} md={6} className='mb-4'>\r\n                                    <Gallery images={[{src: thumb5, thumbnail: thumb5, caption:\"Gradient Able Image 5\", useForDemo:true}]} backdropClosesModal singleItem />\r\n                                </Col>\r\n                                <Col xl={4} md={6} className='mb-4'>\r\n                                    <Gallery images={[{src: thumb6, thumbnail: thumb6, caption:\"Gradient Able Image 6\", useForDemo:true}]} backdropClosesModal singleItem />\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as='h5'>Video Grid</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <Col xl={4} md={6} className='mb-4'>\r\n                                    <Gallery videos={['0LjlawWMXCw']} backdropClosesModal singleItem />\r\n                                </Col>\r\n                                <Col xl={4} md={6} className='mb-4'>\r\n                                    <Gallery videos={['ZQ264Axbjxg']} backdropClosesModal singleItem />\r\n                                </Col>\r\n                                <Col xl={4} md={6} className='mb-4'>\r\n                                    <Gallery videos={['bYbV_PFdfQs']} backdropClosesModal singleItem />\r\n                                </Col>\r\n                                <Col xl={4} md={6} className='mb-4'>\r\n                                    <Gallery videos={['IkyZHPnfFnE']} backdropClosesModal singleItem />\r\n                                </Col>\r\n                                <Col xl={4} md={6} className='mb-4'>\r\n                                    <Gallery videos={['HjV2aWgavdo']} backdropClosesModal singleItem />\r\n                                </Col>\r\n                                <Col xl={4} md={6} className='mb-4'>\r\n                                    <Gallery videos={['Rh03jAsRHQM']} backdropClosesModal singleItem />\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default GalleryGrid;","import React from \"react\";\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Notification = props => {\r\n    return (\r\n        <React.Fragment>\r\n            <Alert variant='warning'>\r\n                {props.message}\r\n                <Alert.Link href={props.link} target='_blank' className='float-right'>Demo & Documentation</Alert.Link>\r\n            </Alert>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Notification;"],"sourceRoot":""}