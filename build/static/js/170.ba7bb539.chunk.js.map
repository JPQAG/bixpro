{"version":3,"sources":["views/ui-elements/advance/AdvanceTaskBoard.js","components/Widgets/Statistic/Notification.js"],"names":["AdvanceTaskBoard","useState","data","setData","getData","a","axios","get","response","taskboard","useEffect","Fragment","sm","message","link","draggable","editable","canAddLanes","collapsibleLanes","editLaneTitle","className","addCardLink","size","onLaneAdd","console","log","addLaneTitle","onCardUpdate","onLaneUpdate","Notification","props","variant","Link","href","target"],"mappings":"6QA4DeA,UArDU,WAAO,IAAD,EACHC,mBAAS,CAAC,MAAS,KADhB,mBACpBC,EADoB,KACdC,EADc,KAGrBC,EAAO,uCAAG,4BAAAC,EAAA,sEACWC,IAAMC,IAAI,kBADrB,OACNC,EADM,OAEZL,EAAQK,EAASN,KAAKO,WAFV,2CAAH,qDAKbC,qBAAU,WACNN,MACD,IAcH,OACI,eAAC,IAAMO,SAAP,WACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKC,GAAI,GAAT,SACI,cAAC,IAAD,CAAoBC,QAAQ,qEAAqEC,KAAK,mDAG9G,cAAC,IAAD,UACI,cAAC,IAAD,CAAKF,GAAI,GAAT,SACI,cAAC,IAAD,CACIV,KAAMA,EACNa,WAAS,EACTC,UAAQ,EACRC,aAAW,EACXC,kBAAgB,EAChBC,eAAa,EACbC,UAAU,iBACVC,YAAa,sBAAKD,UAAU,OAAf,cAAuB,cAAC,IAAD,CAAQE,KAAK,KAAb,6BACpCC,UA9BF,WACdC,QAAQC,IAAI,aA8BIC,aAAa,iBACbC,aA5BC,WACjBH,QAAQC,IAAI,mBA4BIG,aAzBC,WACjBJ,QAAQC,IAAI,8B,qECdLI,IAXM,SAAAC,GACjB,OACI,cAAC,IAAMnB,SAAP,UACI,eAAC,IAAD,CAAOoB,QAAQ,UAAf,UACKD,EAAMjB,QACP,cAAC,IAAMmB,KAAP,CAAYC,KAAMH,EAAMhB,KAAMoB,OAAO,SAASd,UAAU,cAAxD","file":"static/js/170.ba7bb539.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport Board from 'react-trello';\r\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\r\n\r\nimport axios from '../../../utils/axios';\r\n\r\nconst AdvanceTaskBoard = () => {\r\n    const [data, setData] = useState({\"lanes\": []});\r\n\r\n    const getData = async () => {\r\n        const response = await axios.get('/api/taskboard');\r\n        setData(response.data.taskboard);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    const onLaneAdd = () => {\r\n        console.log('Add Task');\r\n    };\r\n\r\n    const onCardUpdate = () => {\r\n        console.log('on Card Update');\r\n    };\r\n\r\n    const onLaneUpdate = () => {\r\n        console.log('on Lane Update');\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col sm={12}>  \r\n                    <ModuleNotification message=\"For more info please check the components's official documentation\" link='https://www.npmjs.com/package/react-trello' />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col sm={12}>\r\n                    <Board\r\n                        data={data}\r\n                        draggable\r\n                        editable\r\n                        canAddLanes\r\n                        collapsibleLanes\r\n                        editLaneTitle\r\n                        className=\"adv-task-board\"\r\n                        addCardLink={<div className=\"mt-1\"> <Button size=\"sm\">Add New Card</Button></div>}\r\n                        onLaneAdd={onLaneAdd}\r\n                        addLaneTitle=\"+ Add New Task\"\r\n                        onCardUpdate={onCardUpdate}\r\n                        onLaneUpdate={onLaneUpdate}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AdvanceTaskBoard;","import React from \"react\";\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Notification = props => {\r\n    return (\r\n        <React.Fragment>\r\n            <Alert variant='warning'>\r\n                {props.message}\r\n                <Alert.Link href={props.link} target='_blank' className='float-right'>Demo & Documentation</Alert.Link>\r\n            </Alert>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Notification;"],"sourceRoot":""}