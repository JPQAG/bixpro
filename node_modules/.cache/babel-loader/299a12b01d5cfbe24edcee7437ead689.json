{"ast":null,"code":"import _slicedToArray from\"C:/Users/James Price/Documents/VS Code/bixpro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Row,Col,Card,Button,Modal}from'react-bootstrap';import Cropper from\"react-cropper\";import ModuleNotification from'../../components/Widgets/Statistic/Notification';import\"cropperjs/dist/cropper.css\";import defaultSrc from\"../../assets/images/light-box/l1.jpg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ImageCropper=function ImageCropper(){var _useState=useState(defaultSrc),_useState2=_slicedToArray(_useState,2),image=_useState2[0],setImage=_useState2[1];var _useState3=useState(\"#\"),_useState4=_slicedToArray(_useState3,2),cropData=_useState4[0],setCropData=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),cropper=_useState6[0],setCropper=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),show=_useState8[0],setShow=_useState8[1];var handleClose=function handleClose(){return setShow(false);};var handleShow=function handleShow(){return setShow(true);};var onChange=function onChange(e){e.preventDefault();var files;if(e.dataTransfer){files=e.dataTransfer.files;}else if(e.target){files=e.target.files;}var reader=new FileReader();reader.onload=function(){setImage(reader.result);};reader.readAsDataURL(files[0]);};var getCropData=function getCropData(){if(typeof cropper!==\"undefined\"){setCropData(cropper.getCroppedCanvas().toDataURL());}};return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{sm:12,children:/*#__PURE__*/_jsx(ModuleNotification,{message:\"For more info please check the components's official documentation\",link:\"https://www.npmjs.com/package/react-cropper\"})})}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{sm:12,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{children:\"Image Cropper Plugin\"})}),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(Row,{className:\"justify-content-between\",children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:onChange})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(\"div\",{className:\"float-right\",children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return setImage(defaultSrc);},children:\"Use default img\"})})})]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{sm:12,className:\"mt-3\",children:/*#__PURE__*/_jsx(Cropper,{style:{height:400,width:\"100%\"},initialAspectRatio:1,preview:\".img-preview\",src:image,viewMode:1,guides:true,minCropBoxHeight:10,minCropBoxWidth:10,background:false,responsive:true,autoCropArea:1,checkOrientation:false// https://github.com/fengyuanchen/cropperjs/issues/671\n,onInitialized:function onInitialized(instance){setCropper(instance);}})})})]})]})}),/*#__PURE__*/_jsx(Col,{sm:12,children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){getCropData();handleShow();},children:\"Crop Image\"})}),/*#__PURE__*/_jsxs(Modal,{show:show,onHide:handleClose,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Croped Image\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsx(\"img\",{style:{width:\"100%\",height:\"auto\"},src:cropData,alt:\"cropped\"})}),/*#__PURE__*/_jsx(Modal.Footer,{children:/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:handleClose,children:\"Close\"})})]})]})]});};export default ImageCropper;","map":{"version":3,"sources":["C:/Users/James Price/Documents/VS Code/bixpro/src/views/extensions/ImageCropper.js"],"names":["React","useState","Row","Col","Card","Button","Modal","Cropper","ModuleNotification","defaultSrc","ImageCropper","image","setImage","cropData","setCropData","cropper","setCropper","show","setShow","handleClose","handleShow","onChange","e","preventDefault","files","dataTransfer","target","reader","FileReader","onload","result","readAsDataURL","getCropData","getCroppedCanvas","toDataURL","height","width","instance"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Row, Col, Card, Button, Modal } from 'react-bootstrap';\r\nimport Cropper from \"react-cropper\";\r\nimport ModuleNotification from '../../components/Widgets/Statistic/Notification';\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\nimport defaultSrc from \"../../assets/images/light-box/l1.jpg\";\r\n\r\nconst ImageCropper = () => {\r\n    const [image, setImage] = useState(defaultSrc);\r\n    const [cropData, setCropData] = useState(\"#\");\r\n    const [cropper, setCropper] = useState();\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    const onChange = (e) => {\r\n        e.preventDefault();\r\n        let files;\r\n        if (e.dataTransfer) {\r\n        files = e.dataTransfer.files;\r\n        } else if (e.target) {\r\n        files = e.target.files;\r\n        }\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n        setImage(reader.result);\r\n        };\r\n        reader.readAsDataURL(files[0]);\r\n    };\r\n\r\n    const getCropData = () => {\r\n        if (typeof cropper !== \"undefined\") {\r\n        setCropData(cropper.getCroppedCanvas().toDataURL());\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col sm={12}>  \r\n                    <ModuleNotification message=\"For more info please check the components's official documentation\" link='https://www.npmjs.com/package/react-cropper'  />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col sm={12}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <h5>Image Cropper Plugin</h5>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Row className='justify-content-between'>\r\n                                <Col>\r\n                                    <input type=\"file\" onChange={onChange} />\r\n                                </Col>\r\n                                <Col>\r\n                                    <div className='float-right'>\r\n                                        <Button onClick={() => setImage(defaultSrc)}>Use default img</Button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col sm={12} className='mt-3'>\r\n                                    <Cropper\r\n                                        style={{ height: 400, width: \"100%\" }}\r\n                                        initialAspectRatio={1}\r\n                                        preview=\".img-preview\"\r\n                                        src={image}\r\n                                        viewMode={1}\r\n                                        guides={true}\r\n                                        minCropBoxHeight={10}\r\n                                        minCropBoxWidth={10}\r\n                                        background={false}\r\n                                        responsive={true}\r\n                                        autoCropArea={1}\r\n                                        checkOrientation={false} // https://github.com/fengyuanchen/cropperjs/issues/671\r\n                                        onInitialized={(instance) => {\r\n                                            setCropper(instance);\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={12}>\r\n                    <Button onClick={() => {\r\n                        getCropData();\r\n                        handleShow();\r\n                    }}>Crop Image</Button>\r\n                </Col>\r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Croped Image</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <img style={{ width: \"100%\", height: \"auto\" }} src={cropData} alt=\"cropped\" />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ImageCropper;"]},"metadata":{},"sourceType":"module"}