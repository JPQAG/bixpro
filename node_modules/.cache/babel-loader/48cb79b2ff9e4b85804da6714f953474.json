{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\James Price\\\\Documents\\\\VS Code\\\\bixpro\\\\src\\\\components\\\\cryptX\\\\tables\\\\React\\\\FullTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Card, Table, Tab, Nav, Form, InputGroup, FormControl } from 'react-bootstrap';\nimport BTable from 'react-bootstrap/Table';\nimport { useTable, useSortBy, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table';\nimport matchSorter from 'match-sorter'; //Get Mock Header Data\n\nimport dataTable from '../../../../data/FullTableData';\nimport makeData from '../../../../data/tableData';\nimport ModuleNotification from '../../../../components/Widgets/Statistic/Notification';\nimport FullTableData from '../../../../data/FullTableData';\n\nfunction TableFull({\n  columns,\n  data\n}) {\n  _s();\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setFilter\n  } = useTable({\n    columns,\n    data\n  }, useFilters, useSortBy);\n  const [filterInput, setFilterInput] = useState(\"\");\n\n  const handleFilterChange = e => {\n    const value = e.target.value || undefined;\n    setFilter(\"firstName\", value);\n    setFilterInput(value);\n  }; // We don't want to render all 2000 rows for this example, so cap\n  // it at 20 for this use case\n\n\n  const firstPageRows = rows; //.filter(row =>\n  //     row.filter(i => \n  //         i.original.firstName.toLowerCase().includes(search.toLowerCase())) \n  // );\n\n  console.log(dataTable);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n      size: \"sm\",\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n        children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n          id: \"inputGroup-sizing-sm\",\n          children: \"Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        value: filterInput,\n        onChange: handleFilterChange,\n        \"aria-label\": \"Small\",\n        \"aria-describedby\": \"inputGroup-sizing-sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BTable, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column =>\n          /*#__PURE__*/\n          // Add the sorting props to control sorting. For this example\n          // we can add them into the header props\n          _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"feather icon-arrow-down text-muted float-right mt-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 29\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"feather icon-arrow-up text-muted float-right mt-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this) : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: firstPageRows.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TableFull, \"prOEyr/GV8vzaMroyNvw/s48UUY=\", false, function () {\n  return [useTable];\n});\n\n_c = TableFull;\n\nfunction App() {\n  _s2();\n\n  const columns = React.useMemo(() => dataTable, []);\n  const data = React.useMemo(() => makeData(10), []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(ModuleNotification, {\n          message: \"For more info please check the components's official documentation\",\n          link: \"https://react-table.tanstack.com/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              as: \"h5\",\n              children: \"Column Sorting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(TableFull, {\n              columns: columns,\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(App, \"7zObr1GywQUmP9L3sfy/4IDluAk=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TableFull\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/James Price/Documents/VS Code/bixpro/src/components/cryptX/tables/React/FullTable.js"],"names":["React","useState","useEffect","Row","Col","Card","Table","Tab","Nav","Form","InputGroup","FormControl","BTable","useTable","useSortBy","useFilters","useGlobalFilter","useAsyncDebounce","matchSorter","dataTable","makeData","ModuleNotification","FullTableData","TableFull","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setFilter","filterInput","setFilterInput","handleFilterChange","e","value","target","undefined","firstPageRows","console","log","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","App","useMemo"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport {Row, Col, Card, Table, Tab, Nav, Form, InputGroup, FormControl } from 'react-bootstrap';\r\nimport BTable from 'react-bootstrap/Table';\r\nimport { useTable, useSortBy, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table';\r\nimport matchSorter from 'match-sorter';\r\n\r\n//Get Mock Header Data\r\nimport dataTable from '../../../../data/FullTableData';\r\n\r\nimport makeData from '../../../../data/tableData';\r\nimport ModuleNotification from '../../../../components/Widgets/Statistic/Notification';\r\nimport FullTableData from '../../../../data/FullTableData';\r\n\r\n\r\nfunction TableFull({ columns, data }) {\r\n    const {\r\n          getTableProps, \r\n          getTableBodyProps, \r\n          headerGroups, \r\n          rows, \r\n          prepareRow, \r\n          setFilter\r\n        } = useTable(\r\n      {\r\n        columns,\r\n        data,\r\n      },\r\n      useFilters,\r\n      useSortBy\r\n    );\r\n\r\n    const [ filterInput, setFilterInput ] = useState(\"\");\r\n\r\n    const handleFilterChange = e => {\r\n        const value = e.target.value || undefined;\r\n        setFilter(\"firstName\", value);\r\n        setFilterInput(value);\r\n    };\r\n  \r\n    // We don't want to render all 2000 rows for this example, so cap\r\n    // it at 20 for this use case\r\n    const firstPageRows = rows//.filter(row =>\r\n    //     row.filter(i => \r\n    //         i.original.firstName.toLowerCase().includes(search.toLowerCase())) \r\n    // );\r\n\r\n    console.log(dataTable);\r\n\r\n  \r\n    return (\r\n      <>\r\n        <InputGroup size=\"sm\" className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroup-sizing-sm\">Filter</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl value={filterInput} onChange={handleFilterChange} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\r\n        </InputGroup>\r\n        <BTable striped bordered hover responsive {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  // Add the sorting props to control sorting. For this example\r\n                  // we can add them into the header props\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    {column.render('Header')}\r\n                    {/* Add a sort direction indicator */}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? <span className='feather icon-arrow-down text-muted float-right mt-1' />\r\n                          : <span className='feather icon-arrow-up text-muted float-right mt-1' />\r\n                        : ''}\r\n                    </span>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {firstPageRows.map(\r\n              (row, i) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <tr {...row.getRowProps()}>\r\n                    {row.cells.map(cell => {\r\n                      return (\r\n                        <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                      )\r\n                    })}\r\n                  </tr>\r\n                )}\r\n            )}\r\n          </tbody>\r\n        </BTable>\r\n      </>\r\n    )\r\n  }\r\n  \r\n  function App() {\r\n    const columns = React.useMemo(\r\n      () => dataTable,\r\n      []\r\n    )\r\n  \r\n    const data = React.useMemo(() => makeData(10), [])\r\n  \r\n    return (\r\n        <React.Fragment>\r\n          <Row>\r\n              <Col sm={12}>  \r\n                  <ModuleNotification message=\"For more info please check the components's official documentation\" link='https://react-table.tanstack.com/' />\r\n              </Col>\r\n          </Row>\r\n          <Row>\r\n              <Col>\r\n                  <Card>\r\n                      <Card.Header>\r\n                          <Card.Title as=\"h5\">Column Sorting</Card.Title>\r\n                      </Card.Header>\r\n                      <Card.Body>\r\n                          <TableFull columns={columns} data={data} />\r\n                      </Card.Body>\r\n                  </Card>\r\n              </Col>\r\n          </Row>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n  \r\n  export default App\r\n  "]},"metadata":{},"sourceType":"module"}