{"ast":null,"code":"import _slicedToArray from\"C:/Users/James Price/Documents/VS Code/bixpro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useRef}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var GalleryMasonry=function GalleryMasonry(props){var inputEl=useRef(null);var _useState=useState(1),_useState2=_slicedToArray(_useState,2),columns=_useState2[0],setColumns=_useState2[1];useEffect(function(){onResize();window.addEventListener('resize',onResize);});var getColumns=function getColumns(w){return props.brakePoints.reduceRight(function(p,c,i){return c<w?p:i;},props.brakePoints.length)+1;};var onResize=function onResize(){if(!!inputEl.current){var columnsNew=getColumns(inputEl.current.offsetWidth);if(columns!==columnsNew){setColumns(columnsNew);}}};var mapChildren=function mapChildren(){var col=[];var numC=columns;for(var i=0;i<numC;i++){col.push([]);}return props.children.reduce(function(p,c,i){p[i%numC].push(c);return p;},col);};return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"masonry\",ref:inputEl,children:mapChildren().map(function(col,ci){return/*#__PURE__*/_jsx(\"div\",{className:\"column\",children:col.map(function(child,i){return/*#__PURE__*/_jsx(\"div\",{children:child},i);})},ci);})})});};export default GalleryMasonry;","map":{"version":3,"sources":["C:/Users/James Price/Documents/VS Code/bixpro/src/components/Gallery/GalleryMasonry.js"],"names":["React","useEffect","useState","useRef","GalleryMasonry","props","inputEl","columns","setColumns","onResize","window","addEventListener","getColumns","w","brakePoints","reduceRight","p","c","i","length","current","columnsNew","offsetWidth","mapChildren","col","numC","push","children","reduce","map","ci","child"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,MAArC,KAAmD,OAAnD,C,2CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,KAAK,CAAI,CAC5B,GAAMC,CAAAA,OAAO,CAAGH,MAAM,CAAC,IAAD,CAAtB,CAD4B,cAEED,QAAQ,CAAC,CAAD,CAFV,wCAErBK,OAFqB,eAEZC,UAFY,eAI5BP,SAAS,CAAC,UAAM,CACZQ,QAAQ,GACRC,MAAM,CAACC,gBAAP,CAAwB,QAAxB,CAAkCF,QAAlC,EACH,CAHQ,CAAT,CAKA,GAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,CAAD,CAAO,CACtB,MAAOR,CAAAA,KAAK,CAACS,WAAN,CAAkBC,WAAlB,CAA+B,SAACC,CAAD,CAAIC,CAAJ,CAAOC,CAAP,CAAa,CAC/C,MAAOD,CAAAA,CAAC,CAAGJ,CAAJ,CAAQG,CAAR,CAAYE,CAAnB,CACH,CAFM,CAEJb,KAAK,CAACS,WAAN,CAAkBK,MAFd,EAEwB,CAF/B,CAGH,CAJD,CAMA,GAAMV,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,GAAI,CAAC,CAACH,OAAO,CAACc,OAAd,CAAuB,CACnB,GAAMC,CAAAA,UAAU,CAAGT,UAAU,CAACN,OAAO,CAACc,OAAR,CAAgBE,WAAjB,CAA7B,CACA,GAAGf,OAAO,GAAKc,UAAf,CAA2B,CACvBb,UAAU,CAACa,UAAD,CAAV,CACH,CACJ,CACJ,CAPD,CASA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,GAAIC,CAAAA,GAAG,CAAG,EAAV,CACA,GAAMC,CAAAA,IAAI,CAAGlB,OAAb,CACA,IAAI,GAAIW,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,CAAGO,IAAnB,CAAyBP,CAAC,EAA1B,CAA6B,CACzBM,GAAG,CAACE,IAAJ,CAAS,EAAT,EACH,CACD,MAAOrB,CAAAA,KAAK,CAACsB,QAAN,CAAeC,MAAf,CAAsB,SAACZ,CAAD,CAAGC,CAAH,CAAKC,CAAL,CAAW,CACpCF,CAAC,CAACE,CAAC,CAACO,IAAH,CAAD,CAAUC,IAAV,CAAeT,CAAf,EACA,MAAOD,CAAAA,CAAP,CACH,CAHM,CAGJQ,GAHI,CAAP,CAIH,CAVD,CAYA,mBACI,KAAC,KAAD,CAAO,QAAP,wBACI,YAAK,SAAS,CAAC,SAAf,CAAyB,GAAG,CAAElB,OAA9B,UACKiB,WAAW,GAAGM,GAAd,CAAkB,SAACL,GAAD,CAAMM,EAAN,CAAa,CAC5B,mBACI,YAAK,SAAS,CAAC,QAAf,UACKN,GAAG,CAACK,GAAJ,CAAQ,SAACE,KAAD,CAAQb,CAAR,CAAc,CACnB,mBAAO,qBAAea,KAAf,EAAUb,CAAV,CAAP,CACH,CAFA,CADL,EAA6BY,EAA7B,CADJ,CAOH,CARA,CADL,EADJ,EADJ,CAeH,CAnDD,CAqDA,cAAe1B,CAAAA,cAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\n\r\nconst GalleryMasonry = props => {\r\n    const inputEl = useRef(null);\r\n    const [columns, setColumns] = useState(1);\r\n\r\n    useEffect(() => {\r\n        onResize();\r\n        window.addEventListener('resize', onResize)\r\n    })\r\n\r\n    const getColumns = (w) => {\r\n        return props.brakePoints.reduceRight( (p, c, i) => {\r\n            return c < w ? p : i;\r\n        }, props.brakePoints.length) + 1;\r\n    }\r\n\r\n    const onResize = () => {\r\n        if (!!inputEl.current) {\r\n            const columnsNew = getColumns(inputEl.current.offsetWidth);\r\n            if(columns !== columnsNew) {\r\n                setColumns(columnsNew)\r\n            }\r\n        }\r\n    }\r\n\r\n    const mapChildren = () => {\r\n        let col = [];\r\n        const numC = columns;\r\n        for(let i = 0; i < numC; i++){\r\n            col.push([]);\r\n        }\r\n        return props.children.reduce((p,c,i) => {\r\n            p[i%numC].push(c);\r\n            return p;\r\n        }, col);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"masonry\" ref={inputEl}>\r\n                {mapChildren().map((col, ci) => {\r\n                    return (\r\n                        <div className=\"column\" key={ci} >\r\n                            {col.map((child, i) => {\r\n                                return <div key={i} >{child}</div>\r\n                            })}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default GalleryMasonry;"]},"metadata":{},"sourceType":"module"}