{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import{Row,Col,Card,Table,Tab,Nav,Form,InputGroup,FormControl}from'react-bootstrap';import{Link}from'react-router-dom';import axios from'axios';import{CONFIG}from'../../../config/constant.js';// const secretKey = CONFIG.binance.secretKey;\n// const apiKey = CONFIG.binance.apiKey;\n// const Binance = require('node-binance-api');\n// const binance = new Binance().options({\n//     APIKEY: apiKey,\n//     APISECRET: secretKey\n// });\n// binance.options({\n//     APIKEY: CONFIG.binance.secretKey,\n//     APISECRET: CONFIG.binance.apiKey,\n//     useServerTime: true,\n//     recvWindow: 60000, // Set a higher recvWindow to increase response timeout\n//     verbose: true, // Add extra output when subscribing to WebSockets, etc\n//     log: log => {\n//       console.log(log); // You can create your own logger here, or disable console output\n//     }\n//   });\n// const baseURL = \"https://api.binance.com\";\n// const query = '/api/v3/time';\n// const url = baseURL + query;\nvar DashHoldings=function DashHoldings(){// const [holdings, setHoldings] = useState([]);\n// const getHoldings = async () => {\n//     axios\n//         .get(\n//             url\n//         )\n//         .then(res => {\n//             setHoldings(res.data);\n//             console.log(res.data);\n//         })\n//         .catch(error => console.log(error))\n//     let ticker = await binance.prices();\n//     console.log('price of Bitcoin: ' + ticker.BTCUSDT);\n// }\n// useEffect(() => {\n//     getHoldings()\n//     const interval=setInterval(() => {\n//         getHoldings()\n//     }, 1000)\n//     return() => clearInterval(\n//         interval\n//     )}, []\n// );\nreturn/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{xl:12,md:6,children:/*#__PURE__*/_jsxs(Card,{className:\"code-table\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(Card.Title,{as:\"h5\",children:\"Portfolio Holdings\"})}),/*#__PURE__*/_jsxs(Card.Body,{className:\"pb-0\",children:[/*#__PURE__*/_jsxs(InputGroup,{size:\"sm\",className:\"mb-3\",children:[/*#__PURE__*/_jsx(InputGroup.Prepend,{children:/*#__PURE__*/_jsx(InputGroup.Text,{id:\"inputGroup-sizing-sm\",children:\"Filter\"})}),/*#__PURE__*/_jsx(FormControl,{\"aria-label\":\"Small\",\"aria-describedby\":\"input-Group-sizing-sm\"})]}),/*#__PURE__*/_jsxs(Table,{response:true,hover:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"First Column\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Second Column\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"First Data\"}),/*#__PURE__*/_jsx(\"td\",{children:\"Second Data\"})]})})]})]})]})})})});};export default DashHoldings;","map":{"version":3,"sources":["C:/Users/James Price/Documents/VS Code/bixpro/src/views/dashboard/DashProject/index.js"],"names":["React","useState","useEffect","Row","Col","Card","Table","Tab","Nav","Form","InputGroup","FormControl","Link","axios","CONFIG","DashHoldings"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,IAAnB,CAAyBC,KAAzB,CAAgCC,GAAhC,CAAqCC,GAArC,CAA0CC,IAA1C,CAAgDC,UAAhD,CAA4DC,WAA5D,KAA+E,iBAA/E,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,MAAT,KAAuB,6BAAvB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAMA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CAEvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA,mBACI,KAAC,KAAD,CAAO,QAAP,wBACI,KAAC,GAAD,wBACI,KAAC,GAAD,EAAK,EAAE,CAAE,EAAT,CAAa,EAAE,CAAE,CAAjB,uBACI,MAAC,IAAD,EAAM,SAAS,CAAC,YAAhB,wBACI,KAAC,IAAD,CAAM,MAAN,wBACI,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,IAAf,gCADJ,EADJ,cAII,MAAC,IAAD,CAAM,IAAN,EAAW,SAAS,CAAC,MAArB,wBACI,MAAC,UAAD,EAAY,IAAI,CAAC,IAAjB,CAAsB,SAAS,CAAC,MAAhC,wBACI,KAAC,UAAD,CAAY,OAAZ,wBACI,KAAC,UAAD,CAAY,IAAZ,EAAiB,EAAE,CAAC,sBAApB,oBADJ,EADJ,cAII,KAAC,WAAD,EAAa,aAAW,OAAxB,CAAgC,mBAAiB,uBAAjD,EAJJ,GADJ,cAOI,MAAC,KAAD,EAAO,QAAQ,KAAf,CAAgB,KAAK,KAArB,wBACI,oCACI,mCACI,oCADJ,cAEI,qCAFJ,GADJ,EADJ,cAOI,oCACI,mCACI,kCADJ,cAEI,mCAFJ,GADJ,EAPJ,GAPJ,GAJJ,GADJ,EADJ,EADJ,EADJ,CAwCH,CA5ED,CA8EA,cAAeA,CAAAA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Card, Table, Tab, Nav, Form, InputGroup, FormControl } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { CONFIG } from '../../../config/constant.js'\r\n\r\n// const secretKey = CONFIG.binance.secretKey;\r\n// const apiKey = CONFIG.binance.apiKey;\r\n// const Binance = require('node-binance-api');\r\n// const binance = new Binance().options({\r\n//     APIKEY: apiKey,\r\n//     APISECRET: secretKey\r\n// });\r\n\r\n// binance.options({\r\n//     APIKEY: CONFIG.binance.secretKey,\r\n//     APISECRET: CONFIG.binance.apiKey,\r\n//     useServerTime: true,\r\n//     recvWindow: 60000, // Set a higher recvWindow to increase response timeout\r\n//     verbose: true, // Add extra output when subscribing to WebSockets, etc\r\n//     log: log => {\r\n//       console.log(log); // You can create your own logger here, or disable console output\r\n//     }\r\n//   });\r\n\r\n\r\n// const baseURL = \"https://api.binance.com\";\r\n// const query = '/api/v3/time';\r\n// const url = baseURL + query;\r\n\r\n\r\n\r\n\r\n\r\nconst DashHoldings = () => {\r\n\r\n    // const [holdings, setHoldings] = useState([]);\r\n\r\n    // const getHoldings = async () => {\r\n    //     axios\r\n    //         .get(\r\n    //             url\r\n    //         )\r\n    //         .then(res => {\r\n    //             setHoldings(res.data);\r\n    //             console.log(res.data);\r\n    //         })\r\n    //         .catch(error => console.log(error))\r\n\r\n    //     let ticker = await binance.prices();\r\n    //     console.log('price of Bitcoin: ' + ticker.BTCUSDT);\r\n\r\n        \r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     getHoldings()\r\n\r\n    //     const interval=setInterval(() => {\r\n    //         getHoldings()\r\n    //     }, 1000)\r\n\r\n    //     return() => clearInterval(\r\n    //         interval\r\n    //     )}, []\r\n    // );\r\n    \r\n    \r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col xl={12} md={6}>\r\n                    <Card className='code-table'>\r\n                        <Card.Header>\r\n                            <Card.Title as='h5'>Portfolio Holdings</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body className='pb-0'>\r\n                            <InputGroup size=\"sm\" className=\"mb-3\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text id=\"inputGroup-sizing-sm\">Filter</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl aria-label=\"Small\" aria-describedby=\"input-Group-sizing-sm\" />\r\n                            </InputGroup>\r\n                            <Table response hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>First Column</th>\r\n                                        <th>Second Column</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>First Data</td>\r\n                                        <td>Second Data</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    )\r\n\r\n    \r\n\r\n\r\n\r\n}\r\n\r\nexport default DashHoldings;"]},"metadata":{},"sourceType":"module"}