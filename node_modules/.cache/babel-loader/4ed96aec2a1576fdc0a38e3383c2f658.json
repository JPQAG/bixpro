{"ast":null,"code":"var _objectSpread = require(\"C:/Users/James Price/Documents/VS Code/bixpro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _slicedToArray = require(\"C:/Users/James Price/Documents/VS Code/bixpro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"C:/Users/James Price/Documents/VS Code/bixpro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _regeneratorRuntime = require(\"C:/Users/James Price/Documents/VS Code/bixpro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:/Users/James Price/Documents/VS Code/bixpro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\n/* ============================================================\r\n * node-binance-api\r\n * https://github.com/jaggedsoft/node-binance-api\r\n * ============================================================\r\n * Copyright 2017-, Jon Eyrick\r\n * Released under the MIT License\r\n * ============================================================\r\n * @module jaggedsoft/node-binance-api\r\n * @return {object} instance to class object */\nvar api = function Binance() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (!(this instanceof Binance ? this.constructor : void 0)) return new api(options); // Legacy support for calling the constructor without 'new'\n\n  var Binance = this; // eslint-disable-line consistent-this\n\n  var WebSocket = require('ws');\n\n  var request = require('request');\n\n  var crypto = require('crypto');\n\n  var file = require('fs');\n\n  var url = require('url');\n\n  var JSONbig = require('json-bigint');\n\n  var HttpsProxyAgent = require('https-proxy-agent');\n\n  var SocksProxyAgent = require('socks-proxy-agent');\n\n  var stringHash = require('string-hash');\n\n  var async = require('async');\n\n  var base = 'https://api.binance.com/api/';\n  var wapi = 'https://api.binance.com/wapi/';\n  var sapi = 'https://api.binance.com/sapi/';\n  var fapi = 'https://fapi.binance.com/fapi/';\n  var dapi = 'https://dapi.binance.com/dapi/';\n  var fapiTest = 'https://testnet.binancefuture.com/fapi/';\n  var dapiTest = 'https://testnet.binancefuture.com/dapi/';\n  var fstream = 'wss://fstream.binance.com/stream?streams=';\n  var fstreamSingle = 'wss://fstream.binance.com/ws/';\n  var fstreamSingleTest = 'wss://stream.binancefuture.com/ws/';\n  var fstreamTest = 'wss://stream.binancefuture.com/stream?streams=';\n  var dstream = 'wss://dstream.binance.com/stream?streams=';\n  var dstreamSingle = 'wss://dstream.binance.com/ws/';\n  var dstreamSingleTest = 'wss://dstream.binancefuture.com/ws/';\n  var dstreamTest = 'wss://dstream.binancefuture.com/stream?streams=';\n  var stream = 'wss://stream.binance.com:9443/ws/';\n  var combineStream = 'wss://stream.binance.com:9443/stream?streams=';\n  var userAgent = 'Mozilla/4.0 (compatible; Node Binance API)';\n  var contentType = 'application/x-www-form-urlencoded';\n  Binance.subscriptions = {};\n  Binance.futuresSubscriptions = {};\n  Binance.futuresInfo = {};\n  Binance.futuresMeta = {};\n  Binance.futuresTicks = {};\n  Binance.futuresRealtime = {};\n  Binance.futuresKlineQueue = {};\n  Binance.deliverySubscriptions = {};\n  Binance.deliveryInfo = {};\n  Binance.deliveryMeta = {};\n  Binance.deliveryTicks = {};\n  Binance.deliveryRealtime = {};\n  Binance.deliveryKlineQueue = {};\n  Binance.depthCache = {};\n  Binance.depthCacheContext = {};\n  Binance.ohlcLatest = {};\n  Binance.klineQueue = {};\n  Binance.ohlc = {};\n  var default_options = {\n    recvWindow: 5000,\n    useServerTime: false,\n    reconnect: true,\n    keepAlive: true,\n    verbose: false,\n    test: false,\n    hedgeMode: false,\n    localAddress: false,\n    family: false,\n    log: function log() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      console.log(Array.prototype.slice.call(args));\n    }\n  };\n  Binance.options = default_options;\n  Binance.info = {\n    usedWeight: 0,\n    futuresLatency: false,\n    lastRequest: false,\n    lastURL: false,\n    statusCode: 0,\n    orderCount1s: 0,\n    orderCount1m: 0,\n    orderCount1h: 0,\n    orderCount1d: 0,\n    timeOffset: 0\n  };\n  Binance.socketHeartbeatInterval = null;\n  if (options) setOptions(options);\n\n  function setOptions() {\n    var opt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (typeof opt === 'string') {\n      // Pass json config filename\n      Binance.options = JSON.parse(file.readFileSync(opt));\n    } else Binance.options = opt;\n\n    if (typeof Binance.options.recvWindow === 'undefined') Binance.options.recvWindow = default_options.recvWindow;\n    if (typeof Binance.options.useServerTime === 'undefined') Binance.options.useServerTime = default_options.useServerTime;\n    if (typeof Binance.options.reconnect === 'undefined') Binance.options.reconnect = default_options.reconnect;\n    if (typeof Binance.options.test === 'undefined') Binance.options.test = default_options.test;\n    if (typeof Binance.options.hedgeMode === 'undefined') Binance.options.hedgeMode = default_options.hedgeMode;\n    if (typeof Binance.options.log === 'undefined') Binance.options.log = default_options.log;\n    if (typeof Binance.options.verbose === 'undefined') Binance.options.verbose = default_options.verbose;\n    if (typeof Binance.options.keepAlive === 'undefined') Binance.options.keepAlive = default_options.keepAlive;\n    if (typeof Binance.options.localAddress === 'undefined') Binance.options.localAddress = default_options.localAddress;\n    if (typeof Binance.options.family === 'undefined') Binance.options.family = default_options.family;\n\n    if (typeof Binance.options.urls !== 'undefined') {\n      var urls = Binance.options.urls;\n      if (typeof urls.base === 'string') base = urls.base;\n      if (typeof urls.wapi === 'string') wapi = urls.wapi;\n      if (typeof urls.sapi === 'string') sapi = urls.sapi;\n      if (typeof urls.fapi === 'string') fapi = urls.fapi;\n      if (typeof urls.fapiTest === 'string') fapiTest = urls.fapiTest;\n      if (typeof urls.stream === 'string') stream = urls.stream;\n      if (typeof urls.combineStream === 'string') combineStream = urls.combineStream;\n      if (typeof urls.fstream === 'string') fstream = urls.fstream;\n      if (typeof urls.fstreamSingle === 'string') fstreamSingle = urls.fstreamSingle;\n      if (typeof urls.fstreamTest === 'string') fstreamTest = urls.fstreamTest;\n      if (typeof urls.fstreamSingleTest === 'string') fstreamSingleTest = urls.fstreamSingleTest;\n      if (typeof urls.dstream === 'string') dstream = urls.dstream;\n      if (typeof urls.dstreamSingle === 'string') dstreamSingle = urls.dstreamSingle;\n      if (typeof urls.dstreamTest === 'string') dstreamTest = urls.dstreamTest;\n      if (typeof urls.dstreamSingleTest === 'string') dstreamSingleTest = urls.dstreamSingleTest;\n    }\n\n    if (Binance.options.useServerTime) {\n      _publicRequest(base + 'v3/time', {}, function (error, response) {\n        Binance.info.timeOffset = response.serverTime - new Date().getTime(); //Binance.options.log(\"server time set: \", response.serverTime, Binance.info.timeOffset);\n\n        if (callback) callback();\n      });\n    } else if (callback) callback();\n\n    return this;\n  }\n  /**\r\n   * Replaces socks connection uri hostname with IP address\r\n   * @param {string} connString - socks connection string\r\n   * @return {string} modified string with ip address\r\n   */\n\n\n  var proxyReplacewithIp = function proxyReplacewithIp(connString) {\n    return connString;\n  };\n  /**\r\n   * Returns an array in the form of [host, port]\r\n   * @param {string} connString - connection string\r\n   * @return {array} array of host and port\r\n   */\n\n\n  var parseProxy = function parseProxy(connString) {\n    var arr = connString.split('/');\n    var host = arr[2].split(':')[0];\n    var port = arr[2].split(':')[1];\n    return [arr[0], host, port];\n  };\n  /**\r\n   * Checks to see of the object is iterable\r\n   * @param {object} obj - The object check\r\n   * @return {boolean} true or false is iterable\r\n   */\n\n\n  var isIterable = function isIterable(obj) {\n    if (obj === null) return false;\n    return typeof obj[Symbol.iterator] === 'function';\n  };\n\n  var addProxy = function addProxy(opt) {\n    if (Binance.options.proxy) {\n      var proxyauth = Binance.options.proxy.auth ? \"\".concat(Binance.options.proxy.auth.username, \":\").concat(Binance.options.proxy.auth.password, \"@\") : '';\n      opt.proxy = \"http://\".concat(proxyauth).concat(Binance.options.proxy.host, \":\").concat(Binance.options.proxy.port);\n    }\n\n    return opt;\n  };\n\n  var reqHandler = function reqHandler(cb) {\n    return function (error, response, body) {\n      Binance.info.lastRequest = new Date().getTime();\n\n      if (response) {\n        Binance.info.statusCode = response.statusCode || 0;\n        if (response.request) Binance.info.lastURL = response.request.uri.href;\n\n        if (response.headers) {\n          Binance.info.usedWeight = response.headers['x-mbx-used-weight-1m'] || 0;\n          Binance.info.orderCount1s = response.headers['x-mbx-order-count-1s'] || 0;\n          Binance.info.orderCount1m = response.headers['x-mbx-order-count-1m'] || 0;\n          Binance.info.orderCount1h = response.headers['x-mbx-order-count-1h'] || 0;\n          Binance.info.orderCount1d = response.headers['x-mbx-order-count-1d'] || 0;\n        }\n      }\n\n      if (!cb) return;\n      if (error) return cb(error, {});\n      if (response && response.statusCode !== 200) return cb(response, {});\n      return cb(null, JSONbig.parse(body));\n    };\n  };\n\n  var proxyRequest = function proxyRequest(opt, cb) {\n    var req = request(addProxy(opt), reqHandler(cb)).on('error', function (err) {\n      cb(err, {});\n    });\n    return req;\n  };\n\n  var reqObj = function reqObj(url) {\n    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var method = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'GET';\n    var key = arguments.length > 3 ? arguments[3] : undefined;\n    return {\n      url: url,\n      qs: data,\n      method: method,\n      family: Binance.options.family,\n      localAddress: Binance.options.localAddress,\n      timeout: Binance.options.recvWindow,\n      forever: Binance.options.keepAlive,\n      headers: {\n        'User-Agent': userAgent,\n        'Content-type': contentType,\n        'X-MBX-APIKEY': key || ''\n      }\n    };\n  };\n\n  var reqObjPOST = function reqObjPOST(url) {\n    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var method = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'POST';\n    var key = arguments.length > 3 ? arguments[3] : undefined;\n    return {\n      url: url,\n      form: data,\n      method: method,\n      family: Binance.options.family,\n      localAddress: Binance.options.localAddress,\n      timeout: Binance.options.recvWindow,\n      forever: Binance.options.keepAlive,\n      qsStringifyOptions: {\n        arrayFormat: 'repeat'\n      },\n      headers: {\n        'User-Agent': userAgent,\n        'Content-type': contentType,\n        'X-MBX-APIKEY': key || ''\n      }\n    };\n  };\n  /**\r\n   * Create a http request to the public API\r\n   * @param {string} url - The http endpoint\r\n   * @param {object} data - The data to send\r\n   * @param {function} callback - The callback method to call\r\n   * @param {string} method - the http method\r\n   * @return {undefined}\r\n   */\n\n\n  var _publicRequest = function publicRequest(url) {\n    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var callback = arguments.length > 2 ? arguments[2] : undefined;\n    var method = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'GET';\n    var opt = reqObj(url, data, method);\n    proxyRequest(opt, callback);\n  }; // XXX: This one works with array (e.g. for dust.transfer)\n  // XXX: I _guess_ we could use replace this function with the `qs` module\n\n\n  var makeQueryString = function makeQueryString(q) {\n    return Object.keys(q).reduce(function (a, k) {\n      if (Array.isArray(q[k])) {\n        q[k].forEach(function (v) {\n          a.push(k + \"=\" + encodeURIComponent(v));\n        });\n      } else if (q[k] !== undefined) {\n        a.push(k + \"=\" + encodeURIComponent(q[k]));\n      }\n\n      return a;\n    }, []).join(\"&\");\n  };\n  /**\r\n   * Create a http request to the public API\r\n   * @param {string} url - The http endpoint\r\n   * @param {object} data - The data to send\r\n   * @param {function} callback - The callback method to call\r\n   * @param {string} method - the http method\r\n   * @return {undefined}\r\n   */\n\n\n  var apiRequest = function apiRequest(url) {\n    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var callback = arguments.length > 2 ? arguments[2] : undefined;\n    var method = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'GET';\n    requireApiKey('apiRequest');\n    var opt = reqObj(url, data, method, Binance.options.APIKEY);\n    proxyRequest(opt, callback);\n  }; // Check if API key is empty or invalid\n\n\n  var requireApiKey = function requireApiKey() {\n    var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'requireApiKey';\n    var fatalError = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (!Binance.options.APIKEY) {\n      if (fatalError) throw Error(\"\".concat(source, \": Invalid API Key!\"));\n      return false;\n    }\n\n    return true;\n  }; // Check if API secret is present\n\n\n  var requireApiSecret = function requireApiSecret() {\n    var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'requireApiSecret';\n    var fatalError = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (!Binance.options.APIKEY) {\n      if (fatalError) throw Error(\"\".concat(source, \": Invalid API Key!\"));\n      return false;\n    }\n\n    if (!Binance.options.APISECRET) {\n      if (fatalError) throw Error(\"\".concat(source, \": Invalid API Secret!\"));\n      return false;\n    }\n\n    return true;\n  };\n  /**\r\n   * Make market request\r\n   * @param {string} url - The http endpoint\r\n   * @param {object} data - The data to send\r\n   * @param {function} callback - The callback method to call\r\n   * @param {string} method - the http method\r\n   * @return {undefined}\r\n   */\n\n\n  var marketRequest = function marketRequest(url) {\n    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var callback = arguments.length > 2 ? arguments[2] : undefined;\n    var method = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'GET';\n    requireApiKey('marketRequest');\n    var query = makeQueryString(data);\n    var opt = reqObj(url + (query ? '?' + query : ''), data, method, Binance.options.APIKEY);\n    proxyRequest(opt, callback);\n  };\n  /**\r\n   * Create a signed http request\r\n   * @param {string} url - The http endpoint\r\n   * @param {object} data - The data to send\r\n   * @param {function} callback - The callback method to call\r\n   * @param {string} method - the http method\r\n   * @param {boolean} noDataInSignature - Prevents data from being added to signature\r\n   * @return {undefined}\r\n   */\n\n\n  var _signedRequest = function signedRequest(url) {\n    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var callback = arguments.length > 2 ? arguments[2] : undefined;\n    var method = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'GET';\n    var noDataInSignature = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    requireApiSecret('signedRequest');\n    data.timestamp = new Date().getTime() + Binance.info.timeOffset;\n    if (typeof data.recvWindow === 'undefined') data.recvWindow = Binance.options.recvWindow;\n    var query = method === 'POST' && noDataInSignature ? '' : makeQueryString(data);\n    var signature = crypto.createHmac('sha256', Binance.options.APISECRET).update(query).digest('hex'); // set the HMAC hash header\n\n    if (method === 'POST') {\n      var opt = reqObjPOST(url, data, method, Binance.options.APIKEY);\n      opt.form.signature = signature;\n      proxyRequest(opt, callback);\n    } else {\n      var _opt = reqObj(url + '?' + query + '&signature=' + signature, data, method, Binance.options.APIKEY);\n\n      proxyRequest(_opt, callback);\n    }\n  };\n  /**\r\n   * Create a signed spot order\r\n   * @param {string} side - BUY or SELL\r\n   * @param {string} symbol - The symbol to buy or sell\r\n   * @param {string} quantity - The quantity to buy or sell\r\n   * @param {string} price - The price per unit to transact each unit at\r\n   * @param {object} flags - additional order settings\r\n   * @param {function} callback - the callback function\r\n   * @return {undefined}\r\n   */\n\n\n  var _order = function order(side, symbol, quantity, price) {\n    var flags = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    var callback = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    var endpoint = flags.type === 'OCO' ? 'v3/order/oco' : 'v3/order';\n    if (Binance.options.test) endpoint += '/test';\n    var opt = {\n      symbol: symbol,\n      side: side,\n      type: 'LIMIT',\n      quantity: quantity\n    };\n    if (typeof flags.type !== 'undefined') opt.type = flags.type;\n\n    if (opt.type.includes('LIMIT')) {\n      opt.price = price;\n\n      if (opt.type !== 'LIMIT_MAKER') {\n        opt.timeInForce = 'GTC';\n      }\n    }\n\n    if (opt.type === 'OCO') {\n      opt.price = price;\n      opt.stopLimitPrice = flags.stopLimitPrice;\n      opt.stopLimitTimeInForce = 'GTC';\n      delete opt.type;\n      if (typeof flags.listClientOrderId !== 'undefined') opt.listClientOrderId = flags.listClientOrderId;\n      if (typeof flags.limitClientOrderId !== 'undefined') opt.limitClientOrderId = flags.limitClientOrderId;\n      if (typeof flags.stopClientOrderId !== 'undefined') opt.stopClientOrderId = flags.stopClientOrderId;\n    }\n\n    if (typeof flags.timeInForce !== 'undefined') opt.timeInForce = flags.timeInForce;\n    if (typeof flags.newOrderRespType !== 'undefined') opt.newOrderRespType = flags.newOrderRespType;\n    if (typeof flags.newClientOrderId !== 'undefined') opt.newClientOrderId = flags.newClientOrderId;\n    /*\r\n     * STOP_LOSS\r\n     * STOP_LOSS_LIMIT\r\n     * TAKE_PROFIT\r\n     * TAKE_PROFIT_LIMIT\r\n     * LIMIT_MAKER\r\n     */\n\n    if (typeof flags.icebergQty !== 'undefined') opt.icebergQty = flags.icebergQty;\n\n    if (typeof flags.stopPrice !== 'undefined') {\n      opt.stopPrice = flags.stopPrice;\n      if (opt.type === 'LIMIT') throw Error('stopPrice: Must set \"type\" to one of the following: STOP_LOSS, STOP_LOSS_LIMIT, TAKE_PROFIT, TAKE_PROFIT_LIMIT');\n    }\n\n    _signedRequest(base + endpoint, opt, function (error, response) {\n      if (!response) {\n        if (callback) callback(error, response);else Binance.options.log('Order() error:', error);\n        return;\n      }\n\n      if (typeof response.msg !== 'undefined' && response.msg === 'Filter failure: MIN_NOTIONAL') {\n        Binance.options.log('Order quantity too small. See exchangeInfo() for minimum amounts');\n      }\n\n      if (callback) callback(error, response);else Binance.options.log(side + '(' + symbol + ',' + quantity + ',' + price + ') ', response);\n    }, 'POST');\n  };\n  /**\r\n   * Create a signed margin order\r\n   * @param {string} side - BUY or SELL\r\n   * @param {string} symbol - The symbol to buy or sell\r\n   * @param {string} quantity - The quantity to buy or sell\r\n   * @param {string} price - The price per unit to transact each unit at\r\n   * @param {object} flags - additional order settings\r\n   * @param {function} callback - the callback function\r\n   * @return {undefined}\r\n   */\n\n\n  var marginOrder = function marginOrder(side, symbol, quantity, price) {\n    var flags = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    var callback = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    var endpoint = 'v1/margin/order';\n    if (Binance.options.test) endpoint += '/test';\n    var opt = {\n      symbol: symbol,\n      side: side,\n      type: 'LIMIT',\n      quantity: quantity\n    };\n    if (typeof flags.type !== 'undefined') opt.type = flags.type;\n    if (typeof flags.isIsolated !== 'undefined') opt.isIsolated = flags.isIsolated;\n\n    if (opt.type.includes('LIMIT')) {\n      opt.price = price;\n\n      if (opt.type !== 'LIMIT_MAKER') {\n        opt.timeInForce = 'GTC';\n      }\n    }\n\n    if (typeof flags.timeInForce !== 'undefined') opt.timeInForce = flags.timeInForce;\n    if (typeof flags.newOrderRespType !== 'undefined') opt.newOrderRespType = flags.newOrderRespType;\n    if (typeof flags.newClientOrderId !== 'undefined') opt.newClientOrderId = flags.newClientOrderId;\n    if (typeof flags.sideEffectType !== 'undefined') opt.sideEffectType = flags.sideEffectType;\n    /*\r\n     * STOP_LOSS\r\n     * STOP_LOSS_LIMIT\r\n     * TAKE_PROFIT\r\n     * TAKE_PROFIT_LIMIT\r\n     */\n\n    if (typeof flags.icebergQty !== 'undefined') opt.icebergQty = flags.icebergQty;\n\n    if (typeof flags.stopPrice !== 'undefined') {\n      opt.stopPrice = flags.stopPrice;\n      if (opt.type === 'LIMIT') throw Error('stopPrice: Must set \"type\" to one of the following: STOP_LOSS, STOP_LOSS_LIMIT, TAKE_PROFIT, TAKE_PROFIT_LIMIT');\n    }\n\n    _signedRequest(sapi + endpoint, opt, function (error, response) {\n      if (!response) {\n        if (callback) callback(error, response);else Binance.options.log('Order() error:', error);\n        return;\n      }\n\n      if (typeof response.msg !== 'undefined' && response.msg === 'Filter failure: MIN_NOTIONAL') {\n        Binance.options.log('Order quantity too small. See exchangeInfo() for minimum amounts');\n      }\n\n      if (callback) callback(error, response);else Binance.options.log(side + '(' + symbol + ',' + quantity + ',' + price + ') ', response);\n    }, 'POST');\n  }; // Futures internal functions\n\n\n  var futuresOrder = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(side, symbol, quantity) {\n      var price,\n          params,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              price = _args.length > 3 && _args[3] !== undefined ? _args[3] : false;\n              params = _args.length > 4 && _args[4] !== undefined ? _args[4] : {};\n              params.symbol = symbol;\n              params.side = side;\n              if (quantity) params.quantity = quantity; // if in the binance futures setting Hedged mode is active, positionSide parameter is mandatory\n\n              if (typeof params.positionSide === 'undefined' && Binance.options.hedgeMode) {\n                params.positionSide = side === 'BUY' ? 'LONG' : 'SHORT';\n              } // LIMIT STOP MARKET STOP_MARKET TAKE_PROFIT TAKE_PROFIT_MARKET\n              // reduceOnly stopPrice\n\n\n              if (price) {\n                params.price = price;\n                if (typeof params.type === 'undefined') params.type = 'LIMIT';\n              } else {\n                if (typeof params.type === 'undefined') params.type = 'MARKET';\n              }\n\n              if (!params.timeInForce && (params.type.includes('LIMIT') || params.type === 'STOP' || params.type === 'TAKE_PROFIT')) {\n                params.timeInForce = 'GTX'; // Post only by default. Use GTC for limit orders.\n              }\n\n              return _context.abrupt(\"return\", _promiseRequest('v1/order', params, {\n                base: fapi,\n                type: 'TRADE',\n                method: 'POST'\n              }));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function futuresOrder(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var deliveryOrder = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(side, symbol, quantity) {\n      var price,\n          params,\n          _args2 = arguments;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              price = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : false;\n              params = _args2.length > 4 && _args2[4] !== undefined ? _args2[4] : {};\n              params.symbol = symbol;\n              params.side = side;\n              params.quantity = quantity; // if in the binance futures setting Hedged mode is active, positionSide parameter is mandatory\n\n              if (Binance.options.hedgeMode) {\n                params.positionSide = side === 'BUY' ? 'LONG' : 'SHORT';\n              } // LIMIT STOP MARKET STOP_MARKET TAKE_PROFIT TAKE_PROFIT_MARKET\n              // reduceOnly stopPrice\n\n\n              if (price) {\n                params.price = price;\n                if (typeof params.type === 'undefined') params.type = 'LIMIT';\n              } else {\n                if (typeof params.type === 'undefined') params.type = 'MARKET';\n              }\n\n              if (!params.timeInForce && (params.type.includes('LIMIT') || params.type === 'STOP' || params.type === 'TAKE_PROFIT')) {\n                params.timeInForce = 'GTX'; // Post only by default. Use GTC for limit orders.\n              }\n\n              return _context2.abrupt(\"return\", _promiseRequest('v1/order', params, {\n                base: dapi,\n                type: 'TRADE',\n                method: 'POST'\n              }));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function deliveryOrder(_x4, _x5, _x6) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _promiseRequest = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(url) {\n      var data,\n          flags,\n          _args3 = arguments;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              data = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n              flags = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : {};\n              return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n                var query = '',\n                    headers = {\n                  'User-Agent': userAgent,\n                  'Content-type': 'application/x-www-form-urlencoded'\n                };\n                if (typeof flags.method === 'undefined') flags.method = 'GET'; // GET POST PUT DELETE\n\n                // GET POST PUT DELETE\n                if (typeof flags.type === 'undefined') flags.type = false; // TRADE, SIGNED, MARKET_DATA, USER_DATA, USER_STREAM\n                else // TRADE, SIGNED, MARKET_DATA, USER_DATA, USER_STREAM\n                  {\n                    if (typeof data.recvWindow === 'undefined') data.recvWindow = Binance.options.recvWindow;\n                    requireApiKey('promiseRequest');\n                    headers['X-MBX-APIKEY'] = Binance.options.APIKEY;\n                  }\n                var baseURL = typeof flags.base === 'undefined' ? base : flags.base;\n                if (Binance.options.test && baseURL === fapi) baseURL = fapiTest;\n                if (Binance.options.test && baseURL === dapi) baseURL = dapiTest;\n                var opt = {\n                  headers: headers,\n                  url: baseURL + url,\n                  method: flags.method,\n                  timeout: Binance.options.recvWindow,\n                  followAllRedirects: true\n                };\n\n                if (flags.type === 'SIGNED' || flags.type === 'TRADE' || flags.type === 'USER_DATA') {\n                  if (!requireApiSecret('promiseRequest')) return reject('promiseRequest: Invalid API Secret!');\n                  data.timestamp = new Date().getTime() + Binance.info.timeOffset;\n                  query = makeQueryString(data);\n                  data.signature = crypto.createHmac('sha256', Binance.options.APISECRET).update(query).digest('hex'); // HMAC hash header\n\n                  // HMAC hash header\n                  opt.url = \"\".concat(baseURL).concat(url, \"?\").concat(query, \"&signature=\").concat(data.signature);\n                }\n\n                opt.qs = data;\n                /*if ( flags.method === 'POST' ) {\r\n                    opt.form = data;\r\n                } else {\r\n                    opt.qs = data;\r\n                }*/\n\n                /*if ( flags.method === 'POST' ) {\r\n                    opt.form = data;\r\n                } else {\r\n                    opt.qs = data;\r\n                }*/\n                try {\n                  request(addProxy(opt), function (error, response, body) {\n                    if (error) return reject(error);\n\n                    try {\n                      Binance.info.lastRequest = new Date().getTime();\n\n                      if (response) {\n                        Binance.info.statusCode = response.statusCode || 0;\n                        if (response.request) Binance.info.lastURL = response.request.uri.href;\n\n                        if (response.headers) {\n                          Binance.info.usedWeight = response.headers['x-mbx-used-weight-1m'] || 0;\n                          Binance.info.futuresLatency = response.headers['x-response-time'] || 0;\n                        }\n                      }\n\n                      if (!error && response.statusCode == 200) return resolve(JSONbig.parse(body));\n\n                      if (typeof response.body !== 'undefined') {\n                        return resolve(JSONbig.parse(response.body));\n                      }\n\n                      return reject(response);\n                    } catch (err) {\n                      return reject(\"promiseRequest error #\".concat(response.statusCode));\n                    }\n                  }).on('error', reject);\n                } catch (err) {\n                  return reject(err);\n                }\n              }));\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function promiseRequest(_x7) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  /**\r\n   * No-operation function\r\n   * @return {undefined}\r\n   */\n\n\n  var noop = function noop() {}; // Do nothing.\n\n  /**\r\n   * Reworked Tuitio's heartbeat code into a shared single interval tick\r\n   * @return {undefined}\r\n   */\n\n\n  var socketHeartbeat = function socketHeartbeat() {\n    /* Sockets removed from `subscriptions` during a manual terminate()\r\n     will no longer be at risk of having functions called on them */\n    for (var endpointId in Binance.subscriptions) {\n      var ws = Binance.subscriptions[endpointId];\n\n      if (ws.isAlive) {\n        ws.isAlive = false;\n        if (ws.readyState === WebSocket.OPEN) ws.ping(noop);\n      } else {\n        if (Binance.options.verbose) Binance.options.log('Terminating inactive/broken WebSocket: ' + ws.endpoint);\n        if (ws.readyState === WebSocket.OPEN) ws.terminate();\n      }\n    }\n  };\n  /**\r\n   * Called when socket is opened, subscriptions are registered for later reference\r\n   * @param {function} opened_callback - a callback function\r\n   * @return {undefined}\r\n   */\n\n\n  var handleSocketOpen = function handleSocketOpen(opened_callback) {\n    this.isAlive = true;\n\n    if (Object.keys(Binance.subscriptions).length === 0) {\n      Binance.socketHeartbeatInterval = setInterval(socketHeartbeat, 30000);\n    }\n\n    Binance.subscriptions[this.endpoint] = this;\n    if (typeof opened_callback === 'function') opened_callback(this.endpoint);\n  };\n  /**\r\n   * Called when socket is closed, subscriptions are de-registered for later reference\r\n   * @param {boolean} reconnect - true or false to reconnect the socket\r\n   * @param {string} code - code associated with the socket\r\n   * @param {string} reason - string with the response\r\n   * @return {undefined}\r\n   */\n\n\n  var handleSocketClose = function handleSocketClose(reconnect, code, reason) {\n    delete Binance.subscriptions[this.endpoint];\n\n    if (Binance.subscriptions && Object.keys(Binance.subscriptions).length === 0) {\n      clearInterval(Binance.socketHeartbeatInterval);\n    }\n\n    Binance.options.log('WebSocket closed: ' + this.endpoint + (code ? ' (' + code + ')' : '') + (reason ? ' ' + reason : ''));\n\n    if (Binance.options.reconnect && this.reconnect && reconnect) {\n      if (this.endpoint && parseInt(this.endpoint.length, 10) === 60) Binance.options.log('Account data WebSocket reconnecting...');else Binance.options.log('WebSocket reconnecting: ' + this.endpoint + '...');\n\n      try {\n        reconnect();\n      } catch (error) {\n        Binance.options.log('WebSocket reconnect error: ' + error.message);\n      }\n    }\n  };\n  /**\r\n   * Called when socket errors\r\n   * @param {object} error - error object message\r\n   * @return {undefined}\r\n   */\n\n\n  var handleSocketError = function handleSocketError(error) {\n    /* Errors ultimately result in a `close` event.\r\n     see: https://github.com/websockets/ws/blob/828194044bf247af852b31c49e2800d557fedeff/lib/websocket.js#L126 */\n    Binance.options.log('WebSocket error: ' + this.endpoint + (error.code ? ' (' + error.code + ')' : '') + (error.message ? ' ' + error.message : ''));\n  };\n  /**\r\n   * Called on each socket heartbeat\r\n   * @return {undefined}\r\n   */\n\n\n  var handleSocketHeartbeat = function handleSocketHeartbeat() {\n    this.isAlive = true;\n  };\n  /**\r\n   * Used to subscribe to a single websocket endpoint\r\n   * @param {string} endpoint - endpoint to connect to\r\n   * @param {function} callback - the function to call when information is received\r\n   * @param {boolean} reconnect - whether to reconnect on disconnect\r\n   * @param {object} opened_callback - the function to call when opened\r\n   * @return {WebSocket} - websocket reference\r\n   */\n\n\n  var _subscribe = function subscribe(endpoint, callback) {\n    var reconnect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var opened_callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    var httpsproxy = process.env.https_proxy || false;\n    var socksproxy = process.env.socks_proxy || false;\n    var ws = false;\n\n    if (socksproxy !== false) {\n      socksproxy = proxyReplacewithIp(socksproxy);\n      if (Binance.options.verbose) Binance.options.log('using socks proxy server ' + socksproxy);\n      var agent = new SocksProxyAgent({\n        protocol: parseProxy(socksproxy)[0],\n        host: parseProxy(socksproxy)[1],\n        port: parseProxy(socksproxy)[2]\n      });\n      ws = new WebSocket(stream + endpoint, {\n        agent: agent\n      });\n    } else if (httpsproxy !== false) {\n      var config = url.parse(httpsproxy);\n\n      var _agent = new HttpsProxyAgent(config);\n\n      if (Binance.options.verbose) Binance.options.log('using proxy server ' + _agent);\n      ws = new WebSocket(stream + endpoint, {\n        agent: _agent\n      });\n    } else {\n      ws = new WebSocket(stream + endpoint);\n    }\n\n    if (Binance.options.verbose) Binance.options.log('Subscribed to ' + endpoint);\n    ws.reconnect = Binance.options.reconnect;\n    ws.endpoint = endpoint;\n    ws.isAlive = false;\n    ws.on('open', handleSocketOpen.bind(ws, opened_callback));\n    ws.on('pong', handleSocketHeartbeat);\n    ws.on('error', handleSocketError);\n    ws.on('close', handleSocketClose.bind(ws, reconnect));\n    ws.on('message', function (data) {\n      try {\n        callback(JSON.parse(data));\n      } catch (error) {\n        Binance.options.log('Parse error: ' + error.message);\n      }\n    });\n    return ws;\n  };\n  /**\r\n   * Used to subscribe to a combined websocket endpoint\r\n   * @param {string} streams - streams to connect to\r\n   * @param {function} callback - the function to call when information is received\r\n   * @param {boolean} reconnect - whether to reconnect on disconnect\r\n   * @param {object} opened_callback - the function to call when opened\r\n   * @return {WebSocket} - websocket reference\r\n   */\n\n\n  var _subscribeCombined = function subscribeCombined(streams, callback) {\n    var reconnect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var opened_callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    var httpsproxy = process.env.https_proxy || false;\n    var socksproxy = process.env.socks_proxy || false;\n    var queryParams = streams.join('/');\n    var ws = false;\n\n    if (socksproxy !== false) {\n      socksproxy = proxyReplacewithIp(socksproxy);\n      if (Binance.options.verbose) Binance.options.log('using socks proxy server ' + socksproxy);\n      var agent = new SocksProxyAgent({\n        protocol: parseProxy(socksproxy)[0],\n        host: parseProxy(socksproxy)[1],\n        port: parseProxy(socksproxy)[2]\n      });\n      ws = new WebSocket(combineStream + queryParams, {\n        agent: agent\n      });\n    } else if (httpsproxy !== false) {\n      if (Binance.options.verbose) Binance.options.log('using proxy server ' + httpsproxy);\n      var config = url.parse(httpsproxy);\n\n      var _agent2 = new HttpsProxyAgent(config);\n\n      ws = new WebSocket(combineStream + queryParams, {\n        agent: _agent2\n      });\n    } else {\n      ws = new WebSocket(combineStream + queryParams);\n    }\n\n    ws.reconnect = Binance.options.reconnect;\n    ws.endpoint = stringHash(queryParams);\n    ws.isAlive = false;\n\n    if (Binance.options.verbose) {\n      Binance.options.log('CombinedStream: Subscribed to [' + ws.endpoint + '] ' + queryParams);\n    }\n\n    ws.on('open', handleSocketOpen.bind(ws, opened_callback));\n    ws.on('pong', handleSocketHeartbeat);\n    ws.on('error', handleSocketError);\n    ws.on('close', handleSocketClose.bind(ws, reconnect));\n    ws.on('message', function (data) {\n      try {\n        callback(JSON.parse(data).data);\n      } catch (error) {\n        Binance.options.log('CombinedStream: Parse error: ' + error.message);\n      }\n    });\n    return ws;\n  };\n  /**\r\n   * Used to terminate a web socket\r\n   * @param {string} endpoint - endpoint identifier associated with the web socket\r\n   * @param {boolean} reconnect - auto reconnect after termination\r\n   * @return {undefined}\r\n   */\n\n\n  var _terminate = function terminate(endpoint) {\n    var reconnect = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var ws = Binance.subscriptions[endpoint];\n    if (!ws) return;\n    ws.removeAllListeners('message');\n    ws.reconnect = reconnect;\n    ws.terminate();\n  };\n  /**\r\n   * Futures heartbeat code with a shared single interval tick\r\n   * @return {undefined}\r\n   */\n\n\n  var futuresSocketHeartbeat = function futuresSocketHeartbeat() {\n    /* Sockets removed from subscriptions during a manual terminate()\r\n     will no longer be at risk of having functions called on them */\n    for (var endpointId in Binance.futuresSubscriptions) {\n      var ws = Binance.futuresSubscriptions[endpointId];\n\n      if (ws.isAlive) {\n        ws.isAlive = false;\n        if (ws.readyState === WebSocket.OPEN) ws.ping(noop);\n      } else {\n        if (Binance.options.verbose) Binance.options.log(\"Terminating zombie futures WebSocket: \".concat(ws.endpoint));\n        if (ws.readyState === WebSocket.OPEN) ws.terminate();\n      }\n    }\n  };\n  /**\r\n   * Called when a futures socket is opened, subscriptions are registered for later reference\r\n   * @param {function} openCallback - a callback function\r\n   * @return {undefined}\r\n   */\n\n\n  var handleFuturesSocketOpen = function handleFuturesSocketOpen(openCallback) {\n    this.isAlive = true;\n\n    if (Object.keys(Binance.futuresSubscriptions).length === 0) {\n      Binance.socketHeartbeatInterval = setInterval(futuresSocketHeartbeat, 30000);\n    }\n\n    Binance.futuresSubscriptions[this.endpoint] = this;\n    if (typeof openCallback === 'function') openCallback(this.endpoint);\n  };\n  /**\r\n   * Called when futures websocket is closed, subscriptions are de-registered for later reference\r\n   * @param {boolean} reconnect - true or false to reconnect the socket\r\n   * @param {string} code - code associated with the socket\r\n   * @param {string} reason - string with the response\r\n   * @return {undefined}\r\n   */\n\n\n  var handleFuturesSocketClose = function handleFuturesSocketClose(reconnect, code, reason) {\n    delete Binance.futuresSubscriptions[this.endpoint];\n\n    if (Binance.futuresSubscriptions && Object.keys(Binance.futuresSubscriptions).length === 0) {\n      clearInterval(Binance.socketHeartbeatInterval);\n    }\n\n    Binance.options.log('Futures WebSocket closed: ' + this.endpoint + (code ? ' (' + code + ')' : '') + (reason ? ' ' + reason : ''));\n\n    if (Binance.options.reconnect && this.reconnect && reconnect) {\n      if (this.endpoint && parseInt(this.endpoint.length, 10) === 60) Binance.options.log('Futures account data WebSocket reconnecting...');else Binance.options.log('Futures WebSocket reconnecting: ' + this.endpoint + '...');\n\n      try {\n        reconnect();\n      } catch (error) {\n        Binance.options.log('Futures WebSocket reconnect error: ' + error.message);\n      }\n    }\n  };\n  /**\r\n   * Called when a futures websocket errors\r\n   * @param {object} error - error object message\r\n   * @return {undefined}\r\n   */\n\n\n  var handleFuturesSocketError = function handleFuturesSocketError(error) {\n    Binance.options.log('Futures WebSocket error: ' + this.endpoint + (error.code ? ' (' + error.code + ')' : '') + (error.message ? ' ' + error.message : ''));\n  };\n  /**\r\n   * Called on each futures socket heartbeat\r\n   * @return {undefined}\r\n   */\n\n\n  var handleFuturesSocketHeartbeat = function handleFuturesSocketHeartbeat() {\n    this.isAlive = true;\n  };\n  /**\r\n   * Used to subscribe to a single futures websocket endpoint\r\n   * @param {string} endpoint - endpoint to connect to\r\n   * @param {function} callback - the function to call when information is received\r\n   * @param {object} params - Optional reconnect {boolean} (whether to reconnect on disconnect), openCallback {function}, id {string}\r\n   * @return {WebSocket} - websocket reference\r\n   */\n\n\n  var _futuresSubscribeSingle = function futuresSubscribeSingle(endpoint, callback) {\n    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (typeof params === 'boolean') params = {\n      reconnect: params\n    };\n    if (!params.reconnect) params.reconnect = false;\n    if (!params.openCallback) params.openCallback = false;\n    if (!params.id) params.id = false;\n    var httpsproxy = process.env.https_proxy || false;\n    var socksproxy = process.env.socks_proxy || false;\n    var ws = false;\n\n    if (socksproxy !== false) {\n      socksproxy = proxyReplacewithIp(socksproxy);\n      if (Binance.options.verbose) Binance.options.log(\"futuresSubscribeSingle: using socks proxy server: \".concat(socksproxy));\n      var agent = new SocksProxyAgent({\n        protocol: parseProxy(socksproxy)[0],\n        host: parseProxy(socksproxy)[1],\n        port: parseProxy(socksproxy)[2]\n      });\n      ws = new WebSocket((Binance.options.test ? fstreamSingleTest : fstreamSingle) + endpoint, {\n        agent: agent\n      });\n    } else if (httpsproxy !== false) {\n      if (Binance.options.verbose) Binance.options.log(\"futuresSubscribeSingle: using proxy server: \".concat(_agent3));\n      var config = url.parse(httpsproxy);\n\n      var _agent3 = new HttpsProxyAgent(config);\n\n      ws = new WebSocket((Binance.options.test ? fstreamSingleTest : fstreamSingle) + endpoint, {\n        agent: _agent3\n      });\n    } else {\n      ws = new WebSocket((Binance.options.test ? fstreamSingleTest : fstreamSingle) + endpoint);\n    }\n\n    if (Binance.options.verbose) Binance.options.log('futuresSubscribeSingle: Subscribed to ' + endpoint);\n    ws.reconnect = Binance.options.reconnect;\n    ws.endpoint = endpoint;\n    ws.isAlive = false;\n    ws.on('open', handleFuturesSocketOpen.bind(ws, params.openCallback));\n    ws.on('pong', handleFuturesSocketHeartbeat);\n    ws.on('error', handleFuturesSocketError);\n    ws.on('close', handleFuturesSocketClose.bind(ws, params.reconnect));\n    ws.on('message', function (data) {\n      try {\n        callback(JSON.parse(data));\n      } catch (error) {\n        Binance.options.log('Parse error: ' + error.message);\n      }\n    });\n    return ws;\n  };\n  /**\r\n   * Used to subscribe to a combined futures websocket endpoint\r\n   * @param {string} streams - streams to connect to\r\n   * @param {function} callback - the function to call when information is received\r\n   * @param {object} params - Optional reconnect {boolean} (whether to reconnect on disconnect), openCallback {function}, id {string}\r\n   * @return {WebSocket} - websocket reference\r\n   */\n\n\n  var _futuresSubscribe = function futuresSubscribe(streams, callback) {\n    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (typeof streams === 'string') return _futuresSubscribeSingle(streams, callback, params);\n    if (typeof params === 'boolean') params = {\n      reconnect: params\n    };\n    if (!params.reconnect) params.reconnect = false;\n    if (!params.openCallback) params.openCallback = false;\n    if (!params.id) params.id = false;\n    var httpsproxy = process.env.https_proxy || false;\n    var socksproxy = process.env.socks_proxy || false;\n    var queryParams = streams.join('/');\n    var ws = false;\n\n    if (socksproxy !== false) {\n      socksproxy = proxyReplacewithIp(socksproxy);\n      if (Binance.options.verbose) Binance.options.log(\"futuresSubscribe: using socks proxy server \".concat(socksproxy));\n      var agent = new SocksProxyAgent({\n        protocol: parseProxy(socksproxy)[0],\n        host: parseProxy(socksproxy)[1],\n        port: parseProxy(socksproxy)[2]\n      });\n      ws = new WebSocket((Binance.options.test ? fstreamTest : fstream) + queryParams, {\n        agent: agent\n      });\n    } else if (httpsproxy !== false) {\n      if (Binance.options.verbose) Binance.options.log(\"futuresSubscribe: using proxy server \".concat(httpsproxy));\n      var config = url.parse(httpsproxy);\n\n      var _agent4 = new HttpsProxyAgent(config);\n\n      ws = new WebSocket((Binance.options.test ? fstreamTest : fstream) + queryParams, {\n        agent: _agent4\n      });\n    } else {\n      ws = new WebSocket((Binance.options.test ? fstreamTest : fstream) + queryParams);\n    }\n\n    ws.reconnect = Binance.options.reconnect;\n    ws.endpoint = stringHash(queryParams);\n    ws.isAlive = false;\n\n    if (Binance.options.verbose) {\n      Binance.options.log(\"futuresSubscribe: Subscribed to [\".concat(ws.endpoint, \"] \").concat(queryParams));\n    }\n\n    ws.on('open', handleFuturesSocketOpen.bind(ws, params.openCallback));\n    ws.on('pong', handleFuturesSocketHeartbeat);\n    ws.on('error', handleFuturesSocketError);\n    ws.on('close', handleFuturesSocketClose.bind(ws, params.reconnect));\n    ws.on('message', function (data) {\n      try {\n        callback(JSON.parse(data).data);\n      } catch (error) {\n        Binance.options.log(\"futuresSubscribe: Parse error: \".concat(error.message));\n      }\n    });\n    return ws;\n  };\n  /**\r\n   * Used to terminate a futures websocket\r\n   * @param {string} endpoint - endpoint identifier associated with the web socket\r\n   * @param {boolean} reconnect - auto reconnect after termination\r\n   * @return {undefined}\r\n   */\n\n\n  var _futuresTerminate = function futuresTerminate(endpoint) {\n    var reconnect = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var ws = Binance.futuresSubscriptions[endpoint];\n    if (!ws) return;\n    ws.removeAllListeners('message');\n    ws.reconnect = reconnect;\n    ws.terminate();\n  };\n  /**\r\n   * Combines all futures OHLC data with the latest update\r\n   * @param {string} symbol - the symbol\r\n   * @param {string} interval - time interval\r\n   * @return {array} - interval data for given symbol\r\n   */\n\n\n  var futuresKlineConcat = function futuresKlineConcat(symbol, interval) {\n    var output = Binance.futuresTicks[symbol][interval];\n    if (typeof Binance.futuresRealtime[symbol][interval].time === 'undefined') return output;\n    var time = Binance.futuresRealtime[symbol][interval].time;\n    var last_updated = Object.keys(Binance.futuresTicks[symbol][interval]).pop();\n\n    if (time >= last_updated) {\n      output[time] = Binance.futuresRealtime[symbol][interval]; //delete output[time].time;\n\n      output[last_updated].isFinal = true;\n      output[time].isFinal = false;\n    }\n\n    return output;\n  };\n  /**\r\n   * Used for websocket futures @kline\r\n   * @param {string} symbol - the symbol\r\n   * @param {object} kline - object with kline info\r\n   * @param {string} firstTime - time filter\r\n   * @return {undefined}\r\n   */\n\n\n  var futuresKlineHandler = function futuresKlineHandler(symbol, kline) {\n    var firstTime = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    // eslint-disable-next-line no-unused-vars\n    var eventType = kline.e,\n        eventTime = kline.E,\n        ticks = kline.k; // eslint-disable-next-line no-unused-vars\n\n    var open = ticks.o,\n        high = ticks.h,\n        low = ticks.l,\n        close = ticks.c,\n        volume = ticks.v,\n        interval = ticks.i,\n        isFinal = ticks.x,\n        quoteVolume = ticks.q,\n        takerBuyBaseVolume = ticks.V,\n        takerBuyQuoteVolume = ticks.Q,\n        trades = ticks.n,\n        time = ticks.t,\n        closeTime = ticks.T;\n    if (time <= firstTime) return;\n\n    if (!isFinal) {\n      // if ( typeof Binance.futuresRealtime[symbol][interval].time !== 'undefined' ) {\n      //     if ( Binance.futuresRealtime[symbol][interval].time > time ) return;\n      // }\n      Binance.futuresRealtime[symbol][interval] = {\n        time: time,\n        closeTime: closeTime,\n        open: open,\n        high: high,\n        low: low,\n        close: close,\n        volume: volume,\n        quoteVolume: quoteVolume,\n        takerBuyBaseVolume: takerBuyBaseVolume,\n        takerBuyQuoteVolume: takerBuyQuoteVolume,\n        trades: trades,\n        isFinal: isFinal\n      };\n      return;\n    }\n\n    var first_updated = Object.keys(Binance.futuresTicks[symbol][interval]).shift();\n    if (first_updated) delete Binance.futuresTicks[symbol][interval][first_updated];\n    Binance.futuresTicks[symbol][interval][time] = {\n      time: time,\n      closeTime: closeTime,\n      open: open,\n      high: high,\n      low: low,\n      close: close,\n      volume: volume,\n      quoteVolume: quoteVolume,\n      takerBuyBaseVolume: takerBuyBaseVolume,\n      takerBuyQuoteVolume: takerBuyQuoteVolume,\n      trades: trades,\n      isFinal: false\n    };\n  };\n  /**\r\n   * Converts the futures liquidation stream data into a friendly object\r\n   * @param {object} data - liquidation data callback data type\r\n   * @return {object} - user friendly data type\r\n   */\n\n\n  var fLiquidationConvertData = function fLiquidationConvertData(data) {\n    var eventType = data.e,\n        eventTime = data.E;\n    var _data$o = data.o,\n        symbol = _data$o.s,\n        side = _data$o.S,\n        orderType = _data$o.o,\n        timeInForce = _data$o.f,\n        origAmount = _data$o.q,\n        price = _data$o.p,\n        avgPrice = _data$o.ap,\n        orderStatus = _data$o.X,\n        lastFilledQty = _data$o.l,\n        totalFilledQty = _data$o.z,\n        tradeTime = _data$o.T;\n    return {\n      symbol: symbol,\n      side: side,\n      orderType: orderType,\n      timeInForce: timeInForce,\n      origAmount: origAmount,\n      price: price,\n      avgPrice: avgPrice,\n      orderStatus: orderStatus,\n      lastFilledQty: lastFilledQty,\n      totalFilledQty: totalFilledQty,\n      eventType: eventType,\n      tradeTime: tradeTime,\n      eventTime: eventTime\n    };\n  };\n  /**\r\n   * Converts the futures ticker stream data into a friendly object\r\n   * @param {object} data - user data callback data type\r\n   * @return {object} - user friendly data type\r\n   */\n\n\n  var fTickerConvertData = function fTickerConvertData(data) {\n    var friendlyData = function friendlyData(data) {\n      var eventType = data.e,\n          eventTime = data.E,\n          symbol = data.s,\n          priceChange = data.p,\n          percentChange = data.P,\n          averagePrice = data.w,\n          close = data.c,\n          closeQty = data.Q,\n          open = data.o,\n          high = data.h,\n          low = data.l,\n          volume = data.v,\n          quoteVolume = data.q,\n          openTime = data.O,\n          closeTime = data.C,\n          firstTradeId = data.F,\n          lastTradeId = data.L,\n          numTrades = data.n;\n      return {\n        eventType: eventType,\n        eventTime: eventTime,\n        symbol: symbol,\n        priceChange: priceChange,\n        percentChange: percentChange,\n        averagePrice: averagePrice,\n        close: close,\n        closeQty: closeQty,\n        open: open,\n        high: high,\n        low: low,\n        volume: volume,\n        quoteVolume: quoteVolume,\n        openTime: openTime,\n        closeTime: closeTime,\n        firstTradeId: firstTradeId,\n        lastTradeId: lastTradeId,\n        numTrades: numTrades\n      };\n    };\n\n    if (Array.isArray(data)) {\n      var result = [];\n\n      var _iterator = _createForOfIteratorHelper(data),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var obj = _step.value;\n          result.push(friendlyData(obj));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return result;\n    }\n\n    return friendlyData(data);\n  };\n  /**\r\n   * Converts the futures miniTicker stream data into a friendly object\r\n   * @param {object} data - user data callback data type\r\n   * @return {object} - user friendly data type\r\n   */\n\n\n  var fMiniTickerConvertData = function fMiniTickerConvertData(data) {\n    var friendlyData = function friendlyData(data) {\n      var eventType = data.e,\n          eventTime = data.E,\n          symbol = data.s,\n          close = data.c,\n          open = data.o,\n          high = data.h,\n          low = data.l,\n          volume = data.v,\n          quoteVolume = data.q;\n      return {\n        eventType: eventType,\n        eventTime: eventTime,\n        symbol: symbol,\n        close: close,\n        open: open,\n        high: high,\n        low: low,\n        volume: volume,\n        quoteVolume: quoteVolume\n      };\n    };\n\n    if (Array.isArray(data)) {\n      var result = [];\n\n      var _iterator2 = _createForOfIteratorHelper(data),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var obj = _step2.value;\n          result.push(friendlyData(obj));\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return result;\n    }\n\n    return friendlyData(data);\n  };\n  /**\r\n   * Converts the futures bookTicker stream data into a friendly object\r\n   * @param {object} data - user data callback data type\r\n   * @return {object} - user friendly data type\r\n   */\n\n\n  var fBookTickerConvertData = function fBookTickerConvertData(data) {\n    var updateId = data.u,\n        symbol = data.s,\n        bestBid = data.b,\n        bestBidQty = data.B,\n        bestAsk = data.a,\n        bestAskQty = data.A;\n    return {\n      updateId: updateId,\n      symbol: symbol,\n      bestBid: bestBid,\n      bestBidQty: bestBidQty,\n      bestAsk: bestAsk,\n      bestAskQty: bestAskQty\n    };\n  };\n  /**\r\n   * Converts the futures UserData stream MARGIN_CALL data into a friendly object\r\n   * @param {object} data - user data callback data type\r\n   * @return {object} - user friendly data type\r\n   */\n\n\n  var fUserDataMarginConvertData = function fUserDataMarginConvertData(data) {\n    var eventType = data.e,\n        eventTime = data.E,\n        crossWalletBalance = data.cw,\n        positions = data.p;\n\n    var positionConverter = function positionConverter(position) {\n      var symbol = position.s,\n          positionSide = position.ps,\n          positionAmount = position.pa,\n          marginType = position.mt,\n          isolatedWallet = position.iw,\n          markPrice = position.mp,\n          unrealizedPnL = position.up,\n          maintenanceMargin = position.mm;\n      return {\n        symbol: symbol,\n        positionSide: positionSide,\n        positionAmount: positionAmount,\n        marginType: marginType,\n        isolatedWallet: isolatedWallet,\n        markPrice: markPrice,\n        unrealizedPnL: unrealizedPnL,\n        maintenanceMargin: maintenanceMargin\n      };\n    };\n\n    var convertedPositions = [];\n\n    var _iterator3 = _createForOfIteratorHelper(positions),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var position = _step3.value;\n        convertedPositions.push(positionConverter(position));\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    positions = convertedPositions;\n    return {\n      eventType: eventType,\n      eventTime: eventTime,\n      crossWalletBalance: crossWalletBalance,\n      positions: positions\n    };\n  };\n  /**\r\n   * Converts the futures UserData stream ACCOUNT_CONFIG_UPDATE into a friendly object\r\n   * @param {object} data - user config callback data type\r\n   * @return {object} - user friendly data type\r\n   */\n\n\n  var fUserConfigDataAccountUpdateConvertData = function fUserConfigDataAccountUpdateConvertData(data) {\n    return {\n      eventType: data.e,\n      eventTime: data.E,\n      transactionTime: data.T,\n      ac: {\n        symbol: data.ac.s,\n        leverage: data.ac.l\n      }\n    };\n  };\n  /**\r\n   * Converts the futures UserData stream ACCOUNT_UPDATE data into a friendly object\r\n   * @param {object} data - user data callback data type\r\n   * @return {object} - user friendly data type\r\n   */\n\n\n  var fUserDataAccountUpdateConvertData = function fUserDataAccountUpdateConvertData(data) {\n    var eventType = data.e,\n        eventTime = data.E,\n        transaction = data.T,\n        updateData = data.a;\n\n    var updateConverter = function updateConverter(updateData) {\n      var eventReasonType = updateData.m,\n          balances = updateData.B,\n          positions = updateData.P;\n\n      var positionConverter = function positionConverter(position) {\n        var symbol = position.s,\n            positionAmount = position.pa,\n            entryPrice = position.ep,\n            accumulatedRealized = position.cr,\n            unrealizedPnL = position.up,\n            marginType = position.mt,\n            isolatedWallet = position.iw,\n            positionSide = position.ps;\n        return {\n          symbol: symbol,\n          positionAmount: positionAmount,\n          entryPrice: entryPrice,\n          accumulatedRealized: accumulatedRealized,\n          unrealizedPnL: unrealizedPnL,\n          marginType: marginType,\n          isolatedWallet: isolatedWallet,\n          positionSide: positionSide\n        };\n      };\n\n      var balanceConverter = function balanceConverter(balance) {\n        var asset = balance.a,\n            walletBalance = balance.wb,\n            crossWalletBalance = balance.cw;\n        return {\n          asset: asset,\n          walletBalance: walletBalance,\n          crossWalletBalance: crossWalletBalance\n        };\n      };\n\n      var balanceResult = [];\n      var positionResult = [];\n\n      var _iterator4 = _createForOfIteratorHelper(balances),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var balance = _step4.value;\n          balanceResult.push(balanceConverter(balance));\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      var _iterator5 = _createForOfIteratorHelper(positions),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var position = _step5.value;\n          positionResult.push(positionConverter(position));\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      balances = balanceResult;\n      positions = positionResult;\n      return {\n        eventReasonType: eventReasonType,\n        balances: balances,\n        positions: positions\n      };\n    };\n\n    updateData = updateConverter(updateData);\n    return {\n      eventType: eventType,\n      eventTime: eventTime,\n      transaction: transaction,\n      updateData: updateData\n    };\n  };\n  /**\r\n   * Converts the futures UserData stream ORDER_TRADE_UPDATE data into a friendly object\r\n   * @param {object} data - user data callback data type\r\n   * @return {object} - user friendly data type\r\n   */\n\n\n  var fUserDataOrderUpdateConvertData = function fUserDataOrderUpdateConvertData(data) {\n    var eventType = data.e,\n        eventTime = data.E,\n        transaction = data.T,\n        order = data.o;\n\n    var orderConverter = function orderConverter(order) {\n      var symbol = order.s,\n          clientOrderId = order.c,\n          side = order.S,\n          orderType = order.o,\n          timeInForce = order.f,\n          originalQuantity = order.q,\n          originalPrice = order.p,\n          averagePrice = order.ap,\n          stopPrice = order.sp,\n          executionType = order.x,\n          orderStatus = order.X,\n          orderId = order.i,\n          orderLastFilledQuantity = order.l,\n          orderFilledAccumulatedQuantity = order.z,\n          lastFilledPrice = order.L,\n          commissionAsset = order.N,\n          commission = order.n,\n          orderTradeTime = order.T,\n          tradeId = order.t,\n          bidsNotional = order.b,\n          askNotional = order.a,\n          isMakerSide = order.m,\n          isReduceOnly = order.R,\n          stopPriceWorkingType = order.wt,\n          originalOrderType = order.ot,\n          positionSide = order.ps,\n          closeAll = order.cp,\n          activationPrice = order.AP,\n          callbackRate = order.cr,\n          realizedProfit = order.rp;\n      return {\n        symbol: symbol,\n        clientOrderId: clientOrderId,\n        side: side,\n        orderType: orderType,\n        timeInForce: timeInForce,\n        originalQuantity: originalQuantity,\n        originalPrice: originalPrice,\n        averagePrice: averagePrice,\n        stopPrice: stopPrice,\n        executionType: executionType,\n        orderStatus: orderStatus,\n        orderId: orderId,\n        orderLastFilledQuantity: orderLastFilledQuantity,\n        orderFilledAccumulatedQuantity: orderFilledAccumulatedQuantity,\n        lastFilledPrice: lastFilledPrice,\n        commissionAsset: commissionAsset,\n        commission: commission,\n        orderTradeTime: orderTradeTime,\n        tradeId: tradeId,\n        bidsNotional: bidsNotional,\n        askNotional: askNotional,\n        isMakerSide: isMakerSide,\n        isReduceOnly: isReduceOnly,\n        stopPriceWorkingType: stopPriceWorkingType,\n        originalOrderType: originalOrderType,\n        positionSide: positionSide,\n        closeAll: closeAll,\n        activationPrice: activationPrice,\n        callbackRate: callbackRate,\n        realizedProfit: realizedProfit\n      };\n    };\n\n    order = orderConverter(order);\n    return {\n      eventType: eventType,\n      eventTime: eventTime,\n      transaction: transaction,\n      order: order\n    };\n  };\n  /**\r\n   * Converts the futures markPrice stream data into a friendly object\r\n   * @param {object} data - user data callback data type\r\n   * @return {object} - user friendly data type\r\n   */\n\n\n  var fMarkPriceConvertData = function fMarkPriceConvertData(data) {\n    var friendlyData = function friendlyData(data) {\n      var eventType = data.e,\n          eventTime = data.E,\n          symbol = data.s,\n          markPrice = data.p,\n          indexPrice = data.i,\n          fundingRate = data.r,\n          fundingTime = data.T;\n      return {\n        eventType: eventType,\n        eventTime: eventTime,\n        symbol: symbol,\n        markPrice: markPrice,\n        indexPrice: indexPrice,\n        fundingRate: fundingRate,\n        fundingTime: fundingTime\n      };\n    };\n\n    if (Array.isArray(data)) {\n      var result = [];\n\n      var _iterator6 = _createForOfIteratorHelper(data),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var obj = _step6.value;\n          result.push(friendlyData(obj));\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      return result;\n    }\n\n    return friendlyData(data);\n  };\n  /**\r\n   * Converts the futures aggTrade stream data into a friendly object\r\n   * @param {object} data - user data callback data type\r\n   * @return {object} - user friendly data type\r\n   */\n\n\n  var fAggTradeConvertData = function fAggTradeConvertData(data) {\n    var friendlyData = function friendlyData(data) {\n      var eventType = data.e,\n          eventTime = data.E,\n          symbol = data.s,\n          aggTradeId = data.a,\n          price = data.p,\n          amount = data.q,\n          firstTradeId = data.f,\n          lastTradeId = data.l,\n          timestamp = data.T,\n          maker = data.m;\n      return {\n        eventType: eventType,\n        eventTime: eventTime,\n        symbol: symbol,\n        aggTradeId: aggTradeId,\n        price: price,\n        amount: amount,\n        total: price * amount,\n        firstTradeId: firstTradeId,\n        lastTradeId: lastTradeId,\n        timestamp: timestamp,\n        maker: maker\n      };\n    };\n\n    if (Array.isArray(data)) {\n      var result = [];\n\n      var _iterator7 = _createForOfIteratorHelper(data),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var obj = _step7.value;\n          result.push(friendlyData(obj));\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      return result;\n    }\n\n    return friendlyData(data);\n  };\n  /**\r\n   * Delivery heartbeat code with a shared single interval tick\r\n   * @return {undefined}\r\n   */\n\n\n  var deliverySocketHeartbeat = function deliverySocketHeartbeat() {\n    /* Sockets removed from subscriptions during a manual terminate()\r\n     will no longer be at risk of having functions called on them */\n    for (var endpointId in Binance.deliverySubscriptions) {\n      var ws = Binance.deliverySubscriptions[endpointId];\n\n      if (ws.isAlive) {\n        ws.isAlive = false;\n        if (ws.readyState === WebSocket.OPEN) ws.ping(noop);\n      } else {\n        if (Binance.options.verbose) Binance.options.log(\"Terminating zombie delivery WebSocket: \".concat(ws.endpoint));\n        if (ws.readyState === WebSocket.OPEN) ws.terminate();\n      }\n    }\n  };\n  /**\r\n   * Called when a delivery socket is opened, subscriptions are registered for later reference\r\n   * @param {function} openCallback - a callback function\r\n   * @return {undefined}\r\n   */\n\n\n  var handleDeliverySocketOpen = function handleDeliverySocketOpen(openCallback) {\n    this.isAlive = true;\n\n    if (Object.keys(Binance.deliverySubscriptions).length === 0) {\n      Binance.socketHeartbeatInterval = setInterval(deliverySocketHeartbeat, 30000);\n    }\n\n    Binance.deliverySubscriptions[this.endpoint] = this;\n    if (typeof openCallback === 'function') openCallback(this.endpoint);\n  };\n  /**\r\n   * Called when delivery websocket is closed, subscriptions are de-registered for later reference\r\n   * @param {boolean} reconnect - true or false to reconnect the socket\r\n   * @param {string} code - code associated with the socket\r\n   * @param {string} reason - string with the response\r\n   * @return {undefined}\r\n   */\n\n\n  var handleDeliverySocketClose = function handleDeliverySocketClose(reconnect, code, reason) {\n    delete Binance.deliverySubscriptions[this.endpoint];\n\n    if (Binance.deliverySubscriptions && Object.keys(Binance.deliverySubscriptions).length === 0) {\n      clearInterval(Binance.socketHeartbeatInterval);\n    }\n\n    Binance.options.log('Delivery WebSocket closed: ' + this.endpoint + (code ? ' (' + code + ')' : '') + (reason ? ' ' + reason : ''));\n\n    if (Binance.options.reconnect && this.reconnect && reconnect) {\n      if (this.endpoint && parseInt(this.endpoint.length, 10) === 60) Binance.options.log('Delivery account data WebSocket reconnecting...');else Binance.options.log('Delivery WebSocket reconnecting: ' + this.endpoint + '...');\n\n      try {\n        reconnect();\n      } catch (error) {\n        Binance.options.log('Delivery WebSocket reconnect error: ' + error.message);\n      }\n    }\n  };\n  /**\r\n   * Called when a delivery websocket errors\r\n   * @param {object} error - error object message\r\n   * @return {undefined}\r\n   */\n\n\n  var handleDeliverySocketError = function handleDeliverySocketError(error) {\n    Binance.options.log('Delivery WebSocket error: ' + this.endpoint + (error.code ? ' (' + error.code + ')' : '') + (error.message ? ' ' + error.message : ''));\n  };\n  /**\r\n   * Called on each delivery socket heartbeat\r\n   * @return {undefined}\r\n   */\n\n\n  var handleDeliverySocketHeartbeat = function handleDeliverySocketHeartbeat() {\n    this.isAlive = true;\n  };\n  /**\r\n   * Used to subscribe to a single delivery websocket endpoint\r\n   * @param {string} endpoint - endpoint to connect to\r\n   * @param {function} callback - the function to call when information is received\r\n   * @param {object} params - Optional reconnect {boolean} (whether to reconnect on disconnect), openCallback {function}, id {string}\r\n   * @return {WebSocket} - websocket reference\r\n   */\n\n\n  var _deliverySubscribeSingle = function deliverySubscribeSingle(endpoint, callback) {\n    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (typeof params === 'boolean') params = {\n      reconnect: params\n    };\n    if (!params.reconnect) params.reconnect = false;\n    if (!params.openCallback) params.openCallback = false;\n    if (!params.id) params.id = false;\n    var httpsproxy = process.env.https_proxy || false;\n    var socksproxy = process.env.socks_proxy || false;\n    var ws = false;\n\n    if (socksproxy !== false) {\n      socksproxy = proxyReplacewithIp(socksproxy);\n      if (Binance.options.verbose) Binance.options.log(\"deliverySubscribeSingle: using socks proxy server: \".concat(socksproxy));\n      var agent = new SocksProxyAgent({\n        protocol: parseProxy(socksproxy)[0],\n        host: parseProxy(socksproxy)[1],\n        port: parseProxy(socksproxy)[2]\n      });\n      ws = new WebSocket((Binance.options.test ? dstreamSingleTest : dstreamSingle) + endpoint, {\n        agent: agent\n      });\n    } else if (httpsproxy !== false) {\n      if (Binance.options.verbose) Binance.options.log(\"deliverySubscribeSingle: using proxy server: \".concat(_agent5));\n      var config = url.parse(httpsproxy);\n\n      var _agent5 = new HttpsProxyAgent(config);\n\n      ws = new WebSocket((Binance.options.test ? dstreamSingleTest : dstreamSingle) + endpoint, {\n        agent: _agent5\n      });\n    } else {\n      ws = new WebSocket((Binance.options.test ? dstreamSingleTest : dstreamSingle) + endpoint);\n    }\n\n    if (Binance.options.verbose) Binance.options.log('deliverySubscribeSingle: Subscribed to ' + endpoint);\n    ws.reconnect = Binance.options.reconnect;\n    ws.endpoint = endpoint;\n    ws.isAlive = false;\n    ws.on('open', handleDeliverySocketOpen.bind(ws, params.openCallback));\n    ws.on('pong', handleDeliverySocketHeartbeat);\n    ws.on('error', handleDeliverySocketError);\n    ws.on('close', handleDeliverySocketClose.bind(ws, params.reconnect));\n    ws.on('message', function (data) {\n      try {\n        callback(JSON.parse(data));\n      } catch (error) {\n        Binance.options.log('Parse error: ' + error.message);\n      }\n    });\n    return ws;\n  };\n  /**\r\n   * Used to subscribe to a combined delivery websocket endpoint\r\n   * @param {string} streams - streams to connect to\r\n   * @param {function} callback - the function to call when information is received\r\n   * @param {object} params - Optional reconnect {boolean} (whether to reconnect on disconnect), openCallback {function}, id {string}\r\n   * @return {WebSocket} - websocket reference\r\n   */\n\n\n  var _deliverySubscribe = function deliverySubscribe(streams, callback) {\n    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (typeof streams === 'string') return _deliverySubscribeSingle(streams, callback, params);\n    if (typeof params === 'boolean') params = {\n      reconnect: params\n    };\n    if (!params.reconnect) params.reconnect = false;\n    if (!params.openCallback) params.openCallback = false;\n    if (!params.id) params.id = false;\n    var httpsproxy = process.env.https_proxy || false;\n    var socksproxy = process.env.socks_proxy || false;\n    var queryParams = streams.join('/');\n    var ws = false;\n\n    if (socksproxy !== false) {\n      socksproxy = proxyReplacewithIp(socksproxy);\n      if (Binance.options.verbose) Binance.options.log(\"deliverySubscribe: using socks proxy server \".concat(socksproxy));\n      var agent = new SocksProxyAgent({\n        protocol: parseProxy(socksproxy)[0],\n        host: parseProxy(socksproxy)[1],\n        port: parseProxy(socksproxy)[2]\n      });\n      ws = new WebSocket((Binance.options.test ? dstreamTest : dstream) + queryParams, {\n        agent: agent\n      });\n    } else if (httpsproxy !== false) {\n      if (Binance.options.verbose) Binance.options.log(\"deliverySubscribe: using proxy server \".concat(httpsproxy));\n      var config = url.parse(httpsproxy);\n\n      var _agent6 = new HttpsProxyAgent(config);\n\n      ws = new WebSocket((Binance.options.test ? dstreamTest : dstream) + queryParams, {\n        agent: _agent6\n      });\n    } else {\n      ws = new WebSocket((Binance.options.test ? dstreamTest : dstream) + queryParams);\n    }\n\n    ws.reconnect = Binance.options.reconnect;\n    ws.endpoint = stringHash(queryParams);\n    ws.isAlive = false;\n\n    if (Binance.options.verbose) {\n      Binance.options.log(\"deliverySubscribe: Subscribed to [\".concat(ws.endpoint, \"] \").concat(queryParams));\n    }\n\n    ws.on('open', handleDeliverySocketOpen.bind(ws, params.openCallback));\n    ws.on('pong', handleDeliverySocketHeartbeat);\n    ws.on('error', handleDeliverySocketError);\n    ws.on('close', handleDeliverySocketClose.bind(ws, params.reconnect));\n    ws.on('message', function (data) {\n      try {\n        callback(JSON.parse(data).data);\n      } catch (error) {\n        Binance.options.log(\"deliverySubscribe: Parse error: \".concat(error.message));\n      }\n    });\n    return ws;\n  };\n  /**\r\n   * Used to terminate a delivery websocket\r\n   * @param {string} endpoint - endpoint identifier associated with the web socket\r\n   * @param {boolean} reconnect - auto reconnect after termination\r\n   * @return {undefined}\r\n   */\n\n\n  var _deliveryTerminate = function deliveryTerminate(endpoint) {\n    var reconnect = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var ws = Binance.deliverySubscriptions[endpoint];\n    if (!ws) return;\n    ws.removeAllListeners('message');\n    ws.reconnect = reconnect;\n    ws.terminate();\n  };\n  /**\r\n   * Combines all delivery OHLC data with the latest update\r\n   * @param {string} symbol - the symbol\r\n   * @param {string} interval - time interval\r\n   * @return {array} - interval data for given symbol\r\n   */\n\n\n  var deliveryKlineConcat = function deliveryKlineConcat(symbol, interval) {\n    var output = Binance.deliveryTicks[symbol][interval];\n    if (typeof Binance.deliveryRealtime[symbol][interval].time === 'undefined') return output;\n    var time = Binance.deliveryRealtime[symbol][interval].time;\n    var last_updated = Object.keys(Binance.deliveryTicks[symbol][interval]).pop();\n\n    if (time >= last_updated) {\n      output[time] = Binance.deliveryRealtime[symbol][interval]; //delete output[time].time;\n\n      output[last_updated].isFinal = true;\n      output[time].isFinal = false;\n    }\n\n    return output;\n  };\n  /**\r\n   * Used for websocket delivery @kline\r\n   * @param {string} symbol - the symbol\r\n   * @param {object} kline - object with kline info\r\n   * @param {string} firstTime - time filter\r\n   * @return {undefined}\r\n   */\n\n\n  var deliveryKlineHandler = function deliveryKlineHandler(symbol, kline) {\n    var firstTime = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    // eslint-disable-next-line no-unused-vars\n    var eventType = kline.e,\n        eventTime = kline.E,\n        ticks = kline.k; // eslint-disable-next-line no-unused-vars\n\n    var open = ticks.o,\n        high = ticks.h,\n        low = ticks.l,\n        close = ticks.c,\n        volume = ticks.v,\n        interval = ticks.i,\n        isFinal = ticks.x,\n        quoteVolume = ticks.q,\n        takerBuyBaseVolume = ticks.V,\n        takerBuyQuoteVolume = ticks.Q,\n        trades = ticks.n,\n        time = ticks.t,\n        closeTime = ticks.T;\n    if (time <= firstTime) return;\n\n    if (!isFinal) {\n      // if ( typeof Binance.futuresRealtime[symbol][interval].time !== 'undefined' ) {\n      //     if ( Binance.futuresRealtime[symbol][interval].time > time ) return;\n      // }\n      Binance.deliveryRealtime[symbol][interval] = {\n        time: time,\n        closeTime: closeTime,\n        open: open,\n        high: high,\n        low: low,\n        close: close,\n        volume: volume,\n        quoteVolume: quoteVolume,\n        takerBuyBaseVolume: takerBuyBaseVolume,\n        takerBuyQuoteVolume: takerBuyQuoteVolume,\n        trades: trades,\n        isFinal: isFinal\n      };\n      return;\n    }\n\n    var first_updated = Object.keys(Binance.deliveryTicks[symbol][interval]).shift();\n    if (first_updated) delete Binance.deliveryTicks[symbol][interval][first_updated];\n    Binance.deliveryTicks[symbol][interval][time] = {\n      time: time,\n      closeTime: closeTime,\n      open: open,\n      high: high,\n      low: low,\n      close: close,\n      volume: volume,\n      quoteVolume: quoteVolume,\n      takerBuyBaseVolume: takerBuyBaseVolume,\n      takerBuyQuoteVolume: takerBuyQuoteVolume,\n      trades: trades,\n      isFinal: false\n    };\n  };\n  /**\r\n   * Converts the delivery liquidation stream data into a friendly object\r\n   * @param {object} data - liquidation data callback data type\r\n   * @return {object} - user friendly data type\r\n   */\n\n\n  var dLiquidationConvertData = function dLiquidationConvertData(data) {\n    var eventType = data.e,\n        eventTime = data.E;\n    var _data$o2 = data.o,\n        symbol = _data$o2.s,\n        side = _data$o2.S,\n        orderType = _data$o2.o,\n        timeInForce = _data$o2.f,\n        origAmount = _data$o2.q,\n        price = _data$o2.p,\n        avgPrice = _data$o2.ap,\n        orderStatus = _data$o2.X,\n        lastFilledQty = _data$o2.l,\n        totalFilledQty = _data$o2.z,\n        tradeTime = _data$o2.T;\n    return {\n      symbol: symbol,\n      side: side,\n      orderType: orderType,\n      timeInForce: timeInForce,\n      origAmount: origAmount,\n      price: price,\n      avgPrice: avgPrice,\n      orderStatus: orderStatus,\n      lastFilledQty: lastFilledQty,\n      totalFilledQty: totalFilledQty,\n      eventType: eventType,\n      tradeTime: tradeTime,\n      eventTime: eventTime\n    };\n  };\n  /**\r\n   * Converts the delivery ticker stream data into a friendly object\r\n   * @param {object} data - user data callback data type\r\n   * @return {object} - user friendly data type\r\n   */\n\n\n  var dTickerConvertData = function dTickerConvertData(data) {\n    var friendlyData = function friendlyData(data) {\n      var eventType = data.e,\n          eventTime = data.E,\n          symbol = data.s,\n          priceChange = data.p,\n          percentChange = data.P,\n          averagePrice = data.w,\n          close = data.c,\n          closeQty = data.Q,\n          open = data.o,\n          high = data.h,\n          low = data.l,\n          volume = data.v,\n          quoteVolume = data.q,\n          openTime = data.O,\n          closeTime = data.C,\n          firstTradeId = data.F,\n          lastTradeId = data.L,\n          numTrades = data.n;\n      return {\n        eventType: eventType,\n        eventTime: eventTime,\n        symbol: symbol,\n        priceChange: priceChange,\n        percentChange: percentChange,\n        averagePrice: averagePrice,\n        close: close,\n        closeQty: closeQty,\n        open: open,\n        high: high,\n        low: low,\n        volume: volume,\n        quoteVolume: quoteVolume,\n        openTime: openTime,\n        closeTime: closeTime,\n        firstTradeId: firstTradeId,\n        lastTradeId: lastTradeId,\n        numTrades: numTrades\n      };\n    };\n\n    if (Array.isArray(data)) {\n      var result = [];\n\n      var _iterator8 = _createForOfIteratorHelper(data),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var obj = _step8.value;\n          result.push(friendlyData(obj));\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n\n      return result;\n    }\n\n    return friendlyData(data);\n  };\n  /**\r\n   * Converts the delivery miniTicker stream data into a friendly object\r\n   * @param {object} data - user data callback data type\r\n   * @return {object} - user friendly data type\r\n   */\n\n\n  var dMiniTickerConvertData = function dMiniTickerConvertData(data) {\n    var friendlyData = function friendlyData(data) {\n      var eventType = data.e,\n          eventTime = data.E,\n          symbol = data.s,\n          close = data.c,\n          open = data.o,\n          high = data.h,\n          low = data.l,\n          volume = data.v,\n          quoteVolume = data.q;\n      return {\n        eventType: eventType,\n        eventTime: eventTime,\n        symbol: symbol,\n        close: close,\n        open: open,\n        high: high,\n        low: low,\n        volume: volume,\n        quoteVolume: quoteVolume\n      };\n    };\n\n    if (Array.isArray(data)) {\n      var result = [];\n\n      var _iterator9 = _createForOfIteratorHelper(data),\n          _step9;\n\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var obj = _step9.value;\n          result.push(friendlyData(obj));\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n\n      return result;\n    }\n\n    return friendlyData(data);\n  };\n  /**\r\n   * Converts the delivery bookTicker stream data into a friendly object\r\n   * @param {object} data - user data callback data type\r\n   * @return {object} - user friendly data type\r\n   */\n\n\n  var dBookTickerConvertData = function dBookTickerConvertData(data) {\n    var updateId = data.u,\n        symbol = data.s,\n        bestBid = data.b,\n        bestBidQty = data.B,\n        bestAsk = data.a,\n        bestAskQty = data.A;\n    return {\n      updateId: updateId,\n      symbol: symbol,\n      bestBid: bestBid,\n      bestBidQty: bestBidQty,\n      bestAsk: bestAsk,\n      bestAskQty: bestAskQty\n    };\n  };\n  /**\r\n   * Converts the delivery markPrice stream data into a friendly object\r\n   * @param {object} data - user data callback data type\r\n   * @return {object} - user friendly data type\r\n   */\n\n\n  var dMarkPriceConvertData = function dMarkPriceConvertData(data) {\n    var friendlyData = function friendlyData(data) {\n      var eventType = data.e,\n          eventTime = data.E,\n          symbol = data.s,\n          markPrice = data.p,\n          fundingRate = data.r,\n          fundingTime = data.T;\n      return {\n        eventType: eventType,\n        eventTime: eventTime,\n        symbol: symbol,\n        markPrice: markPrice,\n        fundingRate: fundingRate,\n        fundingTime: fundingTime\n      };\n    };\n\n    if (Array.isArray(data)) {\n      var result = [];\n\n      var _iterator10 = _createForOfIteratorHelper(data),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var obj = _step10.value;\n          result.push(friendlyData(obj));\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n\n      return result;\n    }\n\n    return friendlyData(data);\n  };\n  /**\r\n   * Converts the delivery aggTrade stream data into a friendly object\r\n   * @param {object} data - user data callback data type\r\n   * @return {object} - user friendly data type\r\n   */\n\n\n  var dAggTradeConvertData = function dAggTradeConvertData(data) {\n    var friendlyData = function friendlyData(data) {\n      var eventType = data.e,\n          eventTime = data.E,\n          symbol = data.s,\n          aggTradeId = data.a,\n          price = data.p,\n          amount = data.q,\n          firstTradeId = data.f,\n          lastTradeId = data.l,\n          timestamp = data.T,\n          maker = data.m;\n      return {\n        eventType: eventType,\n        eventTime: eventTime,\n        symbol: symbol,\n        aggTradeId: aggTradeId,\n        price: price,\n        amount: amount,\n        total: price * amount,\n        firstTradeId: firstTradeId,\n        lastTradeId: lastTradeId,\n        timestamp: timestamp,\n        maker: maker\n      };\n    };\n\n    if (Array.isArray(data)) {\n      var result = [];\n\n      var _iterator11 = _createForOfIteratorHelper(data),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var obj = _step11.value;\n          result.push(friendlyData(obj));\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n\n      return result;\n    }\n\n    return friendlyData(data);\n  };\n  /**\r\n  * Converts the delivery UserData stream ORDER_TRADE_UPDATE data into a friendly object\r\n  * @param {object} data - user data callback data type\r\n  * @return {object} - user friendly data type\r\n  */\n\n\n  var dUserDataOrderUpdateConvertData = function dUserDataOrderUpdateConvertData(data) {\n    var eventType = data.e,\n        eventTime = data.E,\n        transaction = data.T,\n        order = data.o;\n\n    var orderConverter = function orderConverter(order) {\n      var symbol = order.s,\n          clientOrderId = order.c,\n          side = order.S,\n          orderType = order.o,\n          timeInForce = order.f,\n          originalQuantity = order.q,\n          originalPrice = order.p,\n          averagePrice = order.ap,\n          stopPrice = order.sp,\n          executionType = order.x,\n          orderStatus = order.X,\n          orderId = order.i,\n          orderLastFilledQuantity = order.l,\n          orderFilledAccumulatedQuantity = order.z,\n          lastFilledPrice = order.L,\n          marginAsset = order.ma,\n          commissionAsset = order.N,\n          commission = order.n,\n          orderTradeTime = order.T,\n          tradeId = order.t,\n          realizedProfit = order.rp,\n          bidsNotional = order.b,\n          askNotional = order.a,\n          isMakerSide = order.m,\n          isReduceOnly = order.R,\n          stopPriceWorkingType = order.wt,\n          originalOrderType = order.ot,\n          positionSide = order.ps,\n          closeAll = order.cp,\n          activationPrice = order.AP,\n          callbackRate = order.cr,\n          priceProtect = order.pP;\n      return {\n        symbol: symbol,\n        clientOrderId: clientOrderId,\n        side: side,\n        orderType: orderType,\n        timeInForce: timeInForce,\n        originalQuantity: originalQuantity,\n        originalPrice: originalPrice,\n        averagePrice: averagePrice,\n        stopPrice: stopPrice,\n        executionType: executionType,\n        orderStatus: orderStatus,\n        orderId: orderId,\n        orderLastFilledQuantity: orderLastFilledQuantity,\n        orderFilledAccumulatedQuantity: orderFilledAccumulatedQuantity,\n        lastFilledPrice: lastFilledPrice,\n        marginAsset: marginAsset,\n        commissionAsset: commissionAsset,\n        commission: commission,\n        orderTradeTime: orderTradeTime,\n        tradeId: tradeId,\n        bidsNotional: bidsNotional,\n        askNotional: askNotional,\n        isMakerSide: isMakerSide,\n        isReduceOnly: isReduceOnly,\n        stopPriceWorkingType: stopPriceWorkingType,\n        originalOrderType: originalOrderType,\n        positionSide: positionSide,\n        closeAll: closeAll,\n        activationPrice: activationPrice,\n        callbackRate: callbackRate,\n        realizedProfit: realizedProfit,\n        priceProtect: priceProtect\n      };\n    };\n\n    order = orderConverter(order);\n    return {\n      eventType: eventType,\n      eventTime: eventTime,\n      transaction: transaction,\n      order: order\n    };\n  };\n  /**\r\n   * Used as part of the user data websockets callback\r\n   * @param {object} data - user data callback data type\r\n   * @return {undefined}\r\n   */\n\n\n  var userDataHandler = function userDataHandler(data) {\n    var type = data.e;\n\n    if (type === 'outboundAccountInfo') {// XXX: Deprecated in 2020-09-08\n    } else if (type === 'executionReport') {\n      if (Binance.options.execution_callback) Binance.options.execution_callback(data);\n    } else if (type === 'listStatus') {\n      if (Binance.options.list_status_callback) Binance.options.list_status_callback(data);\n    } else if (type === 'outboundAccountPosition') {\n      Binance.options.balance_callback(data);\n    } else {\n      Binance.options.log('Unexpected userData: ' + type);\n    }\n  };\n  /**\r\n   * Used as part of the user data websockets callback\r\n   * @param {object} data - user data callback data type\r\n   * @return {undefined}\r\n   */\n\n\n  var userMarginDataHandler = function userMarginDataHandler(data) {\n    var type = data.e;\n\n    if (type === 'outboundAccountInfo') {// XXX: Deprecated in 2020-09-08\n    } else if (type === 'executionReport') {\n      if (Binance.options.margin_execution_callback) Binance.options.margin_execution_callback(data);\n    } else if (type === 'listStatus') {\n      if (Binance.options.margin_list_status_callback) Binance.options.margin_list_status_callback(data);\n    } else if (type === 'outboundAccountPosition') {\n      Binance.options.margin_balance_callback(data);\n    } else {\n      Binance.options.log('Unexpected userMarginData: ' + type);\n    }\n  };\n  /**\r\n   * Used as part of the user data websockets callback\r\n   * @param {object} data - user data callback data type\r\n   * @return {undefined}\r\n   */\n\n\n  var userFutureDataHandler = function userFutureDataHandler(data) {\n    var type = data.e;\n\n    if (type === 'MARGIN_CALL') {\n      Binance.options.future_margin_call_callback(fUserDataMarginConvertData(data));\n    } else if (type === 'ACCOUNT_UPDATE') {\n      if (Binance.options.future_account_update_callback) {\n        Binance.options.future_account_update_callback(fUserDataAccountUpdateConvertData(data));\n      }\n    } else if (type === 'ORDER_TRADE_UPDATE') {\n      if (Binance.options.future_order_update_callback) {\n        Binance.options.future_order_update_callback(fUserDataOrderUpdateConvertData(data));\n      }\n    } else if (type === 'ACCOUNT_CONFIG_UPDATE') {\n      if (Binance.options.future_account_config_update_callback) {\n        Binance.options.future_account_config_update_callback(fUserConfigDataAccountUpdateConvertData(data));\n      }\n    } else {\n      Binance.options.log('Unexpected userFutureData: ' + type);\n    }\n  };\n  /**\r\n  * Used as part of the user data websockets callback\r\n  * @param {object} data - user data callback data type\r\n  * @return {undefined}\r\n  */\n\n\n  var userDeliveryDataHandler = function userDeliveryDataHandler(data) {\n    var type = data.e;\n\n    if (type === \"MARGIN_CALL\") {\n      Binance.options.delivery_margin_call_callback(fUserDataMarginConvertData(data));\n    } else if (type === \"ACCOUNT_UPDATE\") {\n      if (Binance.options.delivery_account_update_callback) {\n        Binance.options.delivery_account_update_callback(fUserDataAccountUpdateConvertData(data));\n      }\n    } else if (type === \"ORDER_TRADE_UPDATE\") {\n      if (Binance.options.delivery_order_update_callback) {\n        Binance.options.delivery_order_update_callback(dUserDataOrderUpdateConvertData(data));\n      }\n    } else {\n      Binance.options.log(\"Unexpected userDeliveryData: \" + type);\n    }\n  };\n  /**\r\n  * Transfer between main account and futures/delivery accounts\r\n  * @param {string} asset - the asset\r\n  * @param {number} amount - the asset\r\n  * @param {function} callback - the callback function\r\n  * @param {object} options - additional options\r\n  * @return {undefined}\r\n  */\n\n\n  var transferBetweenMainAndFutures = function transferBetweenMainAndFutures(asset, amount, type, callback) {\n    var parameters = Object.assign({\n      asset: asset,\n      amount: amount,\n      type: type\n    });\n\n    if (!callback) {\n      return new Promise(function (resolve, reject) {\n        _signedRequest(sapi + \"v1/futures/transfer\", parameters, function (error, data) {\n          if (error) return reject(error);\n          return resolve(data);\n        }, \"POST\");\n      });\n    }\n\n    _signedRequest(sapi + \"v1/futures/transfer\", parameters, function (error, data) {\n      if (callback) return callback(error, data);\n    }, \"POST\");\n  };\n  /**\r\n   * Converts the previous day stream into friendly object\r\n   * @param {object} data - user data callback data type\r\n   * @return {object} - user friendly data type\r\n   */\n\n\n  var prevDayConvertData = function prevDayConvertData(data) {\n    var convertData = function convertData(data) {\n      var eventType = data.e,\n          eventTime = data.E,\n          symbol = data.s,\n          priceChange = data.p,\n          percentChange = data.P,\n          averagePrice = data.w,\n          prevClose = data.x,\n          close = data.c,\n          closeQty = data.Q,\n          bestBid = data.b,\n          bestBidQty = data.B,\n          bestAsk = data.a,\n          bestAskQty = data.A,\n          open = data.o,\n          high = data.h,\n          low = data.l,\n          volume = data.v,\n          quoteVolume = data.q,\n          openTime = data.O,\n          closeTime = data.C,\n          firstTradeId = data.F,\n          lastTradeId = data.L,\n          numTrades = data.n;\n      return {\n        eventType: eventType,\n        eventTime: eventTime,\n        symbol: symbol,\n        priceChange: priceChange,\n        percentChange: percentChange,\n        averagePrice: averagePrice,\n        prevClose: prevClose,\n        close: close,\n        closeQty: closeQty,\n        bestBid: bestBid,\n        bestBidQty: bestBidQty,\n        bestAsk: bestAsk,\n        bestAskQty: bestAskQty,\n        open: open,\n        high: high,\n        low: low,\n        volume: volume,\n        quoteVolume: quoteVolume,\n        openTime: openTime,\n        closeTime: closeTime,\n        firstTradeId: firstTradeId,\n        lastTradeId: lastTradeId,\n        numTrades: numTrades\n      };\n    };\n\n    if (Array.isArray(data)) {\n      var result = [];\n\n      var _iterator12 = _createForOfIteratorHelper(data),\n          _step12;\n\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var obj = _step12.value;\n          var converted = convertData(obj);\n          result.push(converted);\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n\n      return result; // eslint-disable-next-line no-else-return\n    } else {\n      return convertData(data);\n    }\n  };\n  /**\r\n   * Parses the previous day stream and calls the user callback with friendly object\r\n   * @param {object} data - user data callback data type\r\n   * @param {function} callback - user data callback data type\r\n   * @return {undefined}\r\n   */\n\n\n  var prevDayStreamHandler = function prevDayStreamHandler(data, callback) {\n    var converted = prevDayConvertData(data);\n    callback(null, converted);\n  };\n  /**\r\n   * Gets the price of a given symbol or symbols\r\n   * @param {array} data - array of symbols\r\n   * @return {array} - symbols with their current prices\r\n   */\n\n\n  var priceData = function priceData(data) {\n    var prices = {};\n\n    if (Array.isArray(data)) {\n      var _iterator13 = _createForOfIteratorHelper(data),\n          _step13;\n\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var obj = _step13.value;\n          prices[obj.symbol] = obj.price;\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n    } else {\n      // Single price returned\n      prices[data.symbol] = data.price;\n    }\n\n    return prices;\n  };\n  /**\r\n   * Used by bookTickers to format the bids and asks given given symbols\r\n   * @param {array} data - array of symbols\r\n   * @return {object} - symbols with their bids and asks data\r\n   */\n\n\n  var bookPriceData = function bookPriceData(data) {\n    var prices = {};\n\n    var _iterator14 = _createForOfIteratorHelper(data),\n        _step14;\n\n    try {\n      for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n        var obj = _step14.value;\n        prices[obj.symbol] = {\n          bid: obj.bidPrice,\n          bids: obj.bidQty,\n          ask: obj.askPrice,\n          asks: obj.askQty\n        };\n      }\n    } catch (err) {\n      _iterator14.e(err);\n    } finally {\n      _iterator14.f();\n    }\n\n    return prices;\n  };\n  /**\r\n   * Used by balance to get the balance data\r\n   * @param {array} data - account info object\r\n   * @return {object} - balances hel with available, onorder amounts\r\n   */\n\n\n  var balanceData = function balanceData(data) {\n    var balances = {};\n    if (typeof data === 'undefined') return {};\n\n    if (typeof data.balances === 'undefined') {\n      Binance.options.log('balanceData error', data);\n      return {};\n    }\n\n    var _iterator15 = _createForOfIteratorHelper(data.balances),\n        _step15;\n\n    try {\n      for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n        var obj = _step15.value;\n        balances[obj.asset] = {\n          available: obj.free,\n          onOrder: obj.locked\n        };\n      }\n    } catch (err) {\n      _iterator15.e(err);\n    } finally {\n      _iterator15.f();\n    }\n\n    return balances;\n  };\n  /**\r\n   * Used by web sockets depth and populates OHLC and info\r\n   * @param {string} symbol - symbol to get candlestick info\r\n   * @param {string} interval - time interval, 1m, 3m, 5m ....\r\n   * @param {array} ticks - tick array\r\n   * @return {undefined}\r\n   */\n\n\n  var klineData = function klineData(symbol, interval, ticks) {\n    // Used for /depth\n    var last_time = 0;\n\n    if (isIterable(ticks)) {\n      var _iterator16 = _createForOfIteratorHelper(ticks),\n          _step16;\n\n      try {\n        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n          var tick = _step16.value;\n\n          // eslint-disable-next-line no-unused-vars\n          var _tick = _slicedToArray(tick, 12),\n              time = _tick[0],\n              open = _tick[1],\n              high = _tick[2],\n              low = _tick[3],\n              close = _tick[4],\n              volume = _tick[5],\n              closeTime = _tick[6],\n              assetVolume = _tick[7],\n              trades = _tick[8],\n              buyBaseVolume = _tick[9],\n              buyAssetVolume = _tick[10],\n              ignored = _tick[11];\n\n          Binance.ohlc[symbol][interval][time] = {\n            open: open,\n            high: high,\n            low: low,\n            close: close,\n            volume: volume\n          };\n          last_time = time;\n        }\n      } catch (err) {\n        _iterator16.e(err);\n      } finally {\n        _iterator16.f();\n      }\n\n      Binance.info[symbol][interval].timestamp = last_time;\n    }\n  };\n  /**\r\n   * Combines all OHLC data with latest update\r\n   * @param {string} symbol - the symbol\r\n   * @param {string} interval - time interval, 1m, 3m, 5m ....\r\n   * @return {array} - interval data for given symbol\r\n   */\n\n\n  var klineConcat = function klineConcat(symbol, interval) {\n    var output = Binance.ohlc[symbol][interval];\n    if (typeof Binance.ohlcLatest[symbol][interval].time === 'undefined') return output;\n    var time = Binance.ohlcLatest[symbol][interval].time;\n    var last_updated = Object.keys(Binance.ohlc[symbol][interval]).pop();\n\n    if (time >= last_updated) {\n      output[time] = Binance.ohlcLatest[symbol][interval];\n      delete output[time].time;\n      output[time].isFinal = false;\n    }\n\n    return output;\n  };\n  /**\r\n   * Used for websocket @kline\r\n   * @param {string} symbol - the symbol\r\n   * @param {object} kline - object with kline info\r\n   * @param {string} firstTime - time filter\r\n   * @return {undefined}\r\n   */\n\n\n  var klineHandler = function klineHandler(symbol, kline) {\n    var firstTime = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    // TODO: add Taker buy base asset volume\n    // eslint-disable-next-line no-unused-vars\n    var eventType = kline.e,\n        eventTime = kline.E,\n        ticks = kline.k; // eslint-disable-next-line no-unused-vars\n\n    var open = ticks.o,\n        high = ticks.h,\n        low = ticks.l,\n        close = ticks.c,\n        volume = ticks.v,\n        interval = ticks.i,\n        isFinal = ticks.x,\n        quoteVolume = ticks.q,\n        time = ticks.t; //n:trades, V:buyVolume, Q:quoteBuyVolume\n\n    if (time <= firstTime) return;\n\n    if (!isFinal) {\n      if (typeof Binance.ohlcLatest[symbol][interval].time !== 'undefined') {\n        if (Binance.ohlcLatest[symbol][interval].time > time) return;\n      }\n\n      Binance.ohlcLatest[symbol][interval] = {\n        open: open,\n        high: high,\n        low: low,\n        close: close,\n        volume: volume,\n        time: time\n      };\n      return;\n    } // Delete an element from the beginning so we don't run out of memory\n\n\n    var first_updated = Object.keys(Binance.ohlc[symbol][interval]).shift();\n    if (first_updated) delete Binance.ohlc[symbol][interval][first_updated];\n    Binance.ohlc[symbol][interval][time] = {\n      open: open,\n      high: high,\n      low: low,\n      close: close,\n      volume: volume\n    };\n  };\n  /**\r\n   * Used by futures websockets chart cache\r\n   * @param {string} symbol - symbol to get candlestick info\r\n   * @param {string} interval - time interval, 1m, 3m, 5m ....\r\n   * @param {array} ticks - tick array\r\n   * @return {undefined}\r\n   */\n\n\n  var futuresKlineData = function futuresKlineData(symbol, interval, ticks) {\n    var last_time = 0;\n\n    if (isIterable(ticks)) {\n      var _iterator17 = _createForOfIteratorHelper(ticks),\n          _step17;\n\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          var tick = _step17.value;\n\n          // eslint-disable-next-line no-unused-vars\n          var _tick2 = _slicedToArray(tick, 12),\n              time = _tick2[0],\n              open = _tick2[1],\n              high = _tick2[2],\n              low = _tick2[3],\n              close = _tick2[4],\n              volume = _tick2[5],\n              closeTime = _tick2[6],\n              quoteVolume = _tick2[7],\n              trades = _tick2[8],\n              takerBuyBaseVolume = _tick2[9],\n              takerBuyQuoteVolume = _tick2[10],\n              ignored = _tick2[11];\n\n          Binance.futuresTicks[symbol][interval][time] = {\n            time: time,\n            closeTime: closeTime,\n            open: open,\n            high: high,\n            low: low,\n            close: close,\n            volume: volume,\n            quoteVolume: quoteVolume,\n            takerBuyBaseVolume: takerBuyBaseVolume,\n            takerBuyQuoteVolume: takerBuyQuoteVolume,\n            trades: trades\n          };\n          last_time = time;\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n\n      Binance.futuresMeta[symbol][interval].timestamp = last_time;\n    }\n  };\n  /**\r\n   * Used by delivery websockets chart cache\r\n   * @param {string} symbol - symbol to get candlestick info\r\n   * @param {string} interval - time interval, 1m, 3m, 5m ....\r\n   * @param {array} ticks - tick array\r\n   * @return {undefined}\r\n   */\n\n\n  var deliveryKlineData = function deliveryKlineData(symbol, interval, ticks) {\n    var last_time = 0;\n\n    if (isIterable(ticks)) {\n      var _iterator18 = _createForOfIteratorHelper(ticks),\n          _step18;\n\n      try {\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          var tick = _step18.value;\n\n          // eslint-disable-next-line no-unused-vars\n          var _tick3 = _slicedToArray(tick, 12),\n              time = _tick3[0],\n              open = _tick3[1],\n              high = _tick3[2],\n              low = _tick3[3],\n              close = _tick3[4],\n              volume = _tick3[5],\n              closeTime = _tick3[6],\n              quoteVolume = _tick3[7],\n              trades = _tick3[8],\n              takerBuyBaseVolume = _tick3[9],\n              takerBuyQuoteVolume = _tick3[10],\n              ignored = _tick3[11];\n\n          Binance.deliveryTicks[symbol][interval][time] = {\n            time: time,\n            closeTime: closeTime,\n            open: open,\n            high: high,\n            low: low,\n            close: close,\n            volume: volume,\n            quoteVolume: quoteVolume,\n            takerBuyBaseVolume: takerBuyBaseVolume,\n            takerBuyQuoteVolume: takerBuyQuoteVolume,\n            trades: trades\n          };\n          last_time = time;\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n\n      Binance.deliveryMeta[symbol][interval].timestamp = last_time;\n    }\n  };\n  /**\r\n   * Used for /depth endpoint\r\n   * @param {object} data - containing the bids and asks\r\n   * @return {undefined}\r\n   */\n\n\n  var depthData = function depthData(data) {\n    if (!data) return {\n      bids: [],\n      asks: []\n    };\n    var bids = {},\n        asks = {},\n        obj;\n\n    if (typeof data.bids !== 'undefined') {\n      var _iterator19 = _createForOfIteratorHelper(data.bids),\n          _step19;\n\n      try {\n        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n          obj = _step19.value;\n          bids[obj[0]] = parseFloat(obj[1]);\n        }\n      } catch (err) {\n        _iterator19.e(err);\n      } finally {\n        _iterator19.f();\n      }\n    }\n\n    if (typeof data.asks !== 'undefined') {\n      var _iterator20 = _createForOfIteratorHelper(data.asks),\n          _step20;\n\n      try {\n        for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n          obj = _step20.value;\n          asks[obj[0]] = parseFloat(obj[1]);\n        }\n      } catch (err) {\n        _iterator20.e(err);\n      } finally {\n        _iterator20.f();\n      }\n    }\n\n    return {\n      lastUpdateId: data.lastUpdateId,\n      bids: bids,\n      asks: asks\n    };\n  };\n  /**\r\n   * Used for /depth endpoint\r\n   * @param {object} depth - information\r\n   * @return {undefined}\r\n   */\n\n\n  var depthHandler = function depthHandler(depth) {\n    var symbol = depth.s,\n        obj;\n    var context = Binance.depthCacheContext[symbol];\n\n    var updateDepthCache = function updateDepthCache() {\n      Binance.depthCache[symbol].eventTime = depth.E;\n\n      var _iterator21 = _createForOfIteratorHelper(depth.b),\n          _step21;\n\n      try {\n        for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n          obj = _step21.value;\n\n          //bids\n          if (obj[1] === '0.00000000') {\n            delete Binance.depthCache[symbol].bids[obj[0]];\n          } else {\n            Binance.depthCache[symbol].bids[obj[0]] = parseFloat(obj[1]);\n          }\n        }\n      } catch (err) {\n        _iterator21.e(err);\n      } finally {\n        _iterator21.f();\n      }\n\n      var _iterator22 = _createForOfIteratorHelper(depth.a),\n          _step22;\n\n      try {\n        for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n          obj = _step22.value;\n\n          //asks\n          if (obj[1] === '0.00000000') {\n            delete Binance.depthCache[symbol].asks[obj[0]];\n          } else {\n            Binance.depthCache[symbol].asks[obj[0]] = parseFloat(obj[1]);\n          }\n        }\n      } catch (err) {\n        _iterator22.e(err);\n      } finally {\n        _iterator22.f();\n      }\n\n      context.skipCount = 0;\n      context.lastEventUpdateId = depth.u;\n      context.lastEventUpdateTime = depth.E;\n    }; // This now conforms 100% to the Binance docs constraints on managing a local order book\n\n\n    if (context.lastEventUpdateId) {\n      var expectedUpdateId = context.lastEventUpdateId + 1;\n\n      if (depth.U <= expectedUpdateId) {\n        updateDepthCache();\n      } else {\n        var msg = 'depthHandler: [' + symbol + '] The depth cache is out of sync.';\n        msg += ' Symptom: Unexpected Update ID. Expected \"' + expectedUpdateId + '\", got \"' + depth.U + '\"';\n        if (Binance.options.verbose) Binance.options.log(msg);\n        throw new Error(msg);\n      }\n    } else if (depth.U > context.snapshotUpdateId + 1) {\n      /* In this case we have a gap between the data of the stream and the snapshot.\r\n       This is an out of sync error, and the connection must be torn down and reconnected. */\n      var _msg = 'depthHandler: [' + symbol + '] The depth cache is out of sync.';\n\n      _msg += ' Symptom: Gap between snapshot and first stream data.';\n      if (Binance.options.verbose) Binance.options.log(_msg);\n      throw new Error(_msg);\n    } else if (depth.u < context.snapshotUpdateId + 1) {\n      /* In this case we've received data that we've already had since the snapshot.\r\n       This isn't really an issue, and we can just update the cache again, or ignore it entirely. */\n      // do nothing\n    } else {\n      // This is our first legal update from the stream data\n      updateDepthCache();\n    }\n  };\n  /**\r\n   * Gets depth cache for given symbol\r\n   * @param {string} symbol - the symbol to fetch\r\n   * @return {object} - the depth cache object\r\n   */\n\n\n  var getDepthCache = function getDepthCache(symbol) {\n    if (typeof Binance.depthCache[symbol] === 'undefined') return {\n      bids: {},\n      asks: {}\n    };\n    return Binance.depthCache[symbol];\n  };\n  /**\r\n   * Calculate Buy/Sell volume from DepthCache\r\n   * @param {string} symbol - the symbol to fetch\r\n   * @return {object} - the depth volume cache object\r\n   */\n\n\n  var _depthVolume = function depthVolume(symbol) {\n    var cache = getDepthCache(symbol),\n        quantity,\n        price;\n    var bidbase = 0,\n        askbase = 0,\n        bidqty = 0,\n        askqty = 0;\n\n    for (price in cache.bids) {\n      quantity = cache.bids[price];\n      bidbase += parseFloat((quantity * parseFloat(price)).toFixed(8));\n      bidqty += quantity;\n    }\n\n    for (price in cache.asks) {\n      quantity = cache.asks[price];\n      askbase += parseFloat((quantity * parseFloat(price)).toFixed(8));\n      askqty += quantity;\n    }\n\n    return {\n      bids: bidbase,\n      asks: askbase,\n      bidQty: bidqty,\n      askQty: askqty\n    };\n  };\n  /**\r\n   * Checks whether or not an array contains any duplicate elements\r\n   * @param {array} array - the array to check\r\n   * @return {boolean} - true or false\r\n   */\n\n\n  var isArrayUnique = function isArrayUnique(array) {\n    return new Set(array).size === array.length;\n  };\n\n  return {\n    /**\r\n    * Gets depth cache for given symbol\r\n    * @param {symbol} symbol - get depch cache for this symbol\r\n    * @return {object} - object\r\n    */\n    depthCache: function depthCache(symbol) {\n      return getDepthCache(symbol);\n    },\n\n    /**\r\n    * Gets depth volume for given symbol\r\n    * @param {symbol} symbol - get depch volume for this symbol\r\n    * @return {object} - object\r\n    */\n    depthVolume: function depthVolume(symbol) {\n      return _depthVolume(symbol);\n    },\n\n    /**\r\n    * Count decimal places\r\n    * @param {float} float - get the price precision point\r\n    * @return {int} - number of place\r\n    */\n    getPrecision: function getPrecision(float) {\n      if (!float || Number.isInteger(float)) return 0;\n      return float.toString().split('.')[1].length || 0;\n    },\n\n    /**\r\n    * rounds number with given step\r\n    * @param {float} qty - quantity to round\r\n    * @param {float} stepSize - stepSize as specified by exchangeInfo\r\n    * @return {float} - number\r\n    */\n    roundStep: function roundStep(qty, stepSize) {\n      // Integers do not require rounding\n      if (Number.isInteger(qty)) return qty;\n      var qtyString = qty.toFixed(16);\n      var desiredDecimals = Math.max(stepSize.indexOf('1') - 1, 0);\n      var decimalIndex = qtyString.indexOf('.');\n      return parseFloat(qtyString.slice(0, decimalIndex + desiredDecimals + 1));\n    },\n\n    /**\r\n    * rounds price to required precision\r\n    * @param {float} price - price to round\r\n    * @param {float} tickSize - tickSize as specified by exchangeInfo\r\n    * @return {float} - number\r\n    */\n    roundTicks: function roundTicks(price, tickSize) {\n      var formatter = new Intl.NumberFormat('en-US', {\n        style: 'decimal',\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 8\n      });\n      var precision = formatter.format(tickSize).split('.')[1].length || 0;\n      if (typeof price === 'string') price = parseFloat(price);\n      return price.toFixed(precision);\n    },\n\n    /**\r\n    * Gets percentage of given numbers\r\n    * @param {float} min - the smaller number\r\n    * @param {float} max - the bigger number\r\n    * @param {int} width - percentage width\r\n    * @return {float} - percentage\r\n    */\n    percent: function percent(min, max) {\n      var width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;\n      return min * 0.01 / (max * 0.01) * width;\n    },\n\n    /**\r\n    * Gets the sum of an array of numbers\r\n    * @param {array} array - the number to add\r\n    * @return {float} - sum\r\n    */\n    sum: function sum(array) {\n      return array.reduce(function (a, b) {\n        return a + b;\n      }, 0);\n    },\n\n    /**\r\n    * Reverses the keys of an object\r\n    * @param {object} object - the object\r\n    * @return {object} - the object\r\n    */\n    reverse: function reverse(object) {\n      var range = Object.keys(object).reverse(),\n          output = {};\n\n      var _iterator23 = _createForOfIteratorHelper(range),\n          _step23;\n\n      try {\n        for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n          var price = _step23.value;\n          output[price] = object[price];\n        }\n      } catch (err) {\n        _iterator23.e(err);\n      } finally {\n        _iterator23.f();\n      }\n\n      return output;\n    },\n\n    /**\r\n    * Converts an object to an array\r\n    * @param {object} obj - the object\r\n    * @return {array} - the array\r\n    */\n    array: function array(obj) {\n      return Object.keys(obj).map(function (key) {\n        return [Number(key), obj[key]];\n      });\n    },\n\n    /**\r\n    * Sorts bids\r\n    * @param {string} symbol - the object\r\n    * @param {int} max - the max number of bids\r\n    * @param {string} baseValue - the object\r\n    * @return {object} - the object\r\n    */\n    sortBids: function sortBids(symbol) {\n      var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n      var baseValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var object = {},\n          count = 0,\n          cache;\n      if (typeof symbol === 'object') cache = symbol;else cache = getDepthCache(symbol).bids;\n      var sorted = Object.keys(cache).sort(function (a, b) {\n        return parseFloat(b) - parseFloat(a);\n      });\n      var cumulative = 0;\n\n      var _iterator24 = _createForOfIteratorHelper(sorted),\n          _step24;\n\n      try {\n        for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n          var price = _step24.value;\n          if (!baseValue) object[price] = cache[price];else if (baseValue === 'cumulative') {\n            cumulative += cache[price];\n            object[price] = cumulative;\n          } else object[price] = parseFloat((cache[price] * parseFloat(price)).toFixed(8));\n          if (++count >= max) break;\n        }\n      } catch (err) {\n        _iterator24.e(err);\n      } finally {\n        _iterator24.f();\n      }\n\n      return object;\n    },\n\n    /**\r\n    * Sorts asks\r\n    * @param {string} symbol - the object\r\n    * @param {int} max - the max number of bids\r\n    * @param {string} baseValue - the object\r\n    * @return {object} - the object\r\n    */\n    sortAsks: function sortAsks(symbol) {\n      var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n      var baseValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var object = {},\n          count = 0,\n          cache;\n      if (typeof symbol === 'object') cache = symbol;else cache = getDepthCache(symbol).asks;\n      var sorted = Object.keys(cache).sort(function (a, b) {\n        return parseFloat(a) - parseFloat(b);\n      });\n      var cumulative = 0;\n\n      var _iterator25 = _createForOfIteratorHelper(sorted),\n          _step25;\n\n      try {\n        for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n          var price = _step25.value;\n          if (!baseValue) object[price] = cache[price];else if (baseValue === 'cumulative') {\n            cumulative += cache[price];\n            object[price] = cumulative;\n          } else object[price] = parseFloat((cache[price] * parseFloat(price)).toFixed(8));\n          if (++count >= max) break;\n        }\n      } catch (err) {\n        _iterator25.e(err);\n      } finally {\n        _iterator25.f();\n      }\n\n      return object;\n    },\n\n    /**\r\n    * Returns the first property of an object\r\n    * @param {object} object - the object to get the first member\r\n    * @return {string} - the object key\r\n    */\n    first: function first(object) {\n      return Object.keys(object).shift();\n    },\n\n    /**\r\n    * Returns the last property of an object\r\n    * @param {object} object - the object to get the first member\r\n    * @return {string} - the object key\r\n    */\n    last: function last(object) {\n      return Object.keys(object).pop();\n    },\n\n    /**\r\n    * Returns an array of properties starting at start\r\n    * @param {object} object - the object to get the properties form\r\n    * @param {int} start - the starting index\r\n    * @return {array} - the array of entires\r\n    */\n    slice: function slice(object) {\n      var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return Object.keys(object).slice(start);\n    },\n\n    /**\r\n    * Gets the minimum key form object\r\n    * @param {object} object - the object to get the properties form\r\n    * @return {string} - the minimum key\r\n    */\n    min: function min(object) {\n      return Math.min.apply(Math, Object.keys(object));\n    },\n\n    /**\r\n    * Gets the maximum key form object\r\n    * @param {object} object - the object to get the properties form\r\n    * @return {string} - the minimum key\r\n    */\n    max: function max(object) {\n      return Math.max.apply(Math, Object.keys(object));\n    },\n\n    /**\r\n    * Sets an option given a key and value\r\n    * @param {string} key - the key to set\r\n    * @param {object} value - the value of the key\r\n    * @return {undefined}\r\n    */\n    setOption: function setOption(key, value) {\n      Binance.options[key] = value;\n    },\n\n    /**\r\n    * Gets an option given a key\r\n    * @param {string} key - the key to set\r\n    * @return {undefined}\r\n    */\n    getOption: function getOption(key) {\n      return Binance.options[key];\n    },\n\n    /**\r\n    * Returns the entire info object\r\n    * @return {object} - the info object\r\n    */\n    getInfo: function getInfo() {\n      return Binance.info;\n    },\n\n    /**\r\n    * Returns the used weight from the last request\r\n    * @return {object} - 1m weight used\r\n    */\n    usedWeight: function usedWeight() {\n      return Binance.info.usedWeight;\n    },\n\n    /**\r\n    * Returns the status code from the last http response\r\n    * @return {object} - status code\r\n    */\n    statusCode: function statusCode() {\n      return Binance.info.statusCode;\n    },\n\n    /**\r\n    * Returns the ping time from the last futures request\r\n    * @return {object} - latency/ping (2ms)\r\n    */\n    futuresLatency: function futuresLatency() {\n      return Binance.info.futuresLatency;\n    },\n\n    /**\r\n    * Returns the complete URL from the last request\r\n    * @return {object} - http address including query string\r\n    */\n    lastURL: function lastURL() {\n      return Binance.info.lastURL;\n    },\n\n    /**\r\n    * Returns the order count from the last request\r\n    * @return {object} - orders allowed per 1m\r\n    */\n    orderCount: function orderCount() {\n      return Binance.info.orderCount1m;\n    },\n\n    /**\r\n    * Returns the entire options object\r\n    * @return {object} - the options object\r\n    */\n    getOptions: function getOptions() {\n      return Binance.options;\n    },\n\n    /**\r\n    * Gets an option given a key\r\n    * @param {object} opt - the object with the class configuration\r\n    * @param {function} callback - the callback function\r\n    * @return {undefined}\r\n    */\n    options: setOptions,\n\n    /**\r\n    * Creates an order\r\n    * @param {string} side - BUY or SELL\r\n    * @param {string} symbol - the symbol to buy\r\n    * @param {numeric} quantity - the quantity required\r\n    * @param {numeric} price - the price to pay for each unit\r\n    * @param {object} flags - aadditionalbuy order flags\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    order: function order(side, symbol, quantity, price) {\n      var flags = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n      var callback = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _order(side, symbol, quantity, price, flags, callback);\n        });\n      } else {\n        _order(side, symbol, quantity, price, flags, callback);\n      }\n    },\n\n    /**\r\n    * Creates a buy order\r\n    * @param {string} symbol - the symbol to buy\r\n    * @param {numeric} quantity - the quantity required\r\n    * @param {numeric} price - the price to pay for each unit\r\n    * @param {object} flags - additional buy order flags\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    buy: function buy(symbol, quantity, price) {\n      var flags = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var callback = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _order('BUY', symbol, quantity, price, flags, callback);\n        });\n      } else {\n        _order('BUY', symbol, quantity, price, flags, callback);\n      }\n    },\n\n    /**\r\n    * Creates a sell order\r\n    * @param {string} symbol - the symbol to sell\r\n    * @param {numeric} quantity - the quantity required\r\n    * @param {numeric} price - the price to sell each unit for\r\n    * @param {object} flags - additional order flags\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    sell: function sell(symbol, quantity, price) {\n      var flags = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var callback = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _order('SELL', symbol, quantity, price, flags, callback);\n        });\n      } else {\n        _order('SELL', symbol, quantity, price, flags, callback);\n      }\n    },\n\n    /**\r\n    * Creates a market buy order\r\n    * @param {string} symbol - the symbol to buy\r\n    * @param {numeric} quantity - the quantity required\r\n    * @param {object} flags - additional buy order flags\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    marketBuy: function marketBuy(symbol, quantity) {\n      var flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        type: 'MARKET'\n      };\n      var callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (typeof flags === 'function') {\n        // Accept callback as third parameter\n        callback = flags;\n        flags = {\n          type: 'MARKET'\n        };\n      }\n\n      if (typeof flags.type === 'undefined') flags.type = 'MARKET';\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _order('BUY', symbol, quantity, 0, flags, callback);\n        });\n      } else {\n        _order('BUY', symbol, quantity, 0, flags, callback);\n      }\n    },\n\n    /**\r\n    * Creates a market sell order\r\n    * @param {string} symbol - the symbol to sell\r\n    * @param {numeric} quantity - the quantity required\r\n    * @param {object} flags - additional sell order flags\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    marketSell: function marketSell(symbol, quantity) {\n      var flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        type: 'MARKET'\n      };\n      var callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (typeof flags === 'function') {\n        // Accept callback as third parameter\n        callback = flags;\n        flags = {\n          type: 'MARKET'\n        };\n      }\n\n      if (typeof flags.type === 'undefined') flags.type = 'MARKET';\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _order('SELL', symbol, quantity, 0, flags, callback);\n        });\n      } else {\n        _order('SELL', symbol, quantity, 0, flags, callback);\n      }\n    },\n\n    /**\r\n    * Cancels an order\r\n    * @param {string} symbol - the symbol to cancel\r\n    * @param {string} orderid - the orderid to cancel\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    cancel: function cancel(symbol, orderid) {\n      var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _signedRequest(base + 'v3/order', {\n            symbol: symbol,\n            orderId: orderid\n          }, function (error, data) {\n            return callback.call(this, error, data, symbol);\n          }, 'DELETE');\n        });\n      } else {\n        _signedRequest(base + 'v3/order', {\n          symbol: symbol,\n          orderId: orderid\n        }, function (error, data) {\n          return callback.call(this, error, data, symbol);\n        }, 'DELETE');\n      }\n    },\n\n    /**\r\n    * Gets the status of an order\r\n    * @param {string} symbol - the symbol to check\r\n    * @param {string} orderid - the orderid to check\r\n    * @param {function} callback - the callback function\r\n    * @param {object} flags - any additional flags\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    orderStatus: function orderStatus(symbol, orderid, callback) {\n      var flags = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var parameters = Object.assign({\n        symbol: symbol,\n        orderId: orderid\n      }, flags);\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _signedRequest(base + 'v3/order', parameters, function (error, data) {\n            return callback.call(this, error, data, symbol);\n          });\n        });\n      } else {\n        _signedRequest(base + 'v3/order', parameters, function (error, data) {\n          return callback.call(this, error, data, symbol);\n        });\n      }\n    },\n\n    /**\r\n    * Gets open orders\r\n    * @param {string} symbol - the symbol to get\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    openOrders: function openOrders(symbol, callback) {\n      var parameters = symbol ? {\n        symbol: symbol\n      } : {};\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _signedRequest(base + 'v3/openOrders', parameters, function (error, data) {\n            return callback.call(this, error, data, symbol);\n          });\n        });\n      } else {\n        _signedRequest(base + 'v3/openOrders', parameters, function (error, data) {\n          return callback.call(this, error, data, symbol);\n        });\n      }\n    },\n\n    /**\r\n    * Cancels all orders of a given symbol\r\n    * @param {string} symbol - the symbol to cancel all orders for\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    cancelAll: function cancelAll(symbol) {\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _signedRequest(base + 'v3/openOrders', {\n            symbol: symbol\n          }, callback, 'DELETE');\n        });\n      } else {\n        _signedRequest(base + 'v3/openOrders', {\n          symbol: symbol\n        }, callback, 'DELETE');\n      }\n    },\n\n    /**\r\n    * Cancels all orders of a given symbol\r\n    * @param {string} symbol - the symbol to cancel all orders for\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    cancelOrders: function cancelOrders(symbol) {\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _signedRequest(base + 'v3/openOrders', {\n            symbol: symbol\n          }, function (error, json) {\n            if (json.length === 0) {\n              return callback.call(this, 'No orders present for this symbol', {}, symbol);\n            }\n\n            var _iterator26 = _createForOfIteratorHelper(json),\n                _step26;\n\n            try {\n              for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n                var obj = _step26.value;\n                var quantity = obj.origQty - obj.executedQty;\n                Binance.options.log('cancel order: ' + obj.side + ' ' + symbol + ' ' + quantity + ' @ ' + obj.price + ' #' + obj.orderId);\n\n                _signedRequest(base + 'v3/order', {\n                  symbol: symbol,\n                  orderId: obj.orderId\n                }, function (error, data) {\n                  return callback.call(this, error, data, symbol);\n                }, 'DELETE');\n              }\n            } catch (err) {\n              _iterator26.e(err);\n            } finally {\n              _iterator26.f();\n            }\n          });\n        });\n      } else {\n        _signedRequest(base + 'v3/openOrders', {\n          symbol: symbol\n        }, function (error, json) {\n          if (json.length === 0) {\n            return callback.call(this, 'No orders present for this symbol', {}, symbol);\n          }\n\n          var _iterator27 = _createForOfIteratorHelper(json),\n              _step27;\n\n          try {\n            for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n              var obj = _step27.value;\n              var quantity = obj.origQty - obj.executedQty;\n              Binance.options.log('cancel order: ' + obj.side + ' ' + symbol + ' ' + quantity + ' @ ' + obj.price + ' #' + obj.orderId);\n\n              _signedRequest(base + 'v3/order', {\n                symbol: symbol,\n                orderId: obj.orderId\n              }, function (error, data) {\n                return callback.call(this, error, data, symbol);\n              }, 'DELETE');\n            }\n          } catch (err) {\n            _iterator27.e(err);\n          } finally {\n            _iterator27.f();\n          }\n        });\n      }\n    },\n\n    /**\r\n    * Gets all order of a given symbol\r\n    * @param {string} symbol - the symbol\r\n    * @param {function} callback - the callback function (can also accept options)\r\n    * @param {object} options - additional options\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    allOrders: function allOrders(symbol, callback) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var parameters = Object.assign({\n        symbol: symbol\n      }, options);\n\n      if (typeof callback == 'object') {\n        // Allow second parameter to be options\n        options = callback;\n        callback = false;\n      }\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _signedRequest(base + 'v3/allOrders', parameters, function (error, data) {\n            return callback.call(this, error, data, symbol);\n          });\n        });\n      } else {\n        _signedRequest(base + 'v3/allOrders', parameters, function (error, data) {\n          return callback.call(this, error, data, symbol);\n        });\n      }\n    },\n\n    /**\r\n    * Gets the depth information for a given symbol\r\n    * @param {string} symbol - the symbol\r\n    * @param {function} callback - the callback function\r\n    * @param {int} limit - limit the number of returned orders\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    depth: function depth(symbol, callback) {\n      var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _publicRequest(base + 'v3/depth', {\n            symbol: symbol,\n            limit: limit\n          }, function (error, data) {\n            return callback.call(this, error, depthData(data), symbol);\n          });\n        });\n      } else {\n        _publicRequest(base + 'v3/depth', {\n          symbol: symbol,\n          limit: limit\n        }, function (error, data) {\n          return callback.call(this, error, depthData(data), symbol);\n        });\n      }\n    },\n\n    /**\r\n    * Gets the average prices of a given symbol\r\n    * @param {string} symbol - the symbol\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    avgPrice: function avgPrice(symbol) {\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var opt = {\n        url: base + 'v3/avgPrice?symbol=' + symbol,\n        timeout: Binance.options.recvWindow\n      };\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          request(addProxy(opt), function (error, response, body) {\n            if (error) return reject(error);\n            if (response.statusCode !== 200) return reject(response);\n            var result = {};\n            result[symbol] = JSON.parse(response.body).price;\n            return resolve(result);\n          }).on('error', reject);\n        });\n      }\n\n      request(addProxy(opt), function (error, response, body) {\n        if (error) return callback(error);\n        if (response.statusCode !== 200) return callback(response);\n        var result = {};\n        result[symbol] = JSON.parse(response.body).price;\n        return callback(null, result);\n      }).on('error', callback);\n    },\n\n    /**\r\n    * Gets the prices of a given symbol(s)\r\n    * @param {string} symbol - the symbol\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    prices: function prices(symbol) {\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var params = typeof symbol === 'string' ? '?symbol=' + symbol : '';\n      if (typeof symbol === 'function') callback = symbol; // backwards compatibility\n\n      var opt = {\n        url: base + 'v3/ticker/price' + params,\n        timeout: Binance.options.recvWindow\n      };\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          request(addProxy(opt), function (error, response, body) {\n            if (error) return reject(error);\n            if (response.statusCode !== 200) return reject(response);\n            return resolve(priceData(JSON.parse(body)));\n          }).on('error', reject);\n        });\n      }\n\n      request(addProxy(opt), function (error, response, body) {\n        if (error) return callback(error);\n        if (response.statusCode !== 200) return callback(response);\n        return callback(null, priceData(JSON.parse(body)));\n      }).on('error', callback);\n    },\n\n    /**\r\n    * Gets the book tickers of given symbol(s)\r\n    * @param {string} symbol - the symbol\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    bookTickers: function bookTickers(symbol, callback) {\n      var params = typeof symbol === 'string' ? '?symbol=' + symbol : '';\n      if (typeof symbol === 'function') callback = symbol; // backwards compatibility\n\n      var opt = {\n        url: base + 'v3/ticker/bookTicker' + params,\n        timeout: Binance.options.recvWindow\n      };\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          request(addProxy(opt), function (error, response, body) {\n            if (error) return reject(error);\n            if (response.statusCode !== 200) return reject(response);\n            var result = symbol ? JSON.parse(body) : bookPriceData(JSON.parse(body));\n            return resolve(result);\n          }).on('error', reject);\n        });\n      }\n\n      request(addProxy(opt), function (error, response, body) {\n        if (error) return callback(error);\n        if (response.statusCode !== 200) return callback(response);\n        var result = symbol ? JSON.parse(body) : bookPriceData(JSON.parse(body));\n        return callback(null, result);\n      }).on('error', callback);\n    },\n\n    /**\r\n    * Gets the prevday percentage change\r\n    * @param {string} symbol - the symbol or symbols\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    prevDay: function prevDay(symbol, callback) {\n      var _this = this;\n\n      var input = symbol ? {\n        symbol: symbol\n      } : {};\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _publicRequest(base + 'v3/ticker/24hr', input, function (error, data) {\n            return callback.call(_this, error, data, symbol);\n          });\n        });\n      } else {\n        _publicRequest(base + 'v3/ticker/24hr', input, function (error, data) {\n          return callback.call(_this, error, data, symbol);\n        });\n      }\n    },\n\n    /**\r\n    * Gets the the exchange info\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    exchangeInfo: function exchangeInfo(callback) {\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _publicRequest(base + 'v3/exchangeInfo', {}, callback);\n        });\n      } else {\n        _publicRequest(base + 'v3/exchangeInfo', {}, callback);\n      }\n    },\n\n    /**\r\n    * Gets the dust log for user\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    dustLog: function dustLog(callback) {\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _signedRequest(wapi + '/v3/userAssetDribbletLog.html', {}, callback);\n        });\n      } else {\n        _signedRequest(wapi + '/v3/userAssetDribbletLog.html', {}, callback);\n      }\n    },\n    dustTransfer: function dustTransfer(assets, callback) {\n      _signedRequest(sapi + 'v1/asset/dust', {\n        asset: assets\n      }, callback, 'POST');\n    },\n    assetDividendRecord: function assetDividendRecord(callback) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _signedRequest(sapi + 'v1/asset/assetDividend', params, callback);\n    },\n\n    /**\r\n    * Gets the the system status\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    systemStatus: function systemStatus(callback) {\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _publicRequest(wapi + 'v3/systemStatus.html', {}, callback);\n        });\n      } else {\n        _publicRequest(wapi + 'v3/systemStatus.html', {}, callback);\n      }\n    },\n\n    /**\r\n    * Withdraws asset to given wallet id\r\n    * @param {string} asset - the asset symbol\r\n    * @param {string} address - the wallet to transfer it to\r\n    * @param {number} amount - the amount to transfer\r\n    * @param {string} addressTag - and addtional address tag\r\n    * @param {function} callback - the callback function\r\n    * @param {string} name - the name to save the address as. Set falsy to prevent Binance saving to address book\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    withdraw: function withdraw(asset, address, amount) {\n      var addressTag = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var callback = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var name = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n      var params = {\n        asset: asset,\n        address: address,\n        amount: amount\n      };\n      if (name) params.name = name;\n      if (addressTag) params.addressTag = addressTag;\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _signedRequest(wapi + 'v3/withdraw.html', params, callback, 'POST');\n        });\n      } else {\n        _signedRequest(wapi + 'v3/withdraw.html', params, callback, 'POST');\n      }\n    },\n\n    /**\r\n    * Get the Withdraws history for a given asset\r\n    * @param {function} callback - the callback function\r\n    * @param {object} params - supports limit and fromId parameters\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    withdrawHistory: function withdrawHistory(callback) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (typeof params === 'string') params = {\n        asset: params\n      };\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _signedRequest(wapi + 'v3/withdrawHistory.html', params, callback);\n        });\n      } else {\n        _signedRequest(wapi + 'v3/withdrawHistory.html', params, callback);\n      }\n    },\n\n    /**\r\n    * Get the deposit history\r\n    * @param {function} callback - the callback function\r\n    * @param {object} params - additional params\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    depositHistory: function depositHistory(callback) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (typeof params === 'string') params = {\n        asset: params\n      }; // Support 'asset' (string) or optional parameters (object)\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _signedRequest(wapi + 'v3/depositHistory.html', params, callback);\n        });\n      } else {\n        _signedRequest(wapi + 'v3/depositHistory.html', params, callback);\n      }\n    },\n\n    /**\r\n    * Get the deposit history for given asset\r\n    * @param {string} asset - the asset\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    depositAddress: function depositAddress(asset, callback) {\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _signedRequest(wapi + 'v3/depositAddress.html', {\n            asset: asset\n          }, callback);\n        });\n      } else {\n        _signedRequest(wapi + 'v3/depositAddress.html', {\n          asset: asset\n        }, callback);\n      }\n    },\n\n    /**\r\n    * Get the account status\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    accountStatus: function accountStatus(callback) {\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _signedRequest(wapi + 'v3/accountStatus.html', {}, callback);\n        });\n      } else {\n        _signedRequest(wapi + 'v3/accountStatus.html', {}, callback);\n      }\n    },\n\n    /**\r\n    * Get the trade fee\r\n    * @param {function} callback - the callback function\r\n    * @param {string} symbol (optional)\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    tradeFee: function tradeFee(callback) {\n      var symbol = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var params = symbol ? {\n        symbol: symbol\n      } : {};\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _signedRequest(wapi + 'v3/tradeFee.html', params, callback);\n        });\n      } else {\n        _signedRequest(wapi + 'v3/tradeFee.html', params, callback);\n      }\n    },\n\n    /**\r\n    * Fetch asset detail (minWithdrawAmount, depositStatus, withdrawFee, withdrawStatus, depositTip)\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    assetDetail: function assetDetail(callback) {\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _signedRequest(wapi + 'v3/assetDetail.html', {}, callback);\n        });\n      } else {\n        _signedRequest(wapi + 'v3/assetDetail.html', {}, callback);\n      }\n    },\n\n    /**\r\n    * Get the account\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    account: function account(callback) {\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _signedRequest(base + 'v3/account', {}, callback);\n        });\n      } else {\n        _signedRequest(base + 'v3/account', {}, callback);\n      }\n    },\n\n    /**\r\n    * Get the balance data\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    balance: function balance(callback) {\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _signedRequest(base + 'v3/account', {}, function (error, data) {\n            callback(error, balanceData(data));\n          });\n        });\n      } else {\n        _signedRequest(base + 'v3/account', {}, function (error, data) {\n          callback(error, balanceData(data));\n        });\n      }\n    },\n\n    /**\r\n    * Get trades for a given symbol\r\n    * @param {string} symbol - the symbol\r\n    * @param {function} callback - the callback function\r\n    * @param {object} options - additional options\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    trades: function trades(symbol, callback) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var parameters = Object.assign({\n        symbol: symbol\n      }, options);\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _signedRequest(base + 'v3/myTrades', parameters, function (error, data) {\n            return callback.call(this, error, data, symbol);\n          });\n        });\n      } else {\n        _signedRequest(base + 'v3/myTrades', parameters, function (error, data) {\n          return callback.call(this, error, data, symbol);\n        });\n      }\n    },\n\n    /**\r\n    * Tell api to use the server time to offset time indexes\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    useServerTime: function useServerTime() {\n      var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _publicRequest(base + 'v3/time', {}, function (error, response) {\n            if (!error) {\n              Binance.info.timeOffset = response.serverTime - new Date().getTime(); //Binance.options.log(\"server time set: \", response.serverTime, Binance.info.timeOffset);\n            }\n\n            callback(error, response);\n          });\n        });\n      } else {\n        _publicRequest(base + 'v3/time', {}, function (error, response) {\n          if (!error) {\n            Binance.info.timeOffset = response.serverTime - new Date().getTime(); //Binance.options.log(\"server time set: \", response.serverTime, Binance.info.timeOffset);\n          }\n\n          callback(error, response);\n        });\n      }\n    },\n\n    /**\r\n    * Get Binance server time\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    time: function time(callback) {\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _publicRequest(base + 'v3/time', {}, callback);\n        });\n      } else {\n        _publicRequest(base + 'v3/time', {}, callback);\n      }\n    },\n\n    /**\r\n    * Get agg trades for given symbol\r\n    * @param {string} symbol - the symbol\r\n    * @param {object} options - additional optoins\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    aggTrades: function aggTrades(symbol) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      //fromId startTime endTime limit\n      var parameters = Object.assign({\n        symbol: symbol\n      }, options);\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _publicRequest(base + 'v3/aggTrades', parameters, callback);\n        });\n      } else {\n        _publicRequest(base + 'v3/aggTrades', parameters, callback);\n      }\n    },\n\n    /**\r\n    * Get the recent trades\r\n    * @param {string} symbol - the symbol\r\n    * @param {function} callback - the callback function\r\n    * @param {int} limit - limit the number of items returned\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    recentTrades: function recentTrades(symbol, callback) {\n      var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 500;\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          marketRequest(base + 'v1/trades', {\n            symbol: symbol,\n            limit: limit\n          }, callback);\n        });\n      } else {\n        marketRequest(base + 'v1/trades', {\n          symbol: symbol,\n          limit: limit\n        }, callback);\n      }\n    },\n\n    /**\r\n    * Get the historical trade info\r\n    * @param {string} symbol - the symbol\r\n    * @param {function} callback - the callback function\r\n    * @param {int} limit - limit the number of items returned\r\n    * @param {int} fromId - from this id\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    historicalTrades: function historicalTrades(symbol, callback) {\n      var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 500;\n      var fromId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var parameters = {\n        symbol: symbol,\n        limit: limit\n      };\n      if (fromId) parameters.fromId = fromId;\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          marketRequest(base + 'v3/historicalTrades', parameters, callback);\n        });\n      } else {\n        marketRequest(base + 'v3/historicalTrades', parameters, callback);\n      }\n    },\n\n    /**\r\n    * Convert chart data to highstock array [timestamp,open,high,low,close]\r\n    * @param {object} chart - the chart\r\n    * @param {boolean} include_volume - to include the volume or not\r\n    * @return {array} - an array\r\n    */\n    highstock: function highstock(chart) {\n      var include_volume = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var array = [];\n\n      for (var timestamp in chart) {\n        var obj = chart[timestamp];\n        var line = [Number(timestamp), parseFloat(obj.open), parseFloat(obj.high), parseFloat(obj.low), parseFloat(obj.close)];\n        if (include_volume) line.push(parseFloat(obj.volume));\n        array.push(line);\n      }\n\n      return array;\n    },\n\n    /**\r\n    * Populates OHLC information\r\n    * @param {object} chart - the chart\r\n    * @return {object} - object with candle information\r\n    */\n    ohlc: function ohlc(chart) {\n      var open = [],\n          high = [],\n          low = [],\n          close = [],\n          volume = [];\n\n      for (var timestamp in chart) {\n        //Binance.ohlc[symbol][interval]\n        var obj = chart[timestamp];\n        open.push(parseFloat(obj.open));\n        high.push(parseFloat(obj.high));\n        low.push(parseFloat(obj.low));\n        close.push(parseFloat(obj.close));\n        volume.push(parseFloat(obj.volume));\n      }\n\n      return {\n        open: open,\n        high: high,\n        low: low,\n        close: close,\n        volume: volume\n      };\n    },\n\n    /**\r\n    * Gets the candles information for a given symbol\r\n    * intervals: 1m,3m,5m,15m,30m,1h,2h,4h,6h,8h,12h,1d,3d,1w,1M\r\n    * @param {string} symbol - the symbol\r\n    * @param {function} interval - the callback function\r\n    * @param {function} callback - the callback function\r\n    * @param {object} options - additional options\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    candlesticks: function candlesticks(symbol) {\n      var interval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '5m';\n      var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n        limit: 500\n      };\n      var params = Object.assign({\n        symbol: symbol,\n        interval: interval\n      }, options);\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _publicRequest(base + 'v3/klines', params, function (error, data) {\n            return callback.call(this, error, data, symbol);\n          });\n        });\n      } else {\n        _publicRequest(base + 'v3/klines', params, function (error, data) {\n          return callback.call(this, error, data, symbol);\n        });\n      }\n    },\n\n    /**\r\n    * Queries the public api\r\n    * @param {string} url - the public api endpoint\r\n    * @param {object} data - the data to send\r\n    * @param {function} callback - the callback function\r\n    * @param {string} method - the http method\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    publicRequest: function publicRequest(url, data, callback) {\n      var method = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'GET';\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _publicRequest(url, data, callback, method);\n        });\n      } else {\n        _publicRequest(url, data, callback, method);\n      }\n    },\n\n    /**\r\n     * Queries the futures API by default\r\n     * @param {string} url - the signed api endpoint\r\n     * @param {object} data - the data to send\r\n     * @param {object} flags - type of request, authentication method and endpoint url\r\n     */\n    promiseRequest: function promiseRequest(url) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return _promiseRequest(url, data, flags);\n    },\n\n    /**\r\n    * Queries the signed api\r\n    * @param {string} url - the signed api endpoint\r\n    * @param {object} data - the data to send\r\n    * @param {function} callback - the callback function\r\n    * @param {string} method - the http method\r\n    * @param {boolean} noDataInSignature - Prevents data from being added to signature\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    signedRequest: function signedRequest(url, data, callback) {\n      var method = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'GET';\n      var noDataInSignature = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _signedRequest(url, data, callback, method, noDataInSignature);\n        });\n      } else {\n        _signedRequest(url, data, callback, method, noDataInSignature);\n      }\n    },\n\n    /**\r\n    * Gets the market asset of given symbol\r\n    * @param {string} symbol - the public api endpoint\r\n    * @return {undefined}\r\n    */\n    getMarket: function getMarket(symbol) {\n      if (symbol.endsWith('BTC')) return 'BTC';else if (symbol.endsWith('ETH')) return 'ETH';else if (symbol.endsWith('BNB')) return 'BNB';else if (symbol.endsWith('XRP')) return 'XRP';else if (symbol.endsWith('PAX')) return 'PAX';else if (symbol.endsWith('USDT')) return 'USDT';else if (symbol.endsWith('USDC')) return 'USDC';else if (symbol.endsWith('USDS')) return 'USDS';else if (symbol.endsWith('TUSD')) return 'TUSD';\n    },\n\n    /**\r\n    * Get the account binance lending information\r\n    * @param {function} callback - the callback function\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    lending: function () {\n      var _lending = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var params,\n            _args4 = arguments;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                params = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : {};\n                return _context4.abrupt(\"return\", _promiseRequest('v1/lending/union/account', params, {\n                  base: sapi,\n                  type: 'SIGNED'\n                }));\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function lending() {\n        return _lending.apply(this, arguments);\n      }\n\n      return lending;\n    }(),\n    //** Futures methods */\n    futuresPing: function () {\n      var _futuresPing = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var params,\n            _args5 = arguments;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                params = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : {};\n                return _context5.abrupt(\"return\", _promiseRequest('v1/ping', params, {\n                  base: fapi\n                }));\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function futuresPing() {\n        return _futuresPing.apply(this, arguments);\n      }\n\n      return futuresPing;\n    }(),\n    futuresTime: function () {\n      var _futuresTime = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var params,\n            _args6 = arguments;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                params = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : {};\n                return _context6.abrupt(\"return\", _promiseRequest('v1/time', params, {\n                  base: fapi\n                }).then(function (r) {\n                  return r.serverTime;\n                }));\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function futuresTime() {\n        return _futuresTime.apply(this, arguments);\n      }\n\n      return futuresTime;\n    }(),\n    futuresExchangeInfo: function () {\n      var _futuresExchangeInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", _promiseRequest('v1/exchangeInfo', {}, {\n                  base: fapi\n                }));\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function futuresExchangeInfo() {\n        return _futuresExchangeInfo.apply(this, arguments);\n      }\n\n      return futuresExchangeInfo;\n    }(),\n    futuresPrices: function () {\n      var _futuresPrices = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var params,\n            data,\n            _args8 = arguments;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                params = _args8.length > 0 && _args8[0] !== undefined ? _args8[0] : {};\n                _context8.next = 3;\n                return _promiseRequest('v1/ticker/price', params, {\n                  base: fapi\n                });\n\n              case 3:\n                data = _context8.sent;\n                return _context8.abrupt(\"return\", data.reduce(function (out, i) {\n                  return out[i.symbol] = i.price, out;\n                }, {}));\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function futuresPrices() {\n        return _futuresPrices.apply(this, arguments);\n      }\n\n      return futuresPrices;\n    }(),\n    futuresDaily: function () {\n      var _futuresDaily = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var symbol,\n            params,\n            data,\n            _args9 = arguments;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                symbol = _args9.length > 0 && _args9[0] !== undefined ? _args9[0] : false;\n                params = _args9.length > 1 && _args9[1] !== undefined ? _args9[1] : {};\n                if (symbol) params.symbol = symbol;\n                _context9.next = 5;\n                return _promiseRequest('v1/ticker/24hr', params, {\n                  base: fapi\n                });\n\n              case 5:\n                data = _context9.sent;\n                return _context9.abrupt(\"return\", symbol ? data : data.reduce(function (out, i) {\n                  return out[i.symbol] = i, out;\n                }, {}));\n\n              case 7:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      function futuresDaily() {\n        return _futuresDaily.apply(this, arguments);\n      }\n\n      return futuresDaily;\n    }(),\n    futuresOpenInterest: function () {\n      var _futuresOpenInterest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(symbol) {\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                return _context10.abrupt(\"return\", _promiseRequest('v1/openInterest', {\n                  symbol: symbol\n                }, {\n                  base: fapi\n                }).then(function (r) {\n                  return r.openInterest;\n                }));\n\n              case 1:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      function futuresOpenInterest(_x8) {\n        return _futuresOpenInterest.apply(this, arguments);\n      }\n\n      return futuresOpenInterest;\n    }(),\n    futuresCandles: function () {\n      var _futuresCandles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(symbol) {\n        var interval,\n            params,\n            _args11 = arguments;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                interval = _args11.length > 1 && _args11[1] !== undefined ? _args11[1] : \"30m\";\n                params = _args11.length > 2 && _args11[2] !== undefined ? _args11[2] : {};\n                params.symbol = symbol;\n                params.interval = interval;\n                return _context11.abrupt(\"return\", _promiseRequest('v1/klines', params, {\n                  base: fapi\n                }));\n\n              case 5:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      function futuresCandles(_x9) {\n        return _futuresCandles.apply(this, arguments);\n      }\n\n      return futuresCandles;\n    }(),\n    futuresMarkPrice: function () {\n      var _futuresMarkPrice = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        var symbol,\n            _args12 = arguments;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                symbol = _args12.length > 0 && _args12[0] !== undefined ? _args12[0] : false;\n                return _context12.abrupt(\"return\", _promiseRequest('v1/premiumIndex', symbol ? {\n                  symbol: symbol\n                } : {}, {\n                  base: fapi\n                }));\n\n              case 2:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12);\n      }));\n\n      function futuresMarkPrice() {\n        return _futuresMarkPrice.apply(this, arguments);\n      }\n\n      return futuresMarkPrice;\n    }(),\n    futuresTrades: function () {\n      var _futuresTrades = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(symbol) {\n        var params,\n            _args13 = arguments;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                params = _args13.length > 1 && _args13[1] !== undefined ? _args13[1] : {};\n                params.symbol = symbol;\n                return _context13.abrupt(\"return\", _promiseRequest('v1/trades', params, {\n                  base: fapi\n                }));\n\n              case 3:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13);\n      }));\n\n      function futuresTrades(_x10) {\n        return _futuresTrades.apply(this, arguments);\n      }\n\n      return futuresTrades;\n    }(),\n    futuresHistoricalTrades: function () {\n      var _futuresHistoricalTrades = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(symbol) {\n        var params,\n            _args14 = arguments;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                params = _args14.length > 1 && _args14[1] !== undefined ? _args14[1] : {};\n                params.symbol = symbol;\n                return _context14.abrupt(\"return\", _promiseRequest('v1/historicalTrades', params, {\n                  base: fapi,\n                  type: 'MARKET_DATA'\n                }));\n\n              case 3:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14);\n      }));\n\n      function futuresHistoricalTrades(_x11) {\n        return _futuresHistoricalTrades.apply(this, arguments);\n      }\n\n      return futuresHistoricalTrades;\n    }(),\n    futuresAggTrades: function () {\n      var _futuresAggTrades = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(symbol) {\n        var params,\n            _args15 = arguments;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                params = _args15.length > 1 && _args15[1] !== undefined ? _args15[1] : {};\n                params.symbol = symbol;\n                return _context15.abrupt(\"return\", _promiseRequest('v1/aggTrades', params, {\n                  base: fapi\n                }));\n\n              case 3:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15);\n      }));\n\n      function futuresAggTrades(_x12) {\n        return _futuresAggTrades.apply(this, arguments);\n      }\n\n      return futuresAggTrades;\n    }(),\n    futuresForceOrders: function () {\n      var _futuresForceOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16() {\n        var params,\n            _args16 = arguments;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                params = _args16.length > 0 && _args16[0] !== undefined ? _args16[0] : {};\n                return _context16.abrupt(\"return\", _promiseRequest('v1/forceOrders', params, {\n                  base: fapi,\n                  type: 'SIGNED'\n                }));\n\n              case 2:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16);\n      }));\n\n      function futuresForceOrders() {\n        return _futuresForceOrders.apply(this, arguments);\n      }\n\n      return futuresForceOrders;\n    }(),\n    futuresDeleverageQuantile: function () {\n      var _futuresDeleverageQuantile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n        var params,\n            _args17 = arguments;\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                params = _args17.length > 0 && _args17[0] !== undefined ? _args17[0] : {};\n                return _context17.abrupt(\"return\", _promiseRequest('v1/adlQuantile', params, {\n                  base: fapi,\n                  type: 'SIGNED'\n                }));\n\n              case 2:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17);\n      }));\n\n      function futuresDeleverageQuantile() {\n        return _futuresDeleverageQuantile.apply(this, arguments);\n      }\n\n      return futuresDeleverageQuantile;\n    }(),\n    futuresUserTrades: function () {\n      var _futuresUserTrades = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(symbol) {\n        var params,\n            _args18 = arguments;\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                params = _args18.length > 1 && _args18[1] !== undefined ? _args18[1] : {};\n                params.symbol = symbol;\n                return _context18.abrupt(\"return\", _promiseRequest('v1/userTrades', params, {\n                  base: fapi,\n                  type: 'SIGNED'\n                }));\n\n              case 3:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18);\n      }));\n\n      function futuresUserTrades(_x13) {\n        return _futuresUserTrades.apply(this, arguments);\n      }\n\n      return futuresUserTrades;\n    }(),\n    futuresGetDataStream: function () {\n      var _futuresGetDataStream = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19() {\n        var params,\n            _args19 = arguments;\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                params = _args19.length > 0 && _args19[0] !== undefined ? _args19[0] : {};\n                return _context19.abrupt(\"return\", _promiseRequest('v1/listenKey', params, {\n                  base: fapi,\n                  type: 'SIGNED',\n                  method: 'POST'\n                }));\n\n              case 2:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19);\n      }));\n\n      function futuresGetDataStream() {\n        return _futuresGetDataStream.apply(this, arguments);\n      }\n\n      return futuresGetDataStream;\n    }(),\n    futuresKeepDataStream: function () {\n      var _futuresKeepDataStream = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20() {\n        var params,\n            _args20 = arguments;\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                params = _args20.length > 0 && _args20[0] !== undefined ? _args20[0] : {};\n                return _context20.abrupt(\"return\", _promiseRequest('v1/listenKey', params, {\n                  base: fapi,\n                  type: 'SIGNED',\n                  method: 'PUT'\n                }));\n\n              case 2:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20);\n      }));\n\n      function futuresKeepDataStream() {\n        return _futuresKeepDataStream.apply(this, arguments);\n      }\n\n      return futuresKeepDataStream;\n    }(),\n    futuresCloseDataStream: function () {\n      var _futuresCloseDataStream = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21() {\n        var params,\n            _args21 = arguments;\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                params = _args21.length > 0 && _args21[0] !== undefined ? _args21[0] : {};\n                return _context21.abrupt(\"return\", _promiseRequest('v1/listenKey', params, {\n                  base: fapi,\n                  type: 'SIGNED',\n                  method: 'DELETE'\n                }));\n\n              case 2:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21);\n      }));\n\n      function futuresCloseDataStream() {\n        return _futuresCloseDataStream.apply(this, arguments);\n      }\n\n      return futuresCloseDataStream;\n    }(),\n    futuresLiquidationOrders: function () {\n      var _futuresLiquidationOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22() {\n        var symbol,\n            params,\n            _args22 = arguments;\n        return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                symbol = _args22.length > 0 && _args22[0] !== undefined ? _args22[0] : false;\n                params = _args22.length > 1 && _args22[1] !== undefined ? _args22[1] : {};\n                if (symbol) params.symbol = symbol;\n                return _context22.abrupt(\"return\", _promiseRequest('v1/allForceOrders', params, {\n                  base: fapi\n                }));\n\n              case 4:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22);\n      }));\n\n      function futuresLiquidationOrders() {\n        return _futuresLiquidationOrders.apply(this, arguments);\n      }\n\n      return futuresLiquidationOrders;\n    }(),\n    futuresPositionRisk: function () {\n      var _futuresPositionRisk = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23() {\n        var params,\n            _args23 = arguments;\n        return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                params = _args23.length > 0 && _args23[0] !== undefined ? _args23[0] : {};\n                return _context23.abrupt(\"return\", _promiseRequest('v2/positionRisk', params, {\n                  base: fapi,\n                  type: 'SIGNED'\n                }));\n\n              case 2:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23);\n      }));\n\n      function futuresPositionRisk() {\n        return _futuresPositionRisk.apply(this, arguments);\n      }\n\n      return futuresPositionRisk;\n    }(),\n    futuresFundingRate: function () {\n      var _futuresFundingRate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24(symbol) {\n        var params,\n            _args24 = arguments;\n        return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                params = _args24.length > 1 && _args24[1] !== undefined ? _args24[1] : {};\n                params.symbol = symbol;\n                return _context24.abrupt(\"return\", _promiseRequest('v1/fundingRate', params, {\n                  base: fapi\n                }));\n\n              case 3:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24);\n      }));\n\n      function futuresFundingRate(_x14) {\n        return _futuresFundingRate.apply(this, arguments);\n      }\n\n      return futuresFundingRate;\n    }(),\n    futuresLeverageBracket: function () {\n      var _futuresLeverageBracket = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25() {\n        var symbol,\n            params,\n            _args25 = arguments;\n        return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                symbol = _args25.length > 0 && _args25[0] !== undefined ? _args25[0] : false;\n                params = _args25.length > 1 && _args25[1] !== undefined ? _args25[1] : {};\n                if (symbol) params.symbol = symbol;\n                return _context25.abrupt(\"return\", _promiseRequest('v1/leverageBracket', params, {\n                  base: fapi,\n                  type: 'USER_DATA'\n                }));\n\n              case 4:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25);\n      }));\n\n      function futuresLeverageBracket() {\n        return _futuresLeverageBracket.apply(this, arguments);\n      }\n\n      return futuresLeverageBracket;\n    }(),\n    futuresTradingStatus: function () {\n      var _futuresTradingStatus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee26() {\n        var symbol,\n            params,\n            _args26 = arguments;\n        return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                symbol = _args26.length > 0 && _args26[0] !== undefined ? _args26[0] : false;\n                params = _args26.length > 1 && _args26[1] !== undefined ? _args26[1] : {};\n                if (symbol) params.symbol = symbol;\n                return _context26.abrupt(\"return\", _promiseRequest('v1/apiTradingStatus', params, {\n                  base: fapi,\n                  type: 'USER_DATA'\n                }));\n\n              case 4:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26);\n      }));\n\n      function futuresTradingStatus() {\n        return _futuresTradingStatus.apply(this, arguments);\n      }\n\n      return futuresTradingStatus;\n    }(),\n    futuresCommissionRate: function () {\n      var _futuresCommissionRate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee27() {\n        var symbol,\n            params,\n            _args27 = arguments;\n        return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                symbol = _args27.length > 0 && _args27[0] !== undefined ? _args27[0] : false;\n                params = _args27.length > 1 && _args27[1] !== undefined ? _args27[1] : {};\n                if (symbol) params.symbol = symbol;\n                return _context27.abrupt(\"return\", _promiseRequest('v1/commissionRate', params, {\n                  base: fapi,\n                  type: 'USER_DATA'\n                }));\n\n              case 4:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27);\n      }));\n\n      function futuresCommissionRate() {\n        return _futuresCommissionRate.apply(this, arguments);\n      }\n\n      return futuresCommissionRate;\n    }(),\n    // leverage 1 to 125\n    futuresLeverage: function () {\n      var _futuresLeverage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee28(symbol, leverage) {\n        var params,\n            _args28 = arguments;\n        return _regeneratorRuntime.wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                params = _args28.length > 2 && _args28[2] !== undefined ? _args28[2] : {};\n                params.symbol = symbol;\n                params.leverage = leverage;\n                return _context28.abrupt(\"return\", _promiseRequest('v1/leverage', params, {\n                  base: fapi,\n                  method: 'POST',\n                  type: 'SIGNED'\n                }));\n\n              case 4:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28);\n      }));\n\n      function futuresLeverage(_x15, _x16) {\n        return _futuresLeverage.apply(this, arguments);\n      }\n\n      return futuresLeverage;\n    }(),\n    // ISOLATED, CROSSED\n    futuresMarginType: function () {\n      var _futuresMarginType = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee29(symbol, marginType) {\n        var params,\n            _args29 = arguments;\n        return _regeneratorRuntime.wrap(function _callee29$(_context29) {\n          while (1) {\n            switch (_context29.prev = _context29.next) {\n              case 0:\n                params = _args29.length > 2 && _args29[2] !== undefined ? _args29[2] : {};\n                params.symbol = symbol;\n                params.marginType = marginType;\n                return _context29.abrupt(\"return\", _promiseRequest('v1/marginType', params, {\n                  base: fapi,\n                  method: 'POST',\n                  type: 'SIGNED'\n                }));\n\n              case 4:\n              case \"end\":\n                return _context29.stop();\n            }\n          }\n        }, _callee29);\n      }));\n\n      function futuresMarginType(_x17, _x18) {\n        return _futuresMarginType.apply(this, arguments);\n      }\n\n      return futuresMarginType;\n    }(),\n    // type: 1: Add postion margin，2: Reduce postion margin\n    futuresPositionMargin: function () {\n      var _futuresPositionMargin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee30(symbol, amount) {\n        var type,\n            params,\n            _args30 = arguments;\n        return _regeneratorRuntime.wrap(function _callee30$(_context30) {\n          while (1) {\n            switch (_context30.prev = _context30.next) {\n              case 0:\n                type = _args30.length > 2 && _args30[2] !== undefined ? _args30[2] : 1;\n                params = _args30.length > 3 && _args30[3] !== undefined ? _args30[3] : {};\n                params.symbol = symbol;\n                params.amount = amount;\n                params.type = type;\n                return _context30.abrupt(\"return\", _promiseRequest('v1/positionMargin', params, {\n                  base: fapi,\n                  method: 'POST',\n                  type: 'SIGNED'\n                }));\n\n              case 6:\n              case \"end\":\n                return _context30.stop();\n            }\n          }\n        }, _callee30);\n      }));\n\n      function futuresPositionMargin(_x19, _x20) {\n        return _futuresPositionMargin.apply(this, arguments);\n      }\n\n      return futuresPositionMargin;\n    }(),\n    futuresPositionMarginHistory: function () {\n      var _futuresPositionMarginHistory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee31(symbol) {\n        var params,\n            _args31 = arguments;\n        return _regeneratorRuntime.wrap(function _callee31$(_context31) {\n          while (1) {\n            switch (_context31.prev = _context31.next) {\n              case 0:\n                params = _args31.length > 1 && _args31[1] !== undefined ? _args31[1] : {};\n                params.symbol = symbol;\n                return _context31.abrupt(\"return\", _promiseRequest('v1/positionMargin/history', params, {\n                  base: fapi,\n                  type: 'SIGNED'\n                }));\n\n              case 3:\n              case \"end\":\n                return _context31.stop();\n            }\n          }\n        }, _callee31);\n      }));\n\n      function futuresPositionMarginHistory(_x21) {\n        return _futuresPositionMarginHistory.apply(this, arguments);\n      }\n\n      return futuresPositionMarginHistory;\n    }(),\n    futuresIncome: function () {\n      var _futuresIncome = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee32() {\n        var params,\n            _args32 = arguments;\n        return _regeneratorRuntime.wrap(function _callee32$(_context32) {\n          while (1) {\n            switch (_context32.prev = _context32.next) {\n              case 0:\n                params = _args32.length > 0 && _args32[0] !== undefined ? _args32[0] : {};\n                return _context32.abrupt(\"return\", _promiseRequest('v1/income', params, {\n                  base: fapi,\n                  type: 'SIGNED'\n                }));\n\n              case 2:\n              case \"end\":\n                return _context32.stop();\n            }\n          }\n        }, _callee32);\n      }));\n\n      function futuresIncome() {\n        return _futuresIncome.apply(this, arguments);\n      }\n\n      return futuresIncome;\n    }(),\n    futuresBalance: function () {\n      var _futuresBalance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee33() {\n        var params,\n            _args33 = arguments;\n        return _regeneratorRuntime.wrap(function _callee33$(_context33) {\n          while (1) {\n            switch (_context33.prev = _context33.next) {\n              case 0:\n                params = _args33.length > 0 && _args33[0] !== undefined ? _args33[0] : {};\n                return _context33.abrupt(\"return\", _promiseRequest('v2/balance', params, {\n                  base: fapi,\n                  type: 'SIGNED'\n                }));\n\n              case 2:\n              case \"end\":\n                return _context33.stop();\n            }\n          }\n        }, _callee33);\n      }));\n\n      function futuresBalance() {\n        return _futuresBalance.apply(this, arguments);\n      }\n\n      return futuresBalance;\n    }(),\n    futuresAccount: function () {\n      var _futuresAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee34() {\n        var params,\n            _args34 = arguments;\n        return _regeneratorRuntime.wrap(function _callee34$(_context34) {\n          while (1) {\n            switch (_context34.prev = _context34.next) {\n              case 0:\n                params = _args34.length > 0 && _args34[0] !== undefined ? _args34[0] : {};\n                return _context34.abrupt(\"return\", _promiseRequest('v2/account', params, {\n                  base: fapi,\n                  type: 'SIGNED'\n                }));\n\n              case 2:\n              case \"end\":\n                return _context34.stop();\n            }\n          }\n        }, _callee34);\n      }));\n\n      function futuresAccount() {\n        return _futuresAccount.apply(this, arguments);\n      }\n\n      return futuresAccount;\n    }(),\n    futuresDepth: function () {\n      var _futuresDepth = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee35(symbol) {\n        var params,\n            _args35 = arguments;\n        return _regeneratorRuntime.wrap(function _callee35$(_context35) {\n          while (1) {\n            switch (_context35.prev = _context35.next) {\n              case 0:\n                params = _args35.length > 1 && _args35[1] !== undefined ? _args35[1] : {};\n                params.symbol = symbol;\n                return _context35.abrupt(\"return\", _promiseRequest('v1/depth', params, {\n                  base: fapi\n                }));\n\n              case 3:\n              case \"end\":\n                return _context35.stop();\n            }\n          }\n        }, _callee35);\n      }));\n\n      function futuresDepth(_x22) {\n        return _futuresDepth.apply(this, arguments);\n      }\n\n      return futuresDepth;\n    }(),\n    futuresQuote: function () {\n      var _futuresQuote = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee36() {\n        var symbol,\n            params,\n            data,\n            _args36 = arguments;\n        return _regeneratorRuntime.wrap(function _callee36$(_context36) {\n          while (1) {\n            switch (_context36.prev = _context36.next) {\n              case 0:\n                symbol = _args36.length > 0 && _args36[0] !== undefined ? _args36[0] : false;\n                params = _args36.length > 1 && _args36[1] !== undefined ? _args36[1] : {};\n                if (symbol) params.symbol = symbol; //let data = await promiseRequest( 'v1/ticker/bookTicker', params, {base:fapi} );\n                //return data.reduce((out, i) => ((out[i.symbol] = i), out), {}),\n\n                _context36.next = 5;\n                return _promiseRequest('v1/ticker/bookTicker', params, {\n                  base: fapi\n                });\n\n              case 5:\n                data = _context36.sent;\n                return _context36.abrupt(\"return\", symbol ? data : data.reduce(function (out, i) {\n                  return out[i.symbol] = i, out;\n                }, {}));\n\n              case 7:\n              case \"end\":\n                return _context36.stop();\n            }\n          }\n        }, _callee36);\n      }));\n\n      function futuresQuote() {\n        return _futuresQuote.apply(this, arguments);\n      }\n\n      return futuresQuote;\n    }(),\n    futuresBuy: function () {\n      var _futuresBuy = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee37(symbol, quantity, price) {\n        var params,\n            _args37 = arguments;\n        return _regeneratorRuntime.wrap(function _callee37$(_context37) {\n          while (1) {\n            switch (_context37.prev = _context37.next) {\n              case 0:\n                params = _args37.length > 3 && _args37[3] !== undefined ? _args37[3] : {};\n                return _context37.abrupt(\"return\", futuresOrder('BUY', symbol, quantity, price, params));\n\n              case 2:\n              case \"end\":\n                return _context37.stop();\n            }\n          }\n        }, _callee37);\n      }));\n\n      function futuresBuy(_x23, _x24, _x25) {\n        return _futuresBuy.apply(this, arguments);\n      }\n\n      return futuresBuy;\n    }(),\n    futuresSell: function () {\n      var _futuresSell = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee38(symbol, quantity, price) {\n        var params,\n            _args38 = arguments;\n        return _regeneratorRuntime.wrap(function _callee38$(_context38) {\n          while (1) {\n            switch (_context38.prev = _context38.next) {\n              case 0:\n                params = _args38.length > 3 && _args38[3] !== undefined ? _args38[3] : {};\n                return _context38.abrupt(\"return\", futuresOrder('SELL', symbol, quantity, price, params));\n\n              case 2:\n              case \"end\":\n                return _context38.stop();\n            }\n          }\n        }, _callee38);\n      }));\n\n      function futuresSell(_x26, _x27, _x28) {\n        return _futuresSell.apply(this, arguments);\n      }\n\n      return futuresSell;\n    }(),\n    futuresMarketBuy: function () {\n      var _futuresMarketBuy = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee39(symbol, quantity) {\n        var params,\n            _args39 = arguments;\n        return _regeneratorRuntime.wrap(function _callee39$(_context39) {\n          while (1) {\n            switch (_context39.prev = _context39.next) {\n              case 0:\n                params = _args39.length > 2 && _args39[2] !== undefined ? _args39[2] : {};\n                return _context39.abrupt(\"return\", futuresOrder('BUY', symbol, quantity, false, params));\n\n              case 2:\n              case \"end\":\n                return _context39.stop();\n            }\n          }\n        }, _callee39);\n      }));\n\n      function futuresMarketBuy(_x29, _x30) {\n        return _futuresMarketBuy.apply(this, arguments);\n      }\n\n      return futuresMarketBuy;\n    }(),\n    futuresMarketSell: function () {\n      var _futuresMarketSell = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee40(symbol, quantity) {\n        var params,\n            _args40 = arguments;\n        return _regeneratorRuntime.wrap(function _callee40$(_context40) {\n          while (1) {\n            switch (_context40.prev = _context40.next) {\n              case 0:\n                params = _args40.length > 2 && _args40[2] !== undefined ? _args40[2] : {};\n                return _context40.abrupt(\"return\", futuresOrder('SELL', symbol, quantity, false, params));\n\n              case 2:\n              case \"end\":\n                return _context40.stop();\n            }\n          }\n        }, _callee40);\n      }));\n\n      function futuresMarketSell(_x31, _x32) {\n        return _futuresMarketSell.apply(this, arguments);\n      }\n\n      return futuresMarketSell;\n    }(),\n    futuresOrder: futuresOrder,\n    // side symbol quantity [price] [params]\n    futuresOrderStatus: function () {\n      var _futuresOrderStatus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee41(symbol) {\n        var params,\n            _args41 = arguments;\n        return _regeneratorRuntime.wrap(function _callee41$(_context41) {\n          while (1) {\n            switch (_context41.prev = _context41.next) {\n              case 0:\n                params = _args41.length > 1 && _args41[1] !== undefined ? _args41[1] : {};\n                // Either orderId or origClientOrderId must be sent\n                params.symbol = symbol;\n                return _context41.abrupt(\"return\", _promiseRequest('v1/order', params, {\n                  base: fapi,\n                  type: 'SIGNED'\n                }));\n\n              case 3:\n              case \"end\":\n                return _context41.stop();\n            }\n          }\n        }, _callee41);\n      }));\n\n      function futuresOrderStatus(_x33) {\n        return _futuresOrderStatus.apply(this, arguments);\n      }\n\n      return futuresOrderStatus;\n    }(),\n    futuresCancel: function () {\n      var _futuresCancel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee42(symbol) {\n        var params,\n            _args42 = arguments;\n        return _regeneratorRuntime.wrap(function _callee42$(_context42) {\n          while (1) {\n            switch (_context42.prev = _context42.next) {\n              case 0:\n                params = _args42.length > 1 && _args42[1] !== undefined ? _args42[1] : {};\n                // Either orderId or origClientOrderId must be sent\n                params.symbol = symbol;\n                return _context42.abrupt(\"return\", _promiseRequest('v1/order', params, {\n                  base: fapi,\n                  type: 'SIGNED',\n                  method: 'DELETE'\n                }));\n\n              case 3:\n              case \"end\":\n                return _context42.stop();\n            }\n          }\n        }, _callee42);\n      }));\n\n      function futuresCancel(_x34) {\n        return _futuresCancel.apply(this, arguments);\n      }\n\n      return futuresCancel;\n    }(),\n    futuresCancelAll: function () {\n      var _futuresCancelAll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee43(symbol) {\n        var params,\n            _args43 = arguments;\n        return _regeneratorRuntime.wrap(function _callee43$(_context43) {\n          while (1) {\n            switch (_context43.prev = _context43.next) {\n              case 0:\n                params = _args43.length > 1 && _args43[1] !== undefined ? _args43[1] : {};\n                params.symbol = symbol;\n                return _context43.abrupt(\"return\", _promiseRequest('v1/allOpenOrders', params, {\n                  base: fapi,\n                  type: 'SIGNED',\n                  method: 'DELETE'\n                }));\n\n              case 3:\n              case \"end\":\n                return _context43.stop();\n            }\n          }\n        }, _callee43);\n      }));\n\n      function futuresCancelAll(_x35) {\n        return _futuresCancelAll.apply(this, arguments);\n      }\n\n      return futuresCancelAll;\n    }(),\n    futuresCountdownCancelAll: function () {\n      var _futuresCountdownCancelAll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee44(symbol) {\n        var countdownTime,\n            params,\n            _args44 = arguments;\n        return _regeneratorRuntime.wrap(function _callee44$(_context44) {\n          while (1) {\n            switch (_context44.prev = _context44.next) {\n              case 0:\n                countdownTime = _args44.length > 1 && _args44[1] !== undefined ? _args44[1] : 0;\n                params = _args44.length > 2 && _args44[2] !== undefined ? _args44[2] : {};\n                params.symbol = symbol;\n                params.countdownTime = countdownTime;\n                return _context44.abrupt(\"return\", _promiseRequest('v1/countdownCancelAll', params, {\n                  base: fapi,\n                  type: 'SIGNED',\n                  method: 'POST'\n                }));\n\n              case 5:\n              case \"end\":\n                return _context44.stop();\n            }\n          }\n        }, _callee44);\n      }));\n\n      function futuresCountdownCancelAll(_x36) {\n        return _futuresCountdownCancelAll.apply(this, arguments);\n      }\n\n      return futuresCountdownCancelAll;\n    }(),\n    futuresOpenOrders: function () {\n      var _futuresOpenOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee45() {\n        var symbol,\n            params,\n            _args45 = arguments;\n        return _regeneratorRuntime.wrap(function _callee45$(_context45) {\n          while (1) {\n            switch (_context45.prev = _context45.next) {\n              case 0:\n                symbol = _args45.length > 0 && _args45[0] !== undefined ? _args45[0] : false;\n                params = _args45.length > 1 && _args45[1] !== undefined ? _args45[1] : {};\n                if (symbol) params.symbol = symbol;\n                return _context45.abrupt(\"return\", _promiseRequest('v1/openOrders', params, {\n                  base: fapi,\n                  type: 'SIGNED'\n                }));\n\n              case 4:\n              case \"end\":\n                return _context45.stop();\n            }\n          }\n        }, _callee45);\n      }));\n\n      function futuresOpenOrders() {\n        return _futuresOpenOrders.apply(this, arguments);\n      }\n\n      return futuresOpenOrders;\n    }(),\n    futuresAllOrders: function () {\n      var _futuresAllOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee46() {\n        var symbol,\n            params,\n            _args46 = arguments;\n        return _regeneratorRuntime.wrap(function _callee46$(_context46) {\n          while (1) {\n            switch (_context46.prev = _context46.next) {\n              case 0:\n                symbol = _args46.length > 0 && _args46[0] !== undefined ? _args46[0] : false;\n                params = _args46.length > 1 && _args46[1] !== undefined ? _args46[1] : {};\n                // Get all account orders; active, canceled, or filled.\n                if (symbol) params.symbol = symbol;\n                return _context46.abrupt(\"return\", _promiseRequest('v1/allOrders', params, {\n                  base: fapi,\n                  type: 'SIGNED'\n                }));\n\n              case 4:\n              case \"end\":\n                return _context46.stop();\n            }\n          }\n        }, _callee46);\n      }));\n\n      function futuresAllOrders() {\n        return _futuresAllOrders.apply(this, arguments);\n      }\n\n      return futuresAllOrders;\n    }(),\n    futuresPositionSideDual: function () {\n      var _futuresPositionSideDual = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee47() {\n        var params,\n            _args47 = arguments;\n        return _regeneratorRuntime.wrap(function _callee47$(_context47) {\n          while (1) {\n            switch (_context47.prev = _context47.next) {\n              case 0:\n                params = _args47.length > 0 && _args47[0] !== undefined ? _args47[0] : {};\n                return _context47.abrupt(\"return\", _promiseRequest('v1/positionSide/dual', params, {\n                  base: fapi,\n                  type: 'SIGNED'\n                }));\n\n              case 2:\n              case \"end\":\n                return _context47.stop();\n            }\n          }\n        }, _callee47);\n      }));\n\n      function futuresPositionSideDual() {\n        return _futuresPositionSideDual.apply(this, arguments);\n      }\n\n      return futuresPositionSideDual;\n    }(),\n    futuresChangePositionSideDual: function () {\n      var _futuresChangePositionSideDual = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee48(dualSidePosition) {\n        var params,\n            _args48 = arguments;\n        return _regeneratorRuntime.wrap(function _callee48$(_context48) {\n          while (1) {\n            switch (_context48.prev = _context48.next) {\n              case 0:\n                params = _args48.length > 1 && _args48[1] !== undefined ? _args48[1] : {};\n                params.dualSidePosition = dualSidePosition;\n                return _context48.abrupt(\"return\", _promiseRequest('v1/positionSide/dual', params, {\n                  base: fapi,\n                  type: 'SIGNED',\n                  method: 'POST'\n                }));\n\n              case 3:\n              case \"end\":\n                return _context48.stop();\n            }\n          }\n        }, _callee48);\n      }));\n\n      function futuresChangePositionSideDual(_x37) {\n        return _futuresChangePositionSideDual.apply(this, arguments);\n      }\n\n      return futuresChangePositionSideDual;\n    }(),\n    futuresTransferAsset: function () {\n      var _futuresTransferAsset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee49(asset, amount, type) {\n        var params;\n        return _regeneratorRuntime.wrap(function _callee49$(_context49) {\n          while (1) {\n            switch (_context49.prev = _context49.next) {\n              case 0:\n                params = Object.assign({\n                  asset: asset,\n                  amount: amount,\n                  type: type\n                });\n                return _context49.abrupt(\"return\", _promiseRequest('v1/futures/transfer', params, {\n                  base: sapi,\n                  type: 'SIGNED',\n                  method: 'POST'\n                }));\n\n              case 2:\n              case \"end\":\n                return _context49.stop();\n            }\n          }\n        }, _callee49);\n      }));\n\n      function futuresTransferAsset(_x38, _x39, _x40) {\n        return _futuresTransferAsset.apply(this, arguments);\n      }\n\n      return futuresTransferAsset;\n    }(),\n    futuresHistDataId: function () {\n      var _futuresHistDataId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee50() {\n        var symbol,\n            params,\n            _args50 = arguments;\n        return _regeneratorRuntime.wrap(function _callee50$(_context50) {\n          while (1) {\n            switch (_context50.prev = _context50.next) {\n              case 0:\n                symbol = _args50.length > 0 && _args50[0] !== undefined ? _args50[0] : false;\n                params = _args50.length > 1 && _args50[1] !== undefined ? _args50[1] : {};\n                if (symbol) params.symbol = symbol;\n                return _context50.abrupt(\"return\", _promiseRequest('v1/futuresHistDataId', params, {\n                  base: sapi,\n                  type: 'SIGNED',\n                  method: 'POST'\n                }));\n\n              case 4:\n              case \"end\":\n                return _context50.stop();\n            }\n          }\n        }, _callee50);\n      }));\n\n      function futuresHistDataId() {\n        return _futuresHistDataId.apply(this, arguments);\n      }\n\n      return futuresHistDataId;\n    }(),\n    futuresDownloadLink: function () {\n      var _futuresDownloadLink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee51(downloadId) {\n        return _regeneratorRuntime.wrap(function _callee51$(_context51) {\n          while (1) {\n            switch (_context51.prev = _context51.next) {\n              case 0:\n                return _context51.abrupt(\"return\", _promiseRequest('v1/downloadLink', {\n                  downloadId: downloadId\n                }, {\n                  base: sapi,\n                  type: 'SIGNED'\n                }));\n\n              case 1:\n              case \"end\":\n                return _context51.stop();\n            }\n          }\n        }, _callee51);\n      }));\n\n      function futuresDownloadLink(_x41) {\n        return _futuresDownloadLink.apply(this, arguments);\n      }\n\n      return futuresDownloadLink;\n    }(),\n    // futures websockets support: ticker bookTicker miniTicker aggTrade markPrice\n\n    /* TODO: https://binance-docs.github.io/apidocs/futures/en/#change-log\r\n    Cancel multiple orders DELETE /fapi/v1/batchOrders\r\n    New Future Account Transfer POST https://api.binance.com/sapi/v1/futures/transfer\r\n    Get Postion Margin Change History (TRADE)\r\n      wss://fstream.binance.com/ws/<listenKey>\r\n    Diff. Book Depth Streams (250ms, 100ms, or realtime): <symbol>@depth OR <symbol>@depth@100ms OR <symbol>@depth@0ms\r\n    Partial Book Depth Streams (5, 10, 20): <symbol>@depth<levels> OR <symbol>@depth<levels>@100ms\r\n    All Market Liquidation Order Streams: !forceOrder@arr\r\n    Liquidation Order Streams for specific symbol: <symbol>@forceOrder\r\n    Chart data (250ms): <symbol>@kline_<interval>\r\n    SUBSCRIBE, UNSUBSCRIBE, LIST_SUBSCRIPTIONS, SET_PROPERTY, GET_PROPERTY\r\n    Live Subscribing/Unsubscribing to streams: requires sending futures subscription id when connecting\r\n    futuresSubscriptions { \"method\": \"LIST_SUBSCRIPTIONS\", \"id\": 1 }\r\n    futuresUnsubscribe { \"method\": \"UNSUBSCRIBE\", \"params\": [ \"btcusdt@depth\" ], \"id\": 1 }\r\n    futures depthCache\r\n    */\n\n    /*\r\n    const futuresOrder = (side, symbol, quantity, price = 0, flags = {}, callback = false) => {\r\n        let opt = {\r\n            symbol: symbol,\r\n            side: side,\r\n            type: 'LIMIT',\r\n            quantity: quantity\r\n        };\r\n        if (typeof flags.type !== 'undefined') opt.type = flags.type;\r\n        if (opt.type.includes('LIMIT')) {\r\n            opt.price = price;\r\n            opt.timeInForce = 'GTC';\r\n        }\r\n        if (typeof flags.timeInForce !== 'undefined') opt.timeInForce = flags.timeInForce;\r\n        signedRequest(`${fapi}v1/order`, opt, function (error, response) {\r\n            if (!response) {\r\n                if (callback) return callback(error, response);\r\n                else return Binance.options.log('futuresOrder error:', error);\r\n            }\r\n            if (callback) return callback(error, response);\r\n            else return Binance.options.log(`futuresOrder ${side} (${symbol},${quantity},${price})`, response);\r\n        }, 'POST');\r\n    };*/\n    //** Delivery methods */\n    deliveryPing: function () {\n      var _deliveryPing = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee52() {\n        var params,\n            _args52 = arguments;\n        return _regeneratorRuntime.wrap(function _callee52$(_context52) {\n          while (1) {\n            switch (_context52.prev = _context52.next) {\n              case 0:\n                params = _args52.length > 0 && _args52[0] !== undefined ? _args52[0] : {};\n                return _context52.abrupt(\"return\", _promiseRequest('v1/ping', params, {\n                  base: dapi\n                }));\n\n              case 2:\n              case \"end\":\n                return _context52.stop();\n            }\n          }\n        }, _callee52);\n      }));\n\n      function deliveryPing() {\n        return _deliveryPing.apply(this, arguments);\n      }\n\n      return deliveryPing;\n    }(),\n    deliveryTime: function () {\n      var _deliveryTime = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee53() {\n        var params,\n            _args53 = arguments;\n        return _regeneratorRuntime.wrap(function _callee53$(_context53) {\n          while (1) {\n            switch (_context53.prev = _context53.next) {\n              case 0:\n                params = _args53.length > 0 && _args53[0] !== undefined ? _args53[0] : {};\n                return _context53.abrupt(\"return\", _promiseRequest('v1/time', params, {\n                  base: dapi\n                }).then(function (r) {\n                  return r.serverTime;\n                }));\n\n              case 2:\n              case \"end\":\n                return _context53.stop();\n            }\n          }\n        }, _callee53);\n      }));\n\n      function deliveryTime() {\n        return _deliveryTime.apply(this, arguments);\n      }\n\n      return deliveryTime;\n    }(),\n    deliveryExchangeInfo: function () {\n      var _deliveryExchangeInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee54() {\n        return _regeneratorRuntime.wrap(function _callee54$(_context54) {\n          while (1) {\n            switch (_context54.prev = _context54.next) {\n              case 0:\n                return _context54.abrupt(\"return\", _promiseRequest('v1/exchangeInfo', {}, {\n                  base: dapi\n                }));\n\n              case 1:\n              case \"end\":\n                return _context54.stop();\n            }\n          }\n        }, _callee54);\n      }));\n\n      function deliveryExchangeInfo() {\n        return _deliveryExchangeInfo.apply(this, arguments);\n      }\n\n      return deliveryExchangeInfo;\n    }(),\n    deliveryPrices: function () {\n      var _deliveryPrices = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee55() {\n        var params,\n            data,\n            _args55 = arguments;\n        return _regeneratorRuntime.wrap(function _callee55$(_context55) {\n          while (1) {\n            switch (_context55.prev = _context55.next) {\n              case 0:\n                params = _args55.length > 0 && _args55[0] !== undefined ? _args55[0] : {};\n                _context55.next = 3;\n                return _promiseRequest('v1/ticker/price', params, {\n                  base: dapi\n                });\n\n              case 3:\n                data = _context55.sent;\n                return _context55.abrupt(\"return\", data.reduce(function (out, i) {\n                  return out[i.symbol] = i.price, out;\n                }, {}));\n\n              case 5:\n              case \"end\":\n                return _context55.stop();\n            }\n          }\n        }, _callee55);\n      }));\n\n      function deliveryPrices() {\n        return _deliveryPrices.apply(this, arguments);\n      }\n\n      return deliveryPrices;\n    }(),\n    deliveryDaily: function () {\n      var _deliveryDaily = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee56() {\n        var symbol,\n            params,\n            data,\n            _args56 = arguments;\n        return _regeneratorRuntime.wrap(function _callee56$(_context56) {\n          while (1) {\n            switch (_context56.prev = _context56.next) {\n              case 0:\n                symbol = _args56.length > 0 && _args56[0] !== undefined ? _args56[0] : false;\n                params = _args56.length > 1 && _args56[1] !== undefined ? _args56[1] : {};\n                if (symbol) params.symbol = symbol;\n                _context56.next = 5;\n                return _promiseRequest('v1/ticker/24hr', params, {\n                  base: dapi\n                });\n\n              case 5:\n                data = _context56.sent;\n                return _context56.abrupt(\"return\", symbol ? data : data.reduce(function (out, i) {\n                  return out[i.symbol] = i, out;\n                }, {}));\n\n              case 7:\n              case \"end\":\n                return _context56.stop();\n            }\n          }\n        }, _callee56);\n      }));\n\n      function deliveryDaily() {\n        return _deliveryDaily.apply(this, arguments);\n      }\n\n      return deliveryDaily;\n    }(),\n    deliveryOpenInterest: function () {\n      var _deliveryOpenInterest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee57(symbol) {\n        return _regeneratorRuntime.wrap(function _callee57$(_context57) {\n          while (1) {\n            switch (_context57.prev = _context57.next) {\n              case 0:\n                return _context57.abrupt(\"return\", _promiseRequest('v1/openInterest', {\n                  symbol: symbol\n                }, {\n                  base: dapi\n                }).then(function (r) {\n                  return r.openInterest;\n                }));\n\n              case 1:\n              case \"end\":\n                return _context57.stop();\n            }\n          }\n        }, _callee57);\n      }));\n\n      function deliveryOpenInterest(_x42) {\n        return _deliveryOpenInterest.apply(this, arguments);\n      }\n\n      return deliveryOpenInterest;\n    }(),\n    deliveryCandles: function () {\n      var _deliveryCandles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee58(symbol) {\n        var interval,\n            params,\n            _args58 = arguments;\n        return _regeneratorRuntime.wrap(function _callee58$(_context58) {\n          while (1) {\n            switch (_context58.prev = _context58.next) {\n              case 0:\n                interval = _args58.length > 1 && _args58[1] !== undefined ? _args58[1] : \"30m\";\n                params = _args58.length > 2 && _args58[2] !== undefined ? _args58[2] : {};\n                params.symbol = symbol;\n                params.interval = interval;\n                return _context58.abrupt(\"return\", _promiseRequest('v1/klines', params, {\n                  base: dapi\n                }));\n\n              case 5:\n              case \"end\":\n                return _context58.stop();\n            }\n          }\n        }, _callee58);\n      }));\n\n      function deliveryCandles(_x43) {\n        return _deliveryCandles.apply(this, arguments);\n      }\n\n      return deliveryCandles;\n    }(),\n    deliveryContinuousKlines: function () {\n      var _deliveryContinuousKlines = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee59(pair) {\n        var contractType,\n            interval,\n            params,\n            _args59 = arguments;\n        return _regeneratorRuntime.wrap(function _callee59$(_context59) {\n          while (1) {\n            switch (_context59.prev = _context59.next) {\n              case 0:\n                contractType = _args59.length > 1 && _args59[1] !== undefined ? _args59[1] : \"CURRENT_QUARTER\";\n                interval = _args59.length > 2 && _args59[2] !== undefined ? _args59[2] : \"30m\";\n                params = _args59.length > 3 && _args59[3] !== undefined ? _args59[3] : {};\n                params.pair = pair;\n                params.interval = interval;\n                params.contractType = contractType;\n                return _context59.abrupt(\"return\", _promiseRequest('v1/continuousKlines', params, {\n                  base: dapi\n                }));\n\n              case 7:\n              case \"end\":\n                return _context59.stop();\n            }\n          }\n        }, _callee59);\n      }));\n\n      function deliveryContinuousKlines(_x44) {\n        return _deliveryContinuousKlines.apply(this, arguments);\n      }\n\n      return deliveryContinuousKlines;\n    }(),\n    deliveryIndexKlines: function () {\n      var _deliveryIndexKlines = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee60(pair) {\n        var interval,\n            params,\n            _args60 = arguments;\n        return _regeneratorRuntime.wrap(function _callee60$(_context60) {\n          while (1) {\n            switch (_context60.prev = _context60.next) {\n              case 0:\n                interval = _args60.length > 1 && _args60[1] !== undefined ? _args60[1] : \"30m\";\n                params = _args60.length > 2 && _args60[2] !== undefined ? _args60[2] : {};\n                params.pair = pair;\n                params.interval = interval;\n                return _context60.abrupt(\"return\", _promiseRequest('v1/indexPriceKlines', params, {\n                  base: dapi\n                }));\n\n              case 5:\n              case \"end\":\n                return _context60.stop();\n            }\n          }\n        }, _callee60);\n      }));\n\n      function deliveryIndexKlines(_x45) {\n        return _deliveryIndexKlines.apply(this, arguments);\n      }\n\n      return deliveryIndexKlines;\n    }(),\n    deliveryMarkPriceKlines: function () {\n      var _deliveryMarkPriceKlines = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee61(symbol) {\n        var interval,\n            params,\n            _args61 = arguments;\n        return _regeneratorRuntime.wrap(function _callee61$(_context61) {\n          while (1) {\n            switch (_context61.prev = _context61.next) {\n              case 0:\n                interval = _args61.length > 1 && _args61[1] !== undefined ? _args61[1] : \"30m\";\n                params = _args61.length > 2 && _args61[2] !== undefined ? _args61[2] : {};\n                params.symbol = symbol;\n                params.interval = interval;\n                return _context61.abrupt(\"return\", _promiseRequest('v1/markPriceKlines', params, {\n                  base: dapi\n                }));\n\n              case 5:\n              case \"end\":\n                return _context61.stop();\n            }\n          }\n        }, _callee61);\n      }));\n\n      function deliveryMarkPriceKlines(_x46) {\n        return _deliveryMarkPriceKlines.apply(this, arguments);\n      }\n\n      return deliveryMarkPriceKlines;\n    }(),\n    deliveryMarkPrice: function () {\n      var _deliveryMarkPrice = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee62() {\n        var symbol,\n            _args62 = arguments;\n        return _regeneratorRuntime.wrap(function _callee62$(_context62) {\n          while (1) {\n            switch (_context62.prev = _context62.next) {\n              case 0:\n                symbol = _args62.length > 0 && _args62[0] !== undefined ? _args62[0] : false;\n                return _context62.abrupt(\"return\", _promiseRequest('v1/premiumIndex', symbol ? {\n                  symbol: symbol\n                } : {}, {\n                  base: dapi\n                }));\n\n              case 2:\n              case \"end\":\n                return _context62.stop();\n            }\n          }\n        }, _callee62);\n      }));\n\n      function deliveryMarkPrice() {\n        return _deliveryMarkPrice.apply(this, arguments);\n      }\n\n      return deliveryMarkPrice;\n    }(),\n    deliveryTrades: function () {\n      var _deliveryTrades = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee63(symbol) {\n        var params,\n            _args63 = arguments;\n        return _regeneratorRuntime.wrap(function _callee63$(_context63) {\n          while (1) {\n            switch (_context63.prev = _context63.next) {\n              case 0:\n                params = _args63.length > 1 && _args63[1] !== undefined ? _args63[1] : {};\n                params.symbol = symbol;\n                return _context63.abrupt(\"return\", _promiseRequest('v1/trades', params, {\n                  base: dapi\n                }));\n\n              case 3:\n              case \"end\":\n                return _context63.stop();\n            }\n          }\n        }, _callee63);\n      }));\n\n      function deliveryTrades(_x47) {\n        return _deliveryTrades.apply(this, arguments);\n      }\n\n      return deliveryTrades;\n    }(),\n    deliveryHistoricalTrades: function () {\n      var _deliveryHistoricalTrades = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee64(symbol) {\n        var params,\n            _args64 = arguments;\n        return _regeneratorRuntime.wrap(function _callee64$(_context64) {\n          while (1) {\n            switch (_context64.prev = _context64.next) {\n              case 0:\n                params = _args64.length > 1 && _args64[1] !== undefined ? _args64[1] : {};\n                params.symbol = symbol;\n                return _context64.abrupt(\"return\", _promiseRequest('v1/historicalTrades', params, {\n                  base: dapi,\n                  type: 'MARKET_DATA'\n                }));\n\n              case 3:\n              case \"end\":\n                return _context64.stop();\n            }\n          }\n        }, _callee64);\n      }));\n\n      function deliveryHistoricalTrades(_x48) {\n        return _deliveryHistoricalTrades.apply(this, arguments);\n      }\n\n      return deliveryHistoricalTrades;\n    }(),\n    deliveryAggTrades: function () {\n      var _deliveryAggTrades = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee65(symbol) {\n        var params,\n            _args65 = arguments;\n        return _regeneratorRuntime.wrap(function _callee65$(_context65) {\n          while (1) {\n            switch (_context65.prev = _context65.next) {\n              case 0:\n                params = _args65.length > 1 && _args65[1] !== undefined ? _args65[1] : {};\n                params.symbol = symbol;\n                return _context65.abrupt(\"return\", _promiseRequest('v1/aggTrades', params, {\n                  base: dapi\n                }));\n\n              case 3:\n              case \"end\":\n                return _context65.stop();\n            }\n          }\n        }, _callee65);\n      }));\n\n      function deliveryAggTrades(_x49) {\n        return _deliveryAggTrades.apply(this, arguments);\n      }\n\n      return deliveryAggTrades;\n    }(),\n    deliveryUserTrades: function () {\n      var _deliveryUserTrades = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee66(symbol) {\n        var params,\n            _args66 = arguments;\n        return _regeneratorRuntime.wrap(function _callee66$(_context66) {\n          while (1) {\n            switch (_context66.prev = _context66.next) {\n              case 0:\n                params = _args66.length > 1 && _args66[1] !== undefined ? _args66[1] : {};\n                params.symbol = symbol;\n                return _context66.abrupt(\"return\", _promiseRequest('v1/userTrades', params, {\n                  base: dapi,\n                  type: 'SIGNED'\n                }));\n\n              case 3:\n              case \"end\":\n                return _context66.stop();\n            }\n          }\n        }, _callee66);\n      }));\n\n      function deliveryUserTrades(_x50) {\n        return _deliveryUserTrades.apply(this, arguments);\n      }\n\n      return deliveryUserTrades;\n    }(),\n    deliveryGetDataStream: function () {\n      var _deliveryGetDataStream = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee67() {\n        var params,\n            _args67 = arguments;\n        return _regeneratorRuntime.wrap(function _callee67$(_context67) {\n          while (1) {\n            switch (_context67.prev = _context67.next) {\n              case 0:\n                params = _args67.length > 0 && _args67[0] !== undefined ? _args67[0] : {};\n                return _context67.abrupt(\"return\", _promiseRequest('v1/listenKey', params, {\n                  base: dapi,\n                  type: 'SIGNED',\n                  method: 'POST'\n                }));\n\n              case 2:\n              case \"end\":\n                return _context67.stop();\n            }\n          }\n        }, _callee67);\n      }));\n\n      function deliveryGetDataStream() {\n        return _deliveryGetDataStream.apply(this, arguments);\n      }\n\n      return deliveryGetDataStream;\n    }(),\n    deliveryKeepDataStream: function () {\n      var _deliveryKeepDataStream = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee68() {\n        var params,\n            _args68 = arguments;\n        return _regeneratorRuntime.wrap(function _callee68$(_context68) {\n          while (1) {\n            switch (_context68.prev = _context68.next) {\n              case 0:\n                params = _args68.length > 0 && _args68[0] !== undefined ? _args68[0] : {};\n                return _context68.abrupt(\"return\", _promiseRequest('v1/listenKey', params, {\n                  base: dapi,\n                  type: 'SIGNED',\n                  method: 'PUT'\n                }));\n\n              case 2:\n              case \"end\":\n                return _context68.stop();\n            }\n          }\n        }, _callee68);\n      }));\n\n      function deliveryKeepDataStream() {\n        return _deliveryKeepDataStream.apply(this, arguments);\n      }\n\n      return deliveryKeepDataStream;\n    }(),\n    deliveryCloseDataStream: function () {\n      var _deliveryCloseDataStream = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee69() {\n        var params,\n            _args69 = arguments;\n        return _regeneratorRuntime.wrap(function _callee69$(_context69) {\n          while (1) {\n            switch (_context69.prev = _context69.next) {\n              case 0:\n                params = _args69.length > 0 && _args69[0] !== undefined ? _args69[0] : {};\n                return _context69.abrupt(\"return\", _promiseRequest('v1/listenKey', params, {\n                  base: dapi,\n                  type: 'SIGNED',\n                  method: 'DELETE'\n                }));\n\n              case 2:\n              case \"end\":\n                return _context69.stop();\n            }\n          }\n        }, _callee69);\n      }));\n\n      function deliveryCloseDataStream() {\n        return _deliveryCloseDataStream.apply(this, arguments);\n      }\n\n      return deliveryCloseDataStream;\n    }(),\n    deliveryLiquidationOrders: function () {\n      var _deliveryLiquidationOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee70() {\n        var symbol,\n            params,\n            _args70 = arguments;\n        return _regeneratorRuntime.wrap(function _callee70$(_context70) {\n          while (1) {\n            switch (_context70.prev = _context70.next) {\n              case 0:\n                symbol = _args70.length > 0 && _args70[0] !== undefined ? _args70[0] : false;\n                params = _args70.length > 1 && _args70[1] !== undefined ? _args70[1] : {};\n                if (symbol) params.symbol = symbol;\n                return _context70.abrupt(\"return\", _promiseRequest('v1/allForceOrders', params, {\n                  base: dapi\n                }));\n\n              case 4:\n              case \"end\":\n                return _context70.stop();\n            }\n          }\n        }, _callee70);\n      }));\n\n      function deliveryLiquidationOrders() {\n        return _deliveryLiquidationOrders.apply(this, arguments);\n      }\n\n      return deliveryLiquidationOrders;\n    }(),\n    deliveryPositionRisk: function () {\n      var _deliveryPositionRisk = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee71() {\n        var params,\n            _args71 = arguments;\n        return _regeneratorRuntime.wrap(function _callee71$(_context71) {\n          while (1) {\n            switch (_context71.prev = _context71.next) {\n              case 0:\n                params = _args71.length > 0 && _args71[0] !== undefined ? _args71[0] : {};\n                return _context71.abrupt(\"return\", _promiseRequest('v1/positionRisk', params, {\n                  base: dapi,\n                  type: 'SIGNED'\n                }));\n\n              case 2:\n              case \"end\":\n                return _context71.stop();\n            }\n          }\n        }, _callee71);\n      }));\n\n      function deliveryPositionRisk() {\n        return _deliveryPositionRisk.apply(this, arguments);\n      }\n\n      return deliveryPositionRisk;\n    }(),\n    deliveryLeverageBracket: function () {\n      var _deliveryLeverageBracket = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee72() {\n        var symbol,\n            params,\n            _args72 = arguments;\n        return _regeneratorRuntime.wrap(function _callee72$(_context72) {\n          while (1) {\n            switch (_context72.prev = _context72.next) {\n              case 0:\n                symbol = _args72.length > 0 && _args72[0] !== undefined ? _args72[0] : false;\n                params = _args72.length > 1 && _args72[1] !== undefined ? _args72[1] : {};\n                if (symbol) params.symbol = symbol;\n                return _context72.abrupt(\"return\", _promiseRequest('v1/leverageBracket', params, {\n                  base: dapi,\n                  type: 'USER_DATA'\n                }));\n\n              case 4:\n              case \"end\":\n                return _context72.stop();\n            }\n          }\n        }, _callee72);\n      }));\n\n      function deliveryLeverageBracket() {\n        return _deliveryLeverageBracket.apply(this, arguments);\n      }\n\n      return deliveryLeverageBracket;\n    }(),\n    deliveryLeverageBracketSymbols: function () {\n      var _deliveryLeverageBracketSymbols = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee73() {\n        var symbol,\n            params,\n            _args73 = arguments;\n        return _regeneratorRuntime.wrap(function _callee73$(_context73) {\n          while (1) {\n            switch (_context73.prev = _context73.next) {\n              case 0:\n                symbol = _args73.length > 0 && _args73[0] !== undefined ? _args73[0] : false;\n                params = _args73.length > 1 && _args73[1] !== undefined ? _args73[1] : {};\n                if (symbol) params.symbol = symbol;\n                return _context73.abrupt(\"return\", _promiseRequest('v2/leverageBracket', params, {\n                  base: dapi,\n                  type: 'USER_DATA'\n                }));\n\n              case 4:\n              case \"end\":\n                return _context73.stop();\n            }\n          }\n        }, _callee73);\n      }));\n\n      function deliveryLeverageBracketSymbols() {\n        return _deliveryLeverageBracketSymbols.apply(this, arguments);\n      }\n\n      return deliveryLeverageBracketSymbols;\n    }(),\n    // leverage 1 to 125\n    deliveryLeverage: function () {\n      var _deliveryLeverage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee74(symbol, leverage) {\n        var params,\n            _args74 = arguments;\n        return _regeneratorRuntime.wrap(function _callee74$(_context74) {\n          while (1) {\n            switch (_context74.prev = _context74.next) {\n              case 0:\n                params = _args74.length > 2 && _args74[2] !== undefined ? _args74[2] : {};\n                params.symbol = symbol;\n                params.leverage = leverage;\n                return _context74.abrupt(\"return\", _promiseRequest('v1/leverage', params, {\n                  base: dapi,\n                  method: 'POST',\n                  type: 'SIGNED'\n                }));\n\n              case 4:\n              case \"end\":\n                return _context74.stop();\n            }\n          }\n        }, _callee74);\n      }));\n\n      function deliveryLeverage(_x51, _x52) {\n        return _deliveryLeverage.apply(this, arguments);\n      }\n\n      return deliveryLeverage;\n    }(),\n    // ISOLATED, CROSSED\n    deliveryMarginType: function () {\n      var _deliveryMarginType = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee75(symbol, marginType) {\n        var params,\n            _args75 = arguments;\n        return _regeneratorRuntime.wrap(function _callee75$(_context75) {\n          while (1) {\n            switch (_context75.prev = _context75.next) {\n              case 0:\n                params = _args75.length > 2 && _args75[2] !== undefined ? _args75[2] : {};\n                params.symbol = symbol;\n                params.marginType = marginType;\n                return _context75.abrupt(\"return\", _promiseRequest('v1/marginType', params, {\n                  base: dapi,\n                  method: 'POST',\n                  type: 'SIGNED'\n                }));\n\n              case 4:\n              case \"end\":\n                return _context75.stop();\n            }\n          }\n        }, _callee75);\n      }));\n\n      function deliveryMarginType(_x53, _x54) {\n        return _deliveryMarginType.apply(this, arguments);\n      }\n\n      return deliveryMarginType;\n    }(),\n    // type: 1: Add postion margin，2: Reduce postion margin\n    deliveryPositionMargin: function () {\n      var _deliveryPositionMargin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee76(symbol, amount) {\n        var type,\n            params,\n            _args76 = arguments;\n        return _regeneratorRuntime.wrap(function _callee76$(_context76) {\n          while (1) {\n            switch (_context76.prev = _context76.next) {\n              case 0:\n                type = _args76.length > 2 && _args76[2] !== undefined ? _args76[2] : 1;\n                params = _args76.length > 3 && _args76[3] !== undefined ? _args76[3] : {};\n                params.symbol = symbol;\n                params.amount = amount;\n                params.type = type;\n                return _context76.abrupt(\"return\", _promiseRequest('v1/positionMargin', params, {\n                  base: dapi,\n                  method: 'POST',\n                  type: 'SIGNED'\n                }));\n\n              case 6:\n              case \"end\":\n                return _context76.stop();\n            }\n          }\n        }, _callee76);\n      }));\n\n      function deliveryPositionMargin(_x55, _x56) {\n        return _deliveryPositionMargin.apply(this, arguments);\n      }\n\n      return deliveryPositionMargin;\n    }(),\n    deliveryPositionMarginHistory: function () {\n      var _deliveryPositionMarginHistory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee77(symbol) {\n        var params,\n            _args77 = arguments;\n        return _regeneratorRuntime.wrap(function _callee77$(_context77) {\n          while (1) {\n            switch (_context77.prev = _context77.next) {\n              case 0:\n                params = _args77.length > 1 && _args77[1] !== undefined ? _args77[1] : {};\n                params.symbol = symbol;\n                return _context77.abrupt(\"return\", _promiseRequest('v1/positionMargin/history', params, {\n                  base: dapi,\n                  type: 'SIGNED'\n                }));\n\n              case 3:\n              case \"end\":\n                return _context77.stop();\n            }\n          }\n        }, _callee77);\n      }));\n\n      function deliveryPositionMarginHistory(_x57) {\n        return _deliveryPositionMarginHistory.apply(this, arguments);\n      }\n\n      return deliveryPositionMarginHistory;\n    }(),\n    deliveryIncome: function () {\n      var _deliveryIncome = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee78() {\n        var params,\n            _args78 = arguments;\n        return _regeneratorRuntime.wrap(function _callee78$(_context78) {\n          while (1) {\n            switch (_context78.prev = _context78.next) {\n              case 0:\n                params = _args78.length > 0 && _args78[0] !== undefined ? _args78[0] : {};\n                return _context78.abrupt(\"return\", _promiseRequest('v1/income', params, {\n                  base: dapi,\n                  type: 'SIGNED'\n                }));\n\n              case 2:\n              case \"end\":\n                return _context78.stop();\n            }\n          }\n        }, _callee78);\n      }));\n\n      function deliveryIncome() {\n        return _deliveryIncome.apply(this, arguments);\n      }\n\n      return deliveryIncome;\n    }(),\n    deliveryBalance: function () {\n      var _deliveryBalance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee79() {\n        var params,\n            _args79 = arguments;\n        return _regeneratorRuntime.wrap(function _callee79$(_context79) {\n          while (1) {\n            switch (_context79.prev = _context79.next) {\n              case 0:\n                params = _args79.length > 0 && _args79[0] !== undefined ? _args79[0] : {};\n                return _context79.abrupt(\"return\", _promiseRequest('v1/balance', params, {\n                  base: dapi,\n                  type: 'SIGNED'\n                }));\n\n              case 2:\n              case \"end\":\n                return _context79.stop();\n            }\n          }\n        }, _callee79);\n      }));\n\n      function deliveryBalance() {\n        return _deliveryBalance.apply(this, arguments);\n      }\n\n      return deliveryBalance;\n    }(),\n    deliveryAccount: function () {\n      var _deliveryAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee80() {\n        var params,\n            _args80 = arguments;\n        return _regeneratorRuntime.wrap(function _callee80$(_context80) {\n          while (1) {\n            switch (_context80.prev = _context80.next) {\n              case 0:\n                params = _args80.length > 0 && _args80[0] !== undefined ? _args80[0] : {};\n                return _context80.abrupt(\"return\", _promiseRequest('v1/account', params, {\n                  base: dapi,\n                  type: 'SIGNED'\n                }));\n\n              case 2:\n              case \"end\":\n                return _context80.stop();\n            }\n          }\n        }, _callee80);\n      }));\n\n      function deliveryAccount() {\n        return _deliveryAccount.apply(this, arguments);\n      }\n\n      return deliveryAccount;\n    }(),\n    deliveryDepth: function () {\n      var _deliveryDepth = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee81(symbol) {\n        var params,\n            _args81 = arguments;\n        return _regeneratorRuntime.wrap(function _callee81$(_context81) {\n          while (1) {\n            switch (_context81.prev = _context81.next) {\n              case 0:\n                params = _args81.length > 1 && _args81[1] !== undefined ? _args81[1] : {};\n                params.symbol = symbol;\n                return _context81.abrupt(\"return\", _promiseRequest('v1/depth', params, {\n                  base: dapi\n                }));\n\n              case 3:\n              case \"end\":\n                return _context81.stop();\n            }\n          }\n        }, _callee81);\n      }));\n\n      function deliveryDepth(_x58) {\n        return _deliveryDepth.apply(this, arguments);\n      }\n\n      return deliveryDepth;\n    }(),\n    deliveryQuote: function () {\n      var _deliveryQuote = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee82() {\n        var symbol,\n            params,\n            data,\n            _args82 = arguments;\n        return _regeneratorRuntime.wrap(function _callee82$(_context82) {\n          while (1) {\n            switch (_context82.prev = _context82.next) {\n              case 0:\n                symbol = _args82.length > 0 && _args82[0] !== undefined ? _args82[0] : false;\n                params = _args82.length > 1 && _args82[1] !== undefined ? _args82[1] : {};\n                if (symbol) params.symbol = symbol; //let data = await promiseRequest( 'v1/ticker/bookTicker', params, {base:dapi} );\n                //return data.reduce((out, i) => ((out[i.symbol] = i), out), {}),\n\n                _context82.next = 5;\n                return _promiseRequest('v1/ticker/bookTicker', params, {\n                  base: dapi\n                });\n\n              case 5:\n                data = _context82.sent;\n                return _context82.abrupt(\"return\", symbol ? data : data.reduce(function (out, i) {\n                  return out[i.symbol] = i, out;\n                }, {}));\n\n              case 7:\n              case \"end\":\n                return _context82.stop();\n            }\n          }\n        }, _callee82);\n      }));\n\n      function deliveryQuote() {\n        return _deliveryQuote.apply(this, arguments);\n      }\n\n      return deliveryQuote;\n    }(),\n    deliveryBuy: function () {\n      var _deliveryBuy = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee83(symbol, quantity, price) {\n        var params,\n            _args83 = arguments;\n        return _regeneratorRuntime.wrap(function _callee83$(_context83) {\n          while (1) {\n            switch (_context83.prev = _context83.next) {\n              case 0:\n                params = _args83.length > 3 && _args83[3] !== undefined ? _args83[3] : {};\n                return _context83.abrupt(\"return\", deliveryOrder('BUY', symbol, quantity, price, params));\n\n              case 2:\n              case \"end\":\n                return _context83.stop();\n            }\n          }\n        }, _callee83);\n      }));\n\n      function deliveryBuy(_x59, _x60, _x61) {\n        return _deliveryBuy.apply(this, arguments);\n      }\n\n      return deliveryBuy;\n    }(),\n    deliverySell: function () {\n      var _deliverySell = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee84(symbol, quantity, price) {\n        var params,\n            _args84 = arguments;\n        return _regeneratorRuntime.wrap(function _callee84$(_context84) {\n          while (1) {\n            switch (_context84.prev = _context84.next) {\n              case 0:\n                params = _args84.length > 3 && _args84[3] !== undefined ? _args84[3] : {};\n                return _context84.abrupt(\"return\", deliveryOrder('SELL', symbol, quantity, price, params));\n\n              case 2:\n              case \"end\":\n                return _context84.stop();\n            }\n          }\n        }, _callee84);\n      }));\n\n      function deliverySell(_x62, _x63, _x64) {\n        return _deliverySell.apply(this, arguments);\n      }\n\n      return deliverySell;\n    }(),\n    deliveryMarketBuy: function () {\n      var _deliveryMarketBuy = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee85(symbol, quantity) {\n        var params,\n            _args85 = arguments;\n        return _regeneratorRuntime.wrap(function _callee85$(_context85) {\n          while (1) {\n            switch (_context85.prev = _context85.next) {\n              case 0:\n                params = _args85.length > 2 && _args85[2] !== undefined ? _args85[2] : {};\n                return _context85.abrupt(\"return\", deliveryOrder('BUY', symbol, quantity, false, params));\n\n              case 2:\n              case \"end\":\n                return _context85.stop();\n            }\n          }\n        }, _callee85);\n      }));\n\n      function deliveryMarketBuy(_x65, _x66) {\n        return _deliveryMarketBuy.apply(this, arguments);\n      }\n\n      return deliveryMarketBuy;\n    }(),\n    deliveryMarketSell: function () {\n      var _deliveryMarketSell = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee86(symbol, quantity) {\n        var params,\n            _args86 = arguments;\n        return _regeneratorRuntime.wrap(function _callee86$(_context86) {\n          while (1) {\n            switch (_context86.prev = _context86.next) {\n              case 0:\n                params = _args86.length > 2 && _args86[2] !== undefined ? _args86[2] : {};\n                return _context86.abrupt(\"return\", deliveryOrder('SELL', symbol, quantity, false, params));\n\n              case 2:\n              case \"end\":\n                return _context86.stop();\n            }\n          }\n        }, _callee86);\n      }));\n\n      function deliveryMarketSell(_x67, _x68) {\n        return _deliveryMarketSell.apply(this, arguments);\n      }\n\n      return deliveryMarketSell;\n    }(),\n    deliveryOrder: deliveryOrder,\n    // side symbol quantity [price] [params]\n    deliveryOrderStatus: function () {\n      var _deliveryOrderStatus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee87(symbol) {\n        var params,\n            _args87 = arguments;\n        return _regeneratorRuntime.wrap(function _callee87$(_context87) {\n          while (1) {\n            switch (_context87.prev = _context87.next) {\n              case 0:\n                params = _args87.length > 1 && _args87[1] !== undefined ? _args87[1] : {};\n                // Either orderId or origClientOrderId must be sent\n                params.symbol = symbol;\n                return _context87.abrupt(\"return\", _promiseRequest('v1/order', params, {\n                  base: dapi,\n                  type: 'SIGNED'\n                }));\n\n              case 3:\n              case \"end\":\n                return _context87.stop();\n            }\n          }\n        }, _callee87);\n      }));\n\n      function deliveryOrderStatus(_x69) {\n        return _deliveryOrderStatus.apply(this, arguments);\n      }\n\n      return deliveryOrderStatus;\n    }(),\n    deliveryCancel: function () {\n      var _deliveryCancel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee88(symbol) {\n        var params,\n            _args88 = arguments;\n        return _regeneratorRuntime.wrap(function _callee88$(_context88) {\n          while (1) {\n            switch (_context88.prev = _context88.next) {\n              case 0:\n                params = _args88.length > 1 && _args88[1] !== undefined ? _args88[1] : {};\n                // Either orderId or origClientOrderId must be sent\n                params.symbol = symbol;\n                return _context88.abrupt(\"return\", _promiseRequest('v1/order', params, {\n                  base: dapi,\n                  type: 'SIGNED',\n                  method: 'DELETE'\n                }));\n\n              case 3:\n              case \"end\":\n                return _context88.stop();\n            }\n          }\n        }, _callee88);\n      }));\n\n      function deliveryCancel(_x70) {\n        return _deliveryCancel.apply(this, arguments);\n      }\n\n      return deliveryCancel;\n    }(),\n    deliveryCancelAll: function () {\n      var _deliveryCancelAll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee89(symbol) {\n        var params,\n            _args89 = arguments;\n        return _regeneratorRuntime.wrap(function _callee89$(_context89) {\n          while (1) {\n            switch (_context89.prev = _context89.next) {\n              case 0:\n                params = _args89.length > 1 && _args89[1] !== undefined ? _args89[1] : {};\n                params.symbol = symbol;\n                return _context89.abrupt(\"return\", _promiseRequest('v1/allOpenOrders', params, {\n                  base: dapi,\n                  type: 'SIGNED',\n                  method: 'DELETE'\n                }));\n\n              case 3:\n              case \"end\":\n                return _context89.stop();\n            }\n          }\n        }, _callee89);\n      }));\n\n      function deliveryCancelAll(_x71) {\n        return _deliveryCancelAll.apply(this, arguments);\n      }\n\n      return deliveryCancelAll;\n    }(),\n    deliveryCountdownCancelAll: function () {\n      var _deliveryCountdownCancelAll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee90(symbol) {\n        var countdownTime,\n            params,\n            _args90 = arguments;\n        return _regeneratorRuntime.wrap(function _callee90$(_context90) {\n          while (1) {\n            switch (_context90.prev = _context90.next) {\n              case 0:\n                countdownTime = _args90.length > 1 && _args90[1] !== undefined ? _args90[1] : 0;\n                params = _args90.length > 2 && _args90[2] !== undefined ? _args90[2] : {};\n                params.symbol = symbol;\n                params.countdownTime = countdownTime;\n                return _context90.abrupt(\"return\", _promiseRequest('v1/countdownCancelAll', params, {\n                  base: dapi,\n                  type: 'SIGNED',\n                  method: 'POST'\n                }));\n\n              case 5:\n              case \"end\":\n                return _context90.stop();\n            }\n          }\n        }, _callee90);\n      }));\n\n      function deliveryCountdownCancelAll(_x72) {\n        return _deliveryCountdownCancelAll.apply(this, arguments);\n      }\n\n      return deliveryCountdownCancelAll;\n    }(),\n    deliveryOpenOrders: function () {\n      var _deliveryOpenOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee91() {\n        var symbol,\n            params,\n            _args91 = arguments;\n        return _regeneratorRuntime.wrap(function _callee91$(_context91) {\n          while (1) {\n            switch (_context91.prev = _context91.next) {\n              case 0:\n                symbol = _args91.length > 0 && _args91[0] !== undefined ? _args91[0] : false;\n                params = _args91.length > 1 && _args91[1] !== undefined ? _args91[1] : {};\n                if (symbol) params.symbol = symbol;\n                return _context91.abrupt(\"return\", _promiseRequest('v1/openOrders', params, {\n                  base: dapi,\n                  type: 'SIGNED'\n                }));\n\n              case 4:\n              case \"end\":\n                return _context91.stop();\n            }\n          }\n        }, _callee91);\n      }));\n\n      function deliveryOpenOrders() {\n        return _deliveryOpenOrders.apply(this, arguments);\n      }\n\n      return deliveryOpenOrders;\n    }(),\n    deliveryAllOrders: function () {\n      var _deliveryAllOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee92() {\n        var symbol,\n            params,\n            _args92 = arguments;\n        return _regeneratorRuntime.wrap(function _callee92$(_context92) {\n          while (1) {\n            switch (_context92.prev = _context92.next) {\n              case 0:\n                symbol = _args92.length > 0 && _args92[0] !== undefined ? _args92[0] : false;\n                params = _args92.length > 1 && _args92[1] !== undefined ? _args92[1] : {};\n                // Get all account orders; active, canceled, or filled.\n                if (symbol) params.symbol = symbol;\n                return _context92.abrupt(\"return\", _promiseRequest('v1/allOrders', params, {\n                  base: dapi,\n                  type: 'SIGNED'\n                }));\n\n              case 4:\n              case \"end\":\n                return _context92.stop();\n            }\n          }\n        }, _callee92);\n      }));\n\n      function deliveryAllOrders() {\n        return _deliveryAllOrders.apply(this, arguments);\n      }\n\n      return deliveryAllOrders;\n    }(),\n    deliveryPositionSideDual: function () {\n      var _deliveryPositionSideDual = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee93() {\n        var params,\n            _args93 = arguments;\n        return _regeneratorRuntime.wrap(function _callee93$(_context93) {\n          while (1) {\n            switch (_context93.prev = _context93.next) {\n              case 0:\n                params = _args93.length > 0 && _args93[0] !== undefined ? _args93[0] : {};\n                return _context93.abrupt(\"return\", _promiseRequest('v1/positionSide/dual', params, {\n                  base: dapi,\n                  type: 'SIGNED'\n                }));\n\n              case 2:\n              case \"end\":\n                return _context93.stop();\n            }\n          }\n        }, _callee93);\n      }));\n\n      function deliveryPositionSideDual() {\n        return _deliveryPositionSideDual.apply(this, arguments);\n      }\n\n      return deliveryPositionSideDual;\n    }(),\n    deliveryChangePositionSideDual: function () {\n      var _deliveryChangePositionSideDual = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee94(dualSidePosition) {\n        var params,\n            _args94 = arguments;\n        return _regeneratorRuntime.wrap(function _callee94$(_context94) {\n          while (1) {\n            switch (_context94.prev = _context94.next) {\n              case 0:\n                params = _args94.length > 1 && _args94[1] !== undefined ? _args94[1] : {};\n                params.dualSidePosition = dualSidePosition;\n                return _context94.abrupt(\"return\", _promiseRequest('v1/positionSide/dual', params, {\n                  base: dapi,\n                  type: 'SIGNED',\n                  method: 'POST'\n                }));\n\n              case 3:\n              case \"end\":\n                return _context94.stop();\n            }\n          }\n        }, _callee94);\n      }));\n\n      function deliveryChangePositionSideDual(_x73) {\n        return _deliveryChangePositionSideDual.apply(this, arguments);\n      }\n\n      return deliveryChangePositionSideDual;\n    }(),\n    //** Margin methods */\n\n    /**\r\n     * Creates an order\r\n     * @param {string} side - BUY or SELL\r\n     * @param {string} symbol - the symbol to buy\r\n     * @param {numeric} quantity - the quantity required\r\n     * @param {numeric} price - the price to pay for each unit\r\n     * @param {object} flags - additional buy order flags\r\n     * @param {function} callback - the callback function\r\n     * @param {string} isIsolated - the isolate margin option\r\n     * @return {undefined}\r\n     */\n    mgOrder: function mgOrder(side, symbol, quantity, price) {\n      var flags = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n      var callback = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n      var isIsolated = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 'FALSE';\n      marginOrder(side, symbol, quantity, price, _objectSpread(_objectSpread({}, flags), {}, {\n        isIsolated: isIsolated\n      }), callback);\n    },\n\n    /**\r\n     * Creates a buy order\r\n     * @param {string} symbol - the symbol to buy\r\n     * @param {numeric} quantity - the quantity required\r\n     * @param {numeric} price - the price to pay for each unit\r\n     * @param {object} flags - additional buy order flags\r\n     * @param {function} callback - the callback function\r\n     * @param {string} isIsolated - the isolate margin option\r\n     * @return {undefined}\r\n     */\n    mgBuy: function mgBuy(symbol, quantity, price) {\n      var flags = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var callback = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var isIsolated = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'FALSE';\n      marginOrder('BUY', symbol, quantity, price, _objectSpread(_objectSpread({}, flags), {}, {\n        isIsolated: isIsolated\n      }), callback);\n    },\n\n    /**\r\n     * Creates a sell order\r\n     * @param {string} symbol - the symbol to sell\r\n     * @param {numeric} quantity - the quantity required\r\n     * @param {numeric} price - the price to sell each unit for\r\n     * @param {object} flags - additional order flags\r\n     * @param {function} callback - the callback function\r\n     * @param {string} isIsolated - the isolate margin option\r\n     * @return {undefined}\r\n     */\n    mgSell: function mgSell(symbol, quantity, price) {\n      var flags = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var callback = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var isIsolated = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'FALSE';\n      marginOrder('SELL', symbol, quantity, price, _objectSpread(_objectSpread({}, flags), {}, {\n        isIsolated: isIsolated\n      }), callback);\n    },\n\n    /**\r\n     * Creates a market buy order\r\n     * @param {string} symbol - the symbol to buy\r\n     * @param {numeric} quantity - the quantity required\r\n     * @param {object} flags - additional buy order flags\r\n     * @param {function} callback - the callback function\r\n     * @param {string} isIsolated - the isolate margin option\r\n     * @return {undefined}\r\n     */\n    mgMarketBuy: function mgMarketBuy(symbol, quantity) {\n      var flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        type: 'MARKET'\n      };\n      var callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var isIsolated = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'FALSE';\n\n      if (typeof flags === 'function') {\n        // Accept callback as third parameter\n        callback = flags;\n        flags = {\n          type: 'MARKET'\n        };\n      }\n\n      if (typeof flags.type === 'undefined') flags.type = 'MARKET';\n      marginOrder('BUY', symbol, quantity, 0, _objectSpread(_objectSpread({}, flags), {}, {\n        isIsolated: isIsolated\n      }), callback);\n    },\n\n    /**\r\n     * Creates a market sell order\r\n     * @param {string} symbol - the symbol to sell\r\n     * @param {numeric} quantity - the quantity required\r\n     * @param {object} flags - additional sell order flags\r\n     * @param {function} callback - the callback function\r\n     * @param {string} isIsolated - the isolate margin option\r\n     * @return {undefined}\r\n     */\n    mgMarketSell: function mgMarketSell(symbol, quantity) {\n      var flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        type: 'MARKET'\n      };\n      var callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var isIsolated = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'FALSE';\n\n      if (typeof flags === 'function') {\n        // Accept callback as third parameter\n        callback = flags;\n        flags = {\n          type: 'MARKET'\n        };\n      }\n\n      if (typeof flags.type === 'undefined') flags.type = 'MARKET';\n      marginOrder('SELL', symbol, quantity, 0, _objectSpread(_objectSpread({}, flags), {}, {\n        isIsolated: isIsolated\n      }), callback);\n    },\n\n    /**\r\n     * Cancels an order\r\n     * @param {string} symbol - the symbol to cancel\r\n     * @param {string} orderid - the orderid to cancel\r\n     * @param {function} callback - the callback function\r\n     * @return {undefined}\r\n     */\n    mgCancel: function mgCancel(symbol, orderid) {\n      var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var isIsolated = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'FALSE';\n\n      _signedRequest(sapi + 'v1/margin/order', {\n        symbol: symbol,\n        orderId: orderid,\n        isIsolated: isIsolated\n      }, function (error, data) {\n        if (callback) return callback.call(this, error, data, symbol);\n      }, 'DELETE');\n    },\n\n    /**\r\n    * Gets all order of a given symbol\r\n    * @param {string} symbol - the symbol\r\n    * @param {function} callback - the callback function\r\n    * @param {object} options - additional options\r\n    * @return {promise or undefined} - omitting the callback returns a promise\r\n    */\n    mgAllOrders: function mgAllOrders(symbol, callback) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var parameters = Object.assign({\n        symbol: symbol\n      }, options);\n\n      if (!callback) {\n        return new Promise(function (resolve, reject) {\n          callback = function callback(error, response) {\n            if (error) {\n              reject(error);\n            } else {\n              resolve(response);\n            }\n          };\n\n          _signedRequest(sapi + 'v1/margin/allOrders', parameters, function (error, data) {\n            return callback.call(this, error, data, symbol);\n          });\n        });\n      } else {\n        _signedRequest(sapi + 'v1/margin/allOrders', parameters, function (error, data) {\n          return callback.call(this, error, data, symbol);\n        });\n      }\n    },\n\n    /**\r\n     * Gets the status of an order\r\n     * @param {string} symbol - the symbol to check\r\n     * @param {string} orderid - the orderid to check\r\n     * @param {function} callback - the callback function\r\n     * @param {object} flags - any additional flags\r\n     * @return {undefined}\r\n     */\n    mgOrderStatus: function mgOrderStatus(symbol, orderid, callback) {\n      var flags = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var parameters = Object.assign({\n        symbol: symbol,\n        orderId: orderid\n      }, flags);\n\n      _signedRequest(sapi + 'v1/margin/order', parameters, function (error, data) {\n        if (callback) return callback.call(this, error, data, symbol);\n      });\n    },\n\n    /**\r\n     * Gets open orders\r\n     * @param {string} symbol - the symbol to get\r\n     * @param {function} callback - the callback function\r\n     * @return {undefined}\r\n     */\n    mgOpenOrders: function mgOpenOrders(symbol, callback) {\n      var parameters = symbol ? {\n        symbol: symbol\n      } : {};\n\n      _signedRequest(sapi + 'v1/margin/openOrders', parameters, function (error, data) {\n        return callback.call(this, error, data, symbol);\n      });\n    },\n\n    /**\r\n     * Cancels all order of a given symbol\r\n     * @param {string} symbol - the symbol to cancel all orders for\r\n     * @param {function} callback - the callback function\r\n     * @return {undefined}\r\n     */\n    mgCancelOrders: function mgCancelOrders(symbol) {\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      _signedRequest(sapi + 'v1/margin/openOrders', {\n        symbol: symbol\n      }, function (error, json) {\n        if (json.length === 0) {\n          if (callback) return callback.call(this, 'No orders present for this symbol', {}, symbol);\n        }\n\n        var _iterator28 = _createForOfIteratorHelper(json),\n            _step28;\n\n        try {\n          for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n            var obj = _step28.value;\n            var quantity = obj.origQty - obj.executedQty;\n            Binance.options.log('cancel order: ' + obj.side + ' ' + symbol + ' ' + quantity + ' @ ' + obj.price + ' #' + obj.orderId);\n\n            _signedRequest(sapi + 'v1/margin/order', {\n              symbol: symbol,\n              orderId: obj.orderId\n            }, function (error, data) {\n              if (callback) return callback.call(this, error, data, symbol);\n            }, 'DELETE');\n          }\n        } catch (err) {\n          _iterator28.e(err);\n        } finally {\n          _iterator28.f();\n        }\n      });\n    },\n\n    /**\r\n     * Transfer from main account to margin account\r\n     * @param {string} asset - the asset\r\n     * @param {number} amount - the asset\r\n     * @param {function} callback - the callback function\r\n     * @param {object} options - additional options\r\n     * @return {undefined}\r\n     */\n    mgTransferMainToMargin: function mgTransferMainToMargin(asset, amount, callback) {\n      var parameters = Object.assign({\n        asset: asset,\n        amount: amount,\n        type: 1\n      });\n\n      _signedRequest(sapi + 'v1/margin/transfer', parameters, function (error, data) {\n        if (callback) return callback(error, data);\n      }, 'POST');\n    },\n\n    /**\r\n     * Transfer from margin account to main account\r\n     * @param {string} asset - the asset\r\n     * @param {number} amount - the asset\r\n     * @param {function} callback - the callback function\r\n     * @return {undefined}\r\n     */\n    mgTransferMarginToMain: function mgTransferMarginToMain(asset, amount, callback) {\n      var parameters = Object.assign({\n        asset: asset,\n        amount: amount,\n        type: 2\n      });\n\n      _signedRequest(sapi + 'v1/margin/transfer', parameters, function (error, data) {\n        if (callback) return callback(error, data);\n      }, 'POST');\n    },\n\n    /**\r\n    * Transfer from main account to delivery account\r\n    * @param {string} asset - the asset\r\n    * @param {number} amount - the asset\r\n    * @param {function} callback - the callback function (optionnal)\r\n    * @param {object} options - additional options\r\n    * @return {undefined}\r\n    */\n    transferMainToFutures: function transferMainToFutures(asset, amount, callback) {\n      return transferBetweenMainAndFutures(asset, amount, 1, callback);\n    },\n\n    /**\r\n    * Transfer from delivery account to main account\r\n    * @param {string} asset - the asset\r\n    * @param {number} amount - the asset\r\n    * @param {function} callback - the callback function (optionnal)\r\n    * @return {undefined}\r\n    */\n    transferFuturesToMain: function transferFuturesToMain(asset, amount, callback) {\n      return transferBetweenMainAndFutures(asset, amount, 2, callback);\n    },\n\n    /**\r\n    * Transfer from main account to delivery account\r\n    * @param {string} asset - the asset\r\n    * @param {number} amount - the asset\r\n    * @param {function} callback - the callback function (optionnal)\r\n    * @param {object} options - additional options\r\n    * @return {undefined}\r\n    */\n    transferMainToDelivery: function transferMainToDelivery(asset, amount, callback) {\n      return transferBetweenMainAndFutures(asset, amount, 3, callback);\n    },\n\n    /**\r\n    * Transfer from delivery account to main account\r\n    * @param {string} asset - the asset\r\n    * @param {number} amount - the asset\r\n    * @param {function} callback - the callback function (optionnal)\r\n    * @return {undefined}\r\n    */\n    transferDeliveryToMain: function transferDeliveryToMain(asset, amount, callback) {\n      return transferBetweenMainAndFutures(asset, amount, 4, callback);\n    },\n\n    /**\r\n     * Get maximum transfer-out amount of an asset\r\n     * @param {string} asset - the asset\r\n     * @param {function} callback - the callback function\r\n     * @return {undefined}\r\n     */\n    maxTransferable: function maxTransferable(asset, callback) {\n      _signedRequest(sapi + 'v1/margin/maxTransferable', {\n        asset: asset\n      }, function (error, data) {\n        if (callback) return callback(error, data);\n      });\n    },\n\n    /**\r\n     * Margin account borrow/loan\r\n     * @param {string} asset - the asset\r\n     * @param {number} amount - the asset\r\n     * @param {function} callback - the callback function\r\n     * @param {string} isIsolated - the isolated option\r\n     * @param {string} symbol - symbol for isolated margin\r\n     * @return {undefined}\r\n     */\n    mgBorrow: function mgBorrow(asset, amount, callback) {\n      var isIsolated = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'FALSE';\n      var symbol = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n      var parameters = Object.assign({\n        asset: asset,\n        amount: amount\n      });\n      if (isIsolated === 'TRUE' && !symbol) throw new Error('If \"isIsolated\" = \"TRUE\", \"symbol\" must be sent');\n      var isolatedObj = isIsolated === 'TRUE' ? {\n        isIsolated: isIsolated,\n        symbol: symbol\n      } : {};\n\n      _signedRequest(sapi + 'v1/margin/loan', _objectSpread(_objectSpread({}, parameters), isolatedObj), function (error, data) {\n        if (callback) return callback(error, data);\n      }, 'POST');\n    },\n\n    /**\r\n     * Margin account repay\r\n     * @param {string} asset - the asset\r\n     * @param {number} amount - the asset\r\n     * @param {function} callback - the callback function\r\n     * @param {string} isIsolated - the isolated option\r\n     * @param {string} symbol - symbol for isolated margin\r\n     * @return {undefined}\r\n     */\n    mgRepay: function mgRepay(asset, amount, callback) {\n      var isIsolated = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'FALSE';\n      var symbol = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n      var parameters = Object.assign({\n        asset: asset,\n        amount: amount\n      });\n      if (isIsolated === 'TRUE' && !symbol) throw new Error('If \"isIsolated\" = \"TRUE\", \"symbol\" must be sent');\n      var isolatedObj = isIsolated === 'TRUE' ? {\n        isIsolated: isIsolated,\n        symbol: symbol\n      } : {};\n\n      _signedRequest(sapi + 'v1/margin/repay', _objectSpread(_objectSpread({}, parameters), isolatedObj), function (error, data) {\n        if (callback) return callback(error, data);\n      }, 'POST');\n    },\n\n    /**\r\n     * Margin account details\r\n     * @param {function} callback - the callback function\r\n     * @param {boolean} isIsolated - the callback function\r\n     * @return {undefined}\r\n     */\n    mgAccount: function mgAccount(callback) {\n      var isIsolated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var endpoint = 'v1/margin' + isIsolated ? '/isolated' : '' + '/account';\n\n      _signedRequest(sapi + endpoint, {}, function (error, data) {\n        if (callback) return callback(error, data);\n      });\n    },\n\n    /**\r\n     * Get maximum borrow amount of an asset\r\n     * @param {string} asset - the asset\r\n     * @param {function} callback - the callback function\r\n     * @return {undefined}\r\n     */\n    maxBorrowable: function maxBorrowable(asset, callback) {\n      _signedRequest(sapi + 'v1/margin/maxBorrowable', {\n        asset: asset\n      }, function (error, data) {\n        if (callback) return callback(error, data);\n      });\n    },\n    // Futures WebSocket Functions:\n\n    /**\r\n     * Subscribe to a single futures websocket\r\n     * @param {string} url - the futures websocket endpoint\r\n     * @param {function} callback - optional execution callback\r\n     * @param {object} params - Optional reconnect {boolean} (whether to reconnect on disconnect), openCallback {function}, id {string}\r\n     * @return {WebSocket} the websocket reference\r\n     */\n    futuresSubscribeSingle: function futuresSubscribeSingle(url, callback) {\n      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return _futuresSubscribeSingle(url, callback, params);\n    },\n\n    /**\r\n     * Subscribe to a combined futures websocket\r\n     * @param {string} streams - the list of websocket endpoints to connect to\r\n     * @param {function} callback - optional execution callback\r\n     * @param {object} params - Optional reconnect {boolean} (whether to reconnect on disconnect), openCallback {function}, id {string}\r\n     * @return {WebSocket} the websocket reference\r\n     */\n    futuresSubscribe: function futuresSubscribe(streams, callback) {\n      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return _futuresSubscribe(streams, callback, params);\n    },\n\n    /**\r\n     * Returns the known futures websockets subscriptions\r\n     * @return {array} array of futures websocket subscriptions\r\n     */\n    futuresSubscriptions: function futuresSubscriptions() {\n      return Binance.futuresSubscriptions;\n    },\n\n    /**\r\n     * Terminates a futures websocket\r\n     * @param {string} endpoint - the string associated with the endpoint\r\n     * @return {undefined}\r\n     */\n    futuresTerminate: function futuresTerminate(endpoint) {\n      if (Binance.options.verbose) Binance.options.log('Futures WebSocket terminating:', endpoint);\n      return _futuresTerminate(endpoint);\n    },\n\n    /**\r\n     * Futures WebSocket aggregated trades\r\n     * @param {array/string} symbols - an array or string of symbols to query\r\n     * @param {function} callback - callback function\r\n     * @return {string} the websocket endpoint\r\n     */\n    futuresAggTradeStream: function futuresAggTradeStream(symbols, callback) {\n      var reconnect = function reconnect() {\n        if (Binance.options.reconnect) futuresAggTradeStream(symbols, callback);\n      };\n\n      var subscription,\n          cleanCallback = function cleanCallback(data) {\n        return callback(fAggTradeConvertData(data));\n      };\n\n      if (Array.isArray(symbols)) {\n        if (!isArrayUnique(symbols)) throw Error('futuresAggTradeStream: \"symbols\" cannot contain duplicate elements.');\n        var streams = symbols.map(function (symbol) {\n          return symbol.toLowerCase() + '@aggTrade';\n        });\n        subscription = _futuresSubscribe(streams, cleanCallback, {\n          reconnect: reconnect\n        });\n      } else {\n        var symbol = symbols;\n        subscription = _futuresSubscribeSingle(symbol.toLowerCase() + '@aggTrade', cleanCallback, {\n          reconnect: reconnect\n        });\n      }\n\n      return subscription.endpoint;\n    },\n\n    /**\r\n     * Futures WebSocket mark price\r\n     * @param {symbol} symbol name or false. can also be a callback\r\n     * @param {function} callback - callback function\r\n     * @param {string} speed - 1 second updates. leave blank for default 3 seconds\r\n     * @return {string} the websocket endpoint\r\n     */\n    futuresMarkPriceStream: function fMarkPriceStream() {\n      var symbol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : console.log;\n      var speed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '@1s';\n\n      if (typeof symbol == 'function') {\n        callback = symbol;\n        symbol = false;\n      }\n\n      var reconnect = function reconnect() {\n        if (Binance.options.reconnect) fMarkPriceStream(symbol, callback, speed);\n      };\n\n      var endpoint = symbol ? \"\".concat(symbol.toLowerCase(), \"@markPrice\") : '!markPrice@arr';\n\n      var subscription = _futuresSubscribeSingle(endpoint + speed, function (data) {\n        return callback(fMarkPriceConvertData(data));\n      }, {\n        reconnect: reconnect\n      });\n\n      return subscription.endpoint;\n    },\n\n    /**\r\n     * Futures WebSocket liquidations stream\r\n     * @param {symbol} symbol name or false. can also be a callback\r\n     * @param {function} callback - callback function\r\n     * @return {string} the websocket endpoint\r\n     */\n    futuresLiquidationStream: function fLiquidationStream() {\n      var symbol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : console.log;\n\n      if (typeof symbol == 'function') {\n        callback = symbol;\n        symbol = false;\n      }\n\n      var reconnect = function reconnect() {\n        if (Binance.options.reconnect) fLiquidationStream(symbol, callback);\n      };\n\n      var endpoint = symbol ? \"\".concat(symbol.toLowerCase(), \"@forceOrder\") : '!forceOrder@arr';\n\n      var subscription = _futuresSubscribeSingle(endpoint, function (data) {\n        return callback(fLiquidationConvertData(data));\n      }, {\n        reconnect: reconnect\n      });\n\n      return subscription.endpoint;\n    },\n\n    /**\r\n     * Futures WebSocket prevDay ticker\r\n     * @param {symbol} symbol name or false. can also be a callback\r\n     * @param {function} callback - callback function\r\n     * @return {string} the websocket endpoint\r\n     */\n    futuresTickerStream: function fTickerStream() {\n      var symbol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : console.log;\n\n      if (typeof symbol == 'function') {\n        callback = symbol;\n        symbol = false;\n      }\n\n      var reconnect = function reconnect() {\n        if (Binance.options.reconnect) fTickerStream(symbol, callback);\n      };\n\n      var endpoint = symbol ? \"\".concat(symbol.toLowerCase(), \"@ticker\") : '!ticker@arr';\n\n      var subscription = _futuresSubscribeSingle(endpoint, function (data) {\n        return callback(fTickerConvertData(data));\n      }, {\n        reconnect: reconnect\n      });\n\n      return subscription.endpoint;\n    },\n\n    /**\r\n     * Futures WebSocket miniTicker\r\n     * @param {symbol} symbol name or false. can also be a callback\r\n     * @param {function} callback - callback function\r\n     * @return {string} the websocket endpoint\r\n     */\n    futuresMiniTickerStream: function fMiniTickerStream() {\n      var symbol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : console.log;\n\n      if (typeof symbol == 'function') {\n        callback = symbol;\n        symbol = false;\n      }\n\n      var reconnect = function reconnect() {\n        if (Binance.options.reconnect) fMiniTickerStream(symbol, callback);\n      };\n\n      var endpoint = symbol ? \"\".concat(symbol.toLowerCase(), \"@miniTicker\") : '!miniTicker@arr';\n\n      var subscription = _futuresSubscribeSingle(endpoint, function (data) {\n        return callback(fMiniTickerConvertData(data));\n      }, {\n        reconnect: reconnect\n      });\n\n      return subscription.endpoint;\n    },\n\n    /**\r\n     * Futures WebSocket bookTicker\r\n     * @param {symbol} symbol name or false. can also be a callback\r\n     * @param {function} callback - callback function\r\n     * @return {string} the websocket endpoint\r\n     */\n    futuresBookTickerStream: function fBookTickerStream() {\n      var symbol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : console.log;\n\n      if (typeof symbol == 'function') {\n        callback = symbol;\n        symbol = false;\n      }\n\n      var reconnect = function reconnect() {\n        if (Binance.options.reconnect) fBookTickerStream(symbol, callback);\n      };\n\n      var endpoint = symbol ? \"\".concat(symbol.toLowerCase(), \"@bookTicker\") : '!bookTicker';\n\n      var subscription = _futuresSubscribeSingle(endpoint, function (data) {\n        return callback(fBookTickerConvertData(data));\n      }, {\n        reconnect: reconnect\n      });\n\n      return subscription.endpoint;\n    },\n\n    /**\r\n     * Websocket futures klines\r\n     * @param {array/string} symbols - an array or string of symbols to query\r\n     * @param {string} interval - the time interval\r\n     * @param {function} callback - callback function\r\n     * @param {int} limit - maximum results, no more than 1000\r\n     * @return {string} the websocket endpoint\r\n     */\n    futuresChart: function () {\n      var _futuresChart = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee96(symbols, interval, callback) {\n        var limit,\n            reconnect,\n            futuresChartInit,\n            handleFuturesKlineStream,\n            getFuturesKlineSnapshot,\n            subscription,\n            streams,\n            symbol,\n            _args96 = arguments;\n        return _regeneratorRuntime.wrap(function _callee96$(_context96) {\n          while (1) {\n            switch (_context96.prev = _context96.next) {\n              case 0:\n                limit = _args96.length > 3 && _args96[3] !== undefined ? _args96[3] : 500;\n\n                reconnect = function reconnect() {\n                  if (Binance.options.reconnect) futuresChart(symbols, interval, callback, limit);\n                };\n\n                futuresChartInit = function futuresChartInit(symbol) {\n                  if (typeof Binance.futuresMeta[symbol] === 'undefined') Binance.futuresMeta[symbol] = {};\n                  if (typeof Binance.futuresMeta[symbol][interval] === 'undefined') Binance.futuresMeta[symbol][interval] = {};\n                  if (typeof Binance.futuresTicks[symbol] === 'undefined') Binance.futuresTicks[symbol] = {};\n                  if (typeof Binance.futuresTicks[symbol][interval] === 'undefined') Binance.futuresTicks[symbol][interval] = {};\n                  if (typeof Binance.futuresRealtime[symbol] === 'undefined') Binance.futuresRealtime[symbol] = {};\n                  if (typeof Binance.futuresRealtime[symbol][interval] === 'undefined') Binance.futuresRealtime[symbol][interval] = {};\n                  if (typeof Binance.futuresKlineQueue[symbol] === 'undefined') Binance.futuresKlineQueue[symbol] = {};\n                  if (typeof Binance.futuresKlineQueue[symbol][interval] === 'undefined') Binance.futuresKlineQueue[symbol][interval] = [];\n                  Binance.futuresMeta[symbol][interval].timestamp = 0;\n                };\n\n                handleFuturesKlineStream = function handleFuturesKlineStream(kline) {\n                  var symbol = kline.s,\n                      interval = kline.k.i;\n\n                  if (!Binance.futuresMeta[symbol][interval].timestamp) {\n                    if (typeof Binance.futuresKlineQueue[symbol][interval] !== 'undefined' && kline !== null) {\n                      Binance.futuresKlineQueue[symbol][interval].push(kline);\n                    }\n                  } else {\n                    //Binance.options.log('futures klines at ' + kline.k.t);\n                    futuresKlineHandler(symbol, kline);\n                    if (callback) callback(symbol, interval, futuresKlineConcat(symbol, interval));\n                  }\n                };\n\n                getFuturesKlineSnapshot = /*#__PURE__*/function () {\n                  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee95(symbol) {\n                    var limit,\n                        data,\n                        _iterator29,\n                        _step29,\n                        kline,\n                        _args95 = arguments;\n\n                    return _regeneratorRuntime.wrap(function _callee95$(_context95) {\n                      while (1) {\n                        switch (_context95.prev = _context95.next) {\n                          case 0:\n                            limit = _args95.length > 1 && _args95[1] !== undefined ? _args95[1] : 500;\n                            _context95.next = 3;\n                            return _promiseRequest('v1/klines', {\n                              symbol: symbol,\n                              interval: interval,\n                              limit: limit\n                            }, {\n                              base: fapi\n                            });\n\n                          case 3:\n                            data = _context95.sent;\n                            futuresKlineData(symbol, interval, data); //Binance.options.log('/futures klines at ' + Binance.futuresMeta[symbol][interval].timestamp);\n\n                            if (typeof Binance.futuresKlineQueue[symbol][interval] !== 'undefined') {\n                              _iterator29 = _createForOfIteratorHelper(Binance.futuresKlineQueue[symbol][interval]);\n\n                              try {\n                                for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n                                  kline = _step29.value;\n                                  futuresKlineHandler(symbol, kline, Binance.futuresMeta[symbol][interval].timestamp);\n                                }\n                              } catch (err) {\n                                _iterator29.e(err);\n                              } finally {\n                                _iterator29.f();\n                              }\n\n                              delete Binance.futuresKlineQueue[symbol][interval];\n                            }\n\n                            if (callback) callback(symbol, interval, futuresKlineConcat(symbol, interval));\n\n                          case 7:\n                          case \"end\":\n                            return _context95.stop();\n                        }\n                      }\n                    }, _callee95);\n                  }));\n\n                  return function getFuturesKlineSnapshot(_x77) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }();\n\n                if (!Array.isArray(symbols)) {\n                  _context96.next = 14;\n                  break;\n                }\n\n                if (isArrayUnique(symbols)) {\n                  _context96.next = 8;\n                  break;\n                }\n\n                throw Error('futuresChart: \"symbols\" array cannot contain duplicate elements.');\n\n              case 8:\n                symbols.forEach(futuresChartInit);\n                streams = symbols.map(function (symbol) {\n                  return \"\".concat(symbol.toLowerCase(), \"@kline_\").concat(interval);\n                });\n                subscription = _futuresSubscribe(streams, handleFuturesKlineStream, reconnect);\n                symbols.forEach(function (element) {\n                  return getFuturesKlineSnapshot(element, limit);\n                });\n                _context96.next = 18;\n                break;\n\n              case 14:\n                symbol = symbols;\n                futuresChartInit(symbol);\n                subscription = _futuresSubscribeSingle(symbol.toLowerCase() + '@kline_' + interval, handleFuturesKlineStream, reconnect);\n                getFuturesKlineSnapshot(symbol, limit);\n\n              case 18:\n                return _context96.abrupt(\"return\", subscription.endpoint);\n\n              case 19:\n              case \"end\":\n                return _context96.stop();\n            }\n          }\n        }, _callee96);\n      }));\n\n      function futuresChart(_x74, _x75, _x76) {\n        return _futuresChart.apply(this, arguments);\n      }\n\n      return futuresChart;\n    }(),\n\n    /**\r\n     * Websocket futures candlesticks\r\n     * @param {array/string} symbols - an array or string of symbols to query\r\n     * @param {string} interval - the time interval\r\n     * @param {function} callback - callback function\r\n     * @return {string} the websocket endpoint\r\n     */\n    futuresCandlesticks: function futuresCandlesticks(symbols, interval, callback) {\n      var reconnect = function reconnect() {\n        if (Binance.options.reconnect) futuresCandlesticks(symbols, interval, callback);\n      };\n\n      var subscription;\n\n      if (Array.isArray(symbols)) {\n        if (!isArrayUnique(symbols)) throw Error('futuresCandlesticks: \"symbols\" array cannot contain duplicate elements.');\n        var streams = symbols.map(function (symbol) {\n          return symbol.toLowerCase() + '@kline_' + interval;\n        });\n        subscription = _futuresSubscribe(streams, callback, {\n          reconnect: reconnect\n        });\n      } else {\n        var symbol = symbols.toLowerCase();\n        subscription = _futuresSubscribeSingle(symbol + '@kline_' + interval, callback, {\n          reconnect: reconnect\n        });\n      }\n\n      return subscription.endpoint;\n    },\n    // Delivery WebSocket Functions:\n\n    /**\r\n     * Subscribe to a single delivery websocket\r\n     * @param {string} url - the delivery websocket endpoint\r\n     * @param {function} callback - optional execution callback\r\n     * @param {object} params - Optional reconnect {boolean} (whether to reconnect on disconnect), openCallback {function}, id {string}\r\n     * @return {WebSocket} the websocket reference\r\n     */\n    deliverySubscribeSingle: function deliverySubscribeSingle(url, callback) {\n      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return _deliverySubscribeSingle(url, callback, params);\n    },\n\n    /**\r\n     * Subscribe to a combined delivery websocket\r\n     * @param {string} streams - the list of websocket endpoints to connect to\r\n     * @param {function} callback - optional execution callback\r\n     * @param {object} params - Optional reconnect {boolean} (whether to reconnect on disconnect), openCallback {function}, id {string}\r\n     * @return {WebSocket} the websocket reference\r\n     */\n    deliverySubscribe: function deliverySubscribe(streams, callback) {\n      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return _deliverySubscribe(streams, callback, params);\n    },\n\n    /**\r\n     * Returns the known delivery websockets subscriptions\r\n     * @return {array} array of delivery websocket subscriptions\r\n     */\n    deliverySubscriptions: function deliverySubscriptions() {\n      return Binance.deliverySubscriptions;\n    },\n\n    /**\r\n     * Terminates a delivery websocket\r\n     * @param {string} endpoint - the string associated with the endpoint\r\n     * @return {undefined}\r\n     */\n    deliveryTerminate: function deliveryTerminate(endpoint) {\n      if (Binance.options.verbose) Binance.options.log('Delivery WebSocket terminating:', endpoint);\n      return _deliveryTerminate(endpoint);\n    },\n\n    /**\r\n     * Delivery WebSocket aggregated trades\r\n     * @param {array/string} symbols - an array or string of symbols to query\r\n     * @param {function} callback - callback function\r\n     * @return {string} the websocket endpoint\r\n     */\n    deliveryAggTradeStream: function deliveryAggTradeStream(symbols, callback) {\n      var reconnect = function reconnect() {\n        if (Binance.options.reconnect) deliveryAggTradeStream(symbols, callback);\n      };\n\n      var subscription,\n          cleanCallback = function cleanCallback(data) {\n        return callback(dAggTradeConvertData(data));\n      };\n\n      if (Array.isArray(symbols)) {\n        if (!isArrayUnique(symbols)) throw Error('deliveryAggTradeStream: \"symbols\" cannot contain duplicate elements.');\n        var streams = symbols.map(function (symbol) {\n          return symbol.toLowerCase() + '@aggTrade';\n        });\n        subscription = _deliverySubscribe(streams, cleanCallback, {\n          reconnect: reconnect\n        });\n      } else {\n        var symbol = symbols;\n        subscription = _deliverySubscribeSingle(symbol.toLowerCase() + '@aggTrade', cleanCallback, {\n          reconnect: reconnect\n        });\n      }\n\n      return subscription.endpoint;\n    },\n\n    /**\r\n     * Delivery WebSocket mark price\r\n     * @param {symbol} symbol name or false. can also be a callback\r\n     * @param {function} callback - callback function\r\n     * @param {string} speed - 1 second updates. leave blank for default 3 seconds\r\n     * @return {string} the websocket endpoint\r\n     */\n    deliveryMarkPriceStream: function dMarkPriceStream() {\n      var symbol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : console.log;\n      var speed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '@1s';\n\n      if (typeof symbol == 'function') {\n        callback = symbol;\n        symbol = false;\n      }\n\n      var reconnect = function reconnect() {\n        if (Binance.options.reconnect) dMarkPriceStream(symbol, callback);\n      };\n\n      var endpoint = symbol ? \"\".concat(symbol.toLowerCase(), \"@markPrice\") : '!markPrice@arr';\n\n      var subscription = _deliverySubscribeSingle(endpoint + speed, function (data) {\n        return callback(dMarkPriceConvertData(data));\n      }, {\n        reconnect: reconnect\n      });\n\n      return subscription.endpoint;\n    },\n\n    /**\r\n     * Delivery WebSocket liquidations stream\r\n     * @param {symbol} symbol name or false. can also be a callback\r\n     * @param {function} callback - callback function\r\n     * @return {string} the websocket endpoint\r\n     */\n    deliveryLiquidationStream: function dLiquidationStream() {\n      var symbol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : console.log;\n\n      if (typeof symbol == 'function') {\n        callback = symbol;\n        symbol = false;\n      }\n\n      var reconnect = function reconnect() {\n        if (Binance.options.reconnect) dLiquidationStream(symbol, callback);\n      };\n\n      var endpoint = symbol ? \"\".concat(symbol.toLowerCase(), \"@forceOrder\") : '!forceOrder@arr';\n\n      var subscription = _deliverySubscribeSingle(endpoint, function (data) {\n        return callback(dLiquidationConvertData(data));\n      }, {\n        reconnect: reconnect\n      });\n\n      return subscription.endpoint;\n    },\n\n    /**\r\n     * Delivery WebSocket prevDay ticker\r\n     * @param {symbol} symbol name or false. can also be a callback\r\n     * @param {function} callback - callback function\r\n     * @return {string} the websocket endpoint\r\n     */\n    deliveryTickerStream: function dTickerStream() {\n      var symbol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : console.log;\n\n      if (typeof symbol == 'function') {\n        callback = symbol;\n        symbol = false;\n      }\n\n      var reconnect = function reconnect() {\n        if (Binance.options.reconnect) dTickerStream(symbol, callback);\n      };\n\n      var endpoint = symbol ? \"\".concat(symbol.toLowerCase(), \"@ticker\") : '!ticker@arr';\n\n      var subscription = _deliverySubscribeSingle(endpoint, function (data) {\n        return callback(dTickerConvertData(data));\n      }, {\n        reconnect: reconnect\n      });\n\n      return subscription.endpoint;\n    },\n\n    /**\r\n     * Delivery WebSocket miniTicker\r\n     * @param {symbol} symbol name or false. can also be a callback\r\n     * @param {function} callback - callback function\r\n     * @return {string} the websocket endpoint\r\n     */\n    deliveryMiniTickerStream: function dMiniTickerStream() {\n      var symbol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : console.log;\n\n      if (typeof symbol == 'function') {\n        callback = symbol;\n        symbol = false;\n      }\n\n      var reconnect = function reconnect() {\n        if (Binance.options.reconnect) dMiniTickerStream(symbol, callback);\n      };\n\n      var endpoint = symbol ? \"\".concat(symbol.toLowerCase(), \"@miniTicker\") : '!miniTicker@arr';\n\n      var subscription = _deliverySubscribeSingle(endpoint, function (data) {\n        return callback(dMiniTickerConvertData(data));\n      }, {\n        reconnect: reconnect\n      });\n\n      return subscription.endpoint;\n    },\n\n    /**\r\n     * Delivery WebSocket bookTicker\r\n     * @param {symbol} symbol name or false. can also be a callback\r\n     * @param {function} callback - callback function\r\n     * @return {string} the websocket endpoint\r\n     */\n    deliveryBookTickerStream: function dBookTickerStream() {\n      var symbol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : console.log;\n\n      if (typeof symbol == 'function') {\n        callback = symbol;\n        symbol = false;\n      }\n\n      var reconnect = function reconnect() {\n        if (Binance.options.reconnect) dBookTickerStream(symbol, callback);\n      };\n\n      var endpoint = symbol ? \"\".concat(symbol.toLowerCase(), \"@bookTicker\") : '!bookTicker';\n\n      var subscription = _deliverySubscribeSingle(endpoint, function (data) {\n        return callback(dBookTickerConvertData(data));\n      }, {\n        reconnect: reconnect\n      });\n\n      return subscription.endpoint;\n    },\n\n    /**\r\n     * Websocket delivery klines\r\n     * @param {array/string} symbols - an array or string of symbols to query\r\n     * @param {string} interval - the time interval\r\n     * @param {function} callback - callback function\r\n     * @param {int} limit - maximum results, no more than 1000\r\n     * @return {string} the websocket endpoint\r\n     */\n    deliveryChart: function () {\n      var _deliveryChart = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee98(symbols, interval, callback) {\n        var limit,\n            reconnect,\n            deliveryChartInit,\n            handleDeliveryKlineStream,\n            getDeliveryKlineSnapshot,\n            subscription,\n            streams,\n            symbol,\n            _args98 = arguments;\n        return _regeneratorRuntime.wrap(function _callee98$(_context98) {\n          while (1) {\n            switch (_context98.prev = _context98.next) {\n              case 0:\n                limit = _args98.length > 3 && _args98[3] !== undefined ? _args98[3] : 500;\n\n                reconnect = function reconnect() {\n                  if (Binance.options.reconnect) deliveryChart(symbols, interval, callback, limit);\n                };\n\n                deliveryChartInit = function deliveryChartInit(symbol) {\n                  if (typeof Binance.deliveryMeta[symbol] === 'undefined') Binance.deliveryMeta[symbol] = {};\n                  if (typeof Binance.deliveryMeta[symbol][interval] === 'undefined') Binance.deliveryMeta[symbol][interval] = {};\n                  if (typeof Binance.deliveryTicks[symbol] === 'undefined') Binance.deliveryTicks[symbol] = {};\n                  if (typeof Binance.deliveryTicks[symbol][interval] === 'undefined') Binance.deliveryTicks[symbol][interval] = {};\n                  if (typeof Binance.deliveryRealtime[symbol] === 'undefined') Binance.deliveryRealtime[symbol] = {};\n                  if (typeof Binance.deliveryRealtime[symbol][interval] === 'undefined') Binance.deliveryRealtime[symbol][interval] = {};\n                  if (typeof Binance.deliveryKlineQueue[symbol] === 'undefined') Binance.deliveryKlineQueue[symbol] = {};\n                  if (typeof Binance.deliveryKlineQueue[symbol][interval] === 'undefined') Binance.deliveryKlineQueue[symbol][interval] = [];\n                  Binance.deliveryMeta[symbol][interval].timestamp = 0;\n                };\n\n                handleDeliveryKlineStream = function handleDeliveryKlineStream(kline) {\n                  var symbol = kline.s,\n                      interval = kline.k.i;\n\n                  if (!Binance.deliveryMeta[symbol][interval].timestamp) {\n                    if (typeof Binance.deliveryKlineQueue[symbol][interval] !== 'undefined' && kline !== null) {\n                      Binance.deliveryKlineQueue[symbol][interval].push(kline);\n                    }\n                  } else {\n                    //Binance.options.log('futures klines at ' + kline.k.t);\n                    deliveryKlineHandler(symbol, kline);\n                    if (callback) callback(symbol, interval, deliveryKlineConcat(symbol, interval));\n                  }\n                };\n\n                getDeliveryKlineSnapshot = /*#__PURE__*/function () {\n                  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee97(symbol) {\n                    var limit,\n                        data,\n                        _iterator30,\n                        _step30,\n                        kline,\n                        _args97 = arguments;\n\n                    return _regeneratorRuntime.wrap(function _callee97$(_context97) {\n                      while (1) {\n                        switch (_context97.prev = _context97.next) {\n                          case 0:\n                            limit = _args97.length > 1 && _args97[1] !== undefined ? _args97[1] : 500;\n                            _context97.next = 3;\n                            return _promiseRequest('v1/klines', {\n                              symbol: symbol,\n                              interval: interval,\n                              limit: limit\n                            }, {\n                              base: fapi\n                            });\n\n                          case 3:\n                            data = _context97.sent;\n                            deliveryKlineData(symbol, interval, data); //Binance.options.log('/delivery klines at ' + Binance.deliveryMeta[symbol][interval].timestamp);\n\n                            if (typeof Binance.deliveryKlineQueue[symbol][interval] !== 'undefined') {\n                              _iterator30 = _createForOfIteratorHelper(Binance.deliveryKlineQueue[symbol][interval]);\n\n                              try {\n                                for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {\n                                  kline = _step30.value;\n                                  deliveryKlineHandler(symbol, kline, Binance.deliveryMeta[symbol][interval].timestamp);\n                                }\n                              } catch (err) {\n                                _iterator30.e(err);\n                              } finally {\n                                _iterator30.f();\n                              }\n\n                              delete Binance.deliveryKlineQueue[symbol][interval];\n                            }\n\n                            if (callback) callback(symbol, interval, deliveryKlineConcat(symbol, interval));\n\n                          case 7:\n                          case \"end\":\n                            return _context97.stop();\n                        }\n                      }\n                    }, _callee97);\n                  }));\n\n                  return function getDeliveryKlineSnapshot(_x81) {\n                    return _ref5.apply(this, arguments);\n                  };\n                }();\n\n                if (!Array.isArray(symbols)) {\n                  _context98.next = 14;\n                  break;\n                }\n\n                if (isArrayUnique(symbols)) {\n                  _context98.next = 8;\n                  break;\n                }\n\n                throw Error('deliveryChart: \"symbols\" array cannot contain duplicate elements.');\n\n              case 8:\n                symbols.forEach(deliveryChartInit);\n                streams = symbols.map(function (symbol) {\n                  return \"\".concat(symbol.toLowerCase(), \"@kline_\").concat(interval);\n                });\n                subscription = _deliverySubscribe(streams, handleDeliveryKlineStream, reconnect);\n                symbols.forEach(function (element) {\n                  return getDeliveryKlineSnapshot(element, limit);\n                });\n                _context98.next = 18;\n                break;\n\n              case 14:\n                symbol = symbols;\n                deliveryChartInit(symbol);\n                subscription = _deliverySubscribeSingle(symbol.toLowerCase() + '@kline_' + interval, handleDeliveryKlineStream, reconnect);\n                getDeliveryKlineSnapshot(symbol, limit);\n\n              case 18:\n                return _context98.abrupt(\"return\", subscription.endpoint);\n\n              case 19:\n              case \"end\":\n                return _context98.stop();\n            }\n          }\n        }, _callee98);\n      }));\n\n      function deliveryChart(_x78, _x79, _x80) {\n        return _deliveryChart.apply(this, arguments);\n      }\n\n      return deliveryChart;\n    }(),\n\n    /**\r\n     * Websocket delivery candlesticks\r\n     * @param {array/string} symbols - an array or string of symbols to query\r\n     * @param {string} interval - the time interval\r\n     * @param {function} callback - callback function\r\n     * @return {string} the websocket endpoint\r\n     */\n    deliveryCandlesticks: function deliveryCandlesticks(symbols, interval, callback) {\n      var reconnect = function reconnect() {\n        if (Binance.options.reconnect) deliveryCandlesticks(symbols, interval, callback);\n      };\n\n      var subscription;\n\n      if (Array.isArray(symbols)) {\n        if (!isArrayUnique(symbols)) throw Error('deliveryCandlesticks: \"symbols\" array cannot contain duplicate elements.');\n        var streams = symbols.map(function (symbol) {\n          return symbol.toLowerCase() + '@kline_' + interval;\n        });\n        subscription = _deliverySubscribe(streams, callback, {\n          reconnect: reconnect\n        });\n      } else {\n        var symbol = symbols.toLowerCase();\n        subscription = _deliverySubscribeSingle(symbol + '@kline_' + interval, callback, {\n          reconnect: reconnect\n        });\n      }\n\n      return subscription.endpoint;\n    },\n    websockets: {\n      /**\r\n       * Userdata websockets function\r\n       * @param {function} callback - the callback function\r\n       * @param {function} execution_callback - optional execution callback\r\n       * @param {function} subscribed_callback - subscription callback\r\n       * @param {function} list_status_callback - status callback\r\n       * @return {undefined}\r\n       */\n      userData: function userData(callback) {\n        var execution_callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var subscribed_callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var list_status_callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n        var reconnect = function reconnect() {\n          if (Binance.options.reconnect) userData(callback, execution_callback, subscribed_callback);\n        };\n\n        apiRequest(base + 'v3/userDataStream', {}, function (error, response) {\n          Binance.options.listenKey = response.listenKey;\n          setTimeout(function userDataKeepAlive() {\n            // keepalive\n            try {\n              apiRequest(base + 'v3/userDataStream?listenKey=' + Binance.options.listenKey, {}, function (err) {\n                if (err) setTimeout(userDataKeepAlive, 60000); // retry in 1 minute\n                else setTimeout(userDataKeepAlive, 60 * 30 * 1000); // 30 minute keepalive\n              }, 'PUT');\n            } catch (error) {\n              setTimeout(userDataKeepAlive, 60000); // retry in 1 minute\n            }\n          }, 60 * 30 * 1000); // 30 minute keepalive\n\n          Binance.options.balance_callback = callback;\n          Binance.options.execution_callback = execution_callback;\n          Binance.options.list_status_callback = list_status_callback;\n\n          var subscription = _subscribe(Binance.options.listenKey, userDataHandler, reconnect);\n\n          if (subscribed_callback) subscribed_callback(subscription.endpoint);\n        }, 'POST');\n      },\n\n      /**\r\n       * Margin Userdata websockets function\r\n       * @param {function} callback - the callback function\r\n       * @param {function} execution_callback - optional execution callback\r\n       * @param {function} subscribed_callback - subscription callback\r\n       * @param {function} list_status_callback - status callback\r\n       * @return {undefined}\r\n       */\n      userMarginData: function userMarginData(callback) {\n        var execution_callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var subscribed_callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var list_status_callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n        var reconnect = function reconnect() {\n          if (Binance.options.reconnect) userMarginData(callback, execution_callback, subscribed_callback);\n        };\n\n        apiRequest(sapi + 'v1/userDataStream', {}, function (error, response) {\n          Binance.options.listenMarginKey = response.listenKey;\n          setTimeout(function userDataKeepAlive() {\n            // keepalive\n            try {\n              apiRequest(sapi + 'v1/userDataStream?listenKey=' + Binance.options.listenMarginKey, {}, function (err) {\n                if (err) setTimeout(userDataKeepAlive, 60000); // retry in 1 minute\n                else setTimeout(userDataKeepAlive, 60 * 30 * 1000); // 30 minute keepalive\n              }, 'PUT');\n            } catch (error) {\n              setTimeout(userDataKeepAlive, 60000); // retry in 1 minute\n            }\n          }, 60 * 30 * 1000); // 30 minute keepalive\n\n          Binance.options.margin_balance_callback = callback;\n          Binance.options.margin_execution_callback = execution_callback;\n          Binance.options.margin_list_status_callback = list_status_callback;\n\n          var subscription = _subscribe(Binance.options.listenMarginKey, userMarginDataHandler, reconnect);\n\n          if (subscribed_callback) subscribed_callback(subscription.endpoint);\n        }, 'POST');\n      },\n\n      /**\r\n       * Future Userdata websockets function\r\n       * @param {function} margin_call_callback\r\n       * @param {function} account_update_callback\r\n       * @param {function} order_update_callback\r\n       * @param {Function} subscribed_callback - subscription callback\r\n       */\n      userFutureData: function userFutureData(margin_call_callback) {\n        var account_update_callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n        var order_update_callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n        var subscribed_callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n        var account_config_update_callback = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\n        var url = Binance.options.test ? fapiTest : fapi;\n\n        var reconnect = function reconnect() {\n          if (Binance.options.reconnect) userFutureData(margin_call_callback, account_update_callback, order_update_callback, subscribed_callback);\n        };\n\n        apiRequest(url + 'v1/listenKey', {}, function (error, response) {\n          Binance.options.listenFutureKey = response.listenKey;\n          setTimeout(function userDataKeepAlive() {\n            // keepalive\n            try {\n              apiRequest(url + 'v1/listenKey?listenKey=' + Binance.options.listenFutureKey, {}, function (err) {\n                if (err) setTimeout(userDataKeepAlive, 60000); // retry in 1 minute\n                else setTimeout(userDataKeepAlive, 60 * 30 * 1000); // 30 minute keepalive\n              }, 'PUT');\n            } catch (error) {\n              setTimeout(userDataKeepAlive, 60000); // retry in 1 minute\n            }\n          }, 60 * 30 * 1000); // 30 minute keepalive\n\n          Binance.options.future_margin_call_callback = margin_call_callback;\n          Binance.options.future_account_update_callback = account_update_callback;\n          Binance.options.future_account_config_update_callback = account_config_update_callback;\n          Binance.options.future_order_update_callback = order_update_callback;\n\n          var subscription = _futuresSubscribe(Binance.options.listenFutureKey, userFutureDataHandler, {\n            reconnect: reconnect\n          });\n\n          if (subscribed_callback) subscribed_callback(subscription.endpoint);\n        }, 'POST');\n      },\n\n      /**\r\n      * Delivery Userdata websockets function\r\n      * @param {function} margin_call_callback\r\n      * @param {function} account_update_callback\r\n      * @param {function} order_update_callback\r\n      * @param {Function} subscribed_callback - subscription callback\r\n      */\n      userDeliveryData: function userDeliveryData(margin_call_callback) {\n        var account_update_callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n        var order_update_callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n        var subscribed_callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n        var url = Binance.options.test ? dapiTest : dapi;\n\n        var reconnect = function reconnect() {\n          if (Binance.options.reconnect) userDeliveryData(margin_call_callback, account_update_callback, order_update_callback, subscribed_callback);\n        };\n\n        apiRequest(url + \"v1/listenKey\", {}, function (error, response) {\n          Binance.options.listenDeliveryKey = response.listenKey;\n          setTimeout(function userDataKeepAlive() {\n            // keepalive\n            try {\n              apiRequest(url + \"v1/listenKey?listenKey=\" + Binance.options.listenDeliveryKey, {}, function (err) {\n                if (err) setTimeout(userDataKeepAlive, 60000); // retry in 1 minute\n                else setTimeout(userDataKeepAlive, 60 * 30 * 1000); // 30 minute keepalive\n              }, \"PUT\");\n            } catch (error) {\n              setTimeout(userDataKeepAlive, 60000); // retry in 1 minute\n            }\n          }, 60 * 30 * 1000); // 30 minute keepalive\n\n          Binance.options.delivery_margin_call_callback = margin_call_callback;\n          Binance.options.delivery_account_update_callback = account_update_callback;\n          Binance.options.delivery_order_update_callback = order_update_callback;\n\n          var subscription = _deliverySubscribe(Binance.options.listenDeliveryKey, userDeliveryDataHandler, {\n            reconnect: reconnect\n          });\n\n          if (subscribed_callback) subscribed_callback(subscription.endpoint);\n        }, \"POST\");\n      },\n\n      /**\r\n       * Subscribe to a generic websocket\r\n       * @param {string} url - the websocket endpoint\r\n       * @param {function} callback - optional execution callback\r\n       * @param {boolean} reconnect - subscription callback\r\n       * @return {WebSocket} the websocket reference\r\n       */\n      subscribe: function subscribe(url, callback) {\n        var reconnect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        return _subscribe(url, callback, reconnect);\n      },\n\n      /**\r\n       * Subscribe to a generic combined websocket\r\n       * @param {string} url - the websocket endpoint\r\n       * @param {function} callback - optional execution callback\r\n       * @param {boolean} reconnect - subscription callback\r\n       * @return {WebSocket} the websocket reference\r\n       */\n      subscribeCombined: function subscribeCombined(url, callback) {\n        var reconnect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        return _subscribeCombined(url, callback, reconnect);\n      },\n\n      /**\r\n       * Returns the known websockets subscriptions\r\n       * @return {array} array of web socket subscriptions\r\n       */\n      subscriptions: function subscriptions() {\n        return Binance.subscriptions;\n      },\n\n      /**\r\n       * Terminates a web socket\r\n       * @param {string} endpoint - the string associated with the endpoint\r\n       * @return {undefined}\r\n       */\n      terminate: function terminate(endpoint) {\n        if (Binance.options.verbose) Binance.options.log('WebSocket terminating:', endpoint);\n        return _terminate(endpoint);\n      },\n\n      /**\r\n       * Websocket depth chart\r\n       * @param {array/string} symbols - an array or string of symbols to query\r\n       * @param {function} callback - callback function\r\n       * @return {string} the websocket endpoint\r\n       */\n      depth: function depth(symbols, callback) {\n        var reconnect = function reconnect() {\n          if (Binance.options.reconnect) depth(symbols, callback);\n        };\n\n        var subscription;\n\n        if (Array.isArray(symbols)) {\n          if (!isArrayUnique(symbols)) throw Error('depth: \"symbols\" cannot contain duplicate elements.');\n          var streams = symbols.map(function (symbol) {\n            return symbol.toLowerCase() + '@depth@100ms';\n          });\n          subscription = _subscribeCombined(streams, callback, reconnect);\n        } else {\n          var symbol = symbols;\n          subscription = _subscribe(symbol.toLowerCase() + '@depth@100ms', callback, reconnect);\n        }\n\n        return subscription.endpoint;\n      },\n\n      /**\r\n       * Websocket depth cache\r\n       * @param {array/string} symbols - an array or string of symbols to query\r\n       * @param {function} callback - callback function\r\n       * @param {int} limit - the number of entries\r\n       * @return {string} the websocket endpoint\r\n       */\n      depthCache: function depthCacheFunction(symbols, callback) {\n        var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 500;\n\n        var reconnect = function reconnect() {\n          if (Binance.options.reconnect) depthCacheFunction(symbols, callback, limit);\n        };\n\n        var symbolDepthInit = function symbolDepthInit(symbol) {\n          if (typeof Binance.depthCacheContext[symbol] === 'undefined') Binance.depthCacheContext[symbol] = {};\n          var context = Binance.depthCacheContext[symbol];\n          context.snapshotUpdateId = null;\n          context.lastEventUpdateId = null;\n          context.messageQueue = [];\n          Binance.depthCache[symbol] = {\n            bids: {},\n            asks: {}\n          };\n        };\n\n        var assignEndpointIdToContext = function assignEndpointIdToContext(symbol, endpointId) {\n          if (Binance.depthCacheContext[symbol]) {\n            var context = Binance.depthCacheContext[symbol];\n            context.endpointId = endpointId;\n          }\n        };\n\n        var handleDepthStreamData = function handleDepthStreamData(depth) {\n          var symbol = depth.s;\n          var context = Binance.depthCacheContext[symbol];\n\n          if (context.messageQueue && !context.snapshotUpdateId) {\n            context.messageQueue.push(depth);\n          } else {\n            try {\n              depthHandler(depth);\n            } catch (err) {\n              return _terminate(context.endpointId, true);\n            }\n\n            if (callback) callback(symbol, Binance.depthCache[symbol], context);\n          }\n        };\n\n        var getSymbolDepthSnapshot = function getSymbolDepthSnapshot(symbol, cb) {\n          _publicRequest(base + 'v3/depth', {\n            symbol: symbol,\n            limit: limit\n          }, function (error, json) {\n            if (error) {\n              return cb(error, null);\n            } // Store symbol next use\n\n\n            json.symb = symbol;\n            cb(null, json);\n          });\n        };\n\n        var updateSymbolDepthCache = function updateSymbolDepthCache(json) {\n          // Get previous store symbol\n          var symbol = json.symb; // Initialize depth cache from snapshot\n\n          Binance.depthCache[symbol] = depthData(json); // Prepare depth cache context\n\n          var context = Binance.depthCacheContext[symbol];\n          context.snapshotUpdateId = json.lastUpdateId;\n          context.messageQueue = context.messageQueue.filter(function (depth) {\n            return depth.u > context.snapshotUpdateId;\n          }); // Process any pending depth messages\n\n          var _iterator31 = _createForOfIteratorHelper(context.messageQueue),\n              _step31;\n\n          try {\n            for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {\n              var depth = _step31.value;\n\n              /* Although sync errors shouldn't ever happen here, we catch and swallow them anyway\r\n               just in case. The stream handler function above will deal with broken caches. */\n              try {\n                depthHandler(depth);\n              } catch (err) {// Do nothing\n              }\n            }\n          } catch (err) {\n            _iterator31.e(err);\n          } finally {\n            _iterator31.f();\n          }\n\n          delete context.messageQueue;\n          if (callback) callback(symbol, Binance.depthCache[symbol]);\n        };\n        /* If an array of symbols are sent we use a combined stream connection rather.\r\n         This is transparent to the developer, and results in a single socket connection.\r\n         This essentially eliminates \"unexpected response\" errors when subscribing to a lot of data. */\n\n\n        var subscription;\n\n        if (Array.isArray(symbols)) {\n          if (!isArrayUnique(symbols)) throw Error('depthCache: \"symbols\" cannot contain duplicate elements.');\n          symbols.forEach(symbolDepthInit);\n          var streams = symbols.map(function (symbol) {\n            return symbol.toLowerCase() + \"@depth@100ms\";\n          });\n          subscription = _subscribeCombined(streams, handleDepthStreamData, reconnect, function () {\n            async.mapLimit(symbols, 50, getSymbolDepthSnapshot, function (err, results) {\n              if (err) throw err;\n              results.forEach(updateSymbolDepthCache);\n            });\n          });\n          symbols.forEach(function (s) {\n            return assignEndpointIdToContext(s, subscription.endpoint);\n          });\n        } else {\n          var symbol = symbols;\n          symbolDepthInit(symbol);\n          subscription = _subscribe(symbol.toLowerCase() + \"@depth@100ms\", handleDepthStreamData, reconnect, function () {\n            async.mapLimit([symbol], 1, getSymbolDepthSnapshot, function (err, results) {\n              if (err) throw err;\n              results.forEach(updateSymbolDepthCache);\n            });\n          });\n          assignEndpointIdToContext(symbol, subscription.endpoint);\n        }\n\n        return subscription.endpoint;\n      },\n\n      /**\r\n       * Clear Websocket depth cache\r\n       * @param {String|Array} symbols   - a single symbol, or an array of symbols, to clear the cache of\r\n       * @returns {void}\r\n       */\n      clearDepthCache: function clearDepthCache(symbols) {\n        var symbolsArr = Array.isArray(symbols) ? symbols : [symbols];\n        symbolsArr.forEach(function (thisSymbol) {\n          delete Binance.depthCache[thisSymbol];\n        });\n      },\n\n      /**\r\n       * Websocket staggered depth cache\r\n       * @param {array/string} symbols - an array of symbols to query\r\n       * @param {function} callback - callback function\r\n       * @param {int} limit - the number of entries\r\n       * @param {int} stagger - ms between each depth cache\r\n       * @return {Promise} the websocket endpoint\r\n       */\n      depthCacheStaggered: function depthCacheStaggered(symbols, callback) {\n        var _this2 = this;\n\n        var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;\n        var stagger = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 200;\n        if (!Array.isArray(symbols)) symbols = [symbols];\n        var chain = null;\n        symbols.forEach(function (symbol) {\n          var promise = function promise() {\n            return new Promise(function (resolve) {\n              _this2.depthCache(symbol, callback, limit);\n\n              setTimeout(resolve, stagger);\n            });\n          };\n\n          chain = chain ? chain.then(promise) : promise();\n        });\n        return chain;\n      },\n\n      /**\r\n       * Websocket aggregated trades\r\n       * @param {array/string} symbols - an array or string of symbols to query\r\n       * @param {function} callback - callback function\r\n       * @return {string} the websocket endpoint\r\n       */\n      aggTrades: function trades(symbols, callback) {\n        var reconnect = function reconnect() {\n          if (Binance.options.reconnect) trades(symbols, callback);\n        };\n\n        var subscription;\n\n        if (Array.isArray(symbols)) {\n          if (!isArrayUnique(symbols)) throw Error('trades: \"symbols\" cannot contain duplicate elements.');\n          var streams = symbols.map(function (symbol) {\n            return symbol.toLowerCase() + '@aggTrade';\n          });\n          subscription = _subscribeCombined(streams, callback, reconnect);\n        } else {\n          var symbol = symbols;\n          subscription = _subscribe(symbol.toLowerCase() + '@aggTrade', callback, reconnect);\n        }\n\n        return subscription.endpoint;\n      },\n\n      /**\r\n      * Websocket raw trades\r\n      * @param {array/string} symbols - an array or string of symbols to query\r\n      * @param {function} callback - callback function\r\n      * @return {string} the websocket endpoint\r\n      */\n      trades: function trades(symbols, callback) {\n        var reconnect = function reconnect() {\n          if (Binance.options.reconnect) trades(symbols, callback);\n        };\n\n        var subscription;\n\n        if (Array.isArray(symbols)) {\n          if (!isArrayUnique(symbols)) throw Error('trades: \"symbols\" cannot contain duplicate elements.');\n          var streams = symbols.map(function (symbol) {\n            return symbol.toLowerCase() + '@trade';\n          });\n          subscription = _subscribeCombined(streams, callback, reconnect);\n        } else {\n          var symbol = symbols;\n          subscription = _subscribe(symbol.toLowerCase() + '@trade', callback, reconnect);\n        }\n\n        return subscription.endpoint;\n      },\n\n      /**\r\n       * Websocket klines\r\n       * @param {array/string} symbols - an array or string of symbols to query\r\n       * @param {string} interval - the time interval\r\n       * @param {function} callback - callback function\r\n       * @param {int} limit - maximum results, no more than 1000\r\n       * @return {string} the websocket endpoint\r\n       */\n      chart: function chart(symbols, interval, callback) {\n        var limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 500;\n\n        var reconnect = function reconnect() {\n          if (Binance.options.reconnect) chart(symbols, interval, callback, limit);\n        };\n\n        var symbolChartInit = function symbolChartInit(symbol) {\n          if (typeof Binance.info[symbol] === 'undefined') Binance.info[symbol] = {};\n          if (typeof Binance.info[symbol][interval] === 'undefined') Binance.info[symbol][interval] = {};\n          if (typeof Binance.ohlc[symbol] === 'undefined') Binance.ohlc[symbol] = {};\n          if (typeof Binance.ohlc[symbol][interval] === 'undefined') Binance.ohlc[symbol][interval] = {};\n          if (typeof Binance.ohlcLatest[symbol] === 'undefined') Binance.ohlcLatest[symbol] = {};\n          if (typeof Binance.ohlcLatest[symbol][interval] === 'undefined') Binance.ohlcLatest[symbol][interval] = {};\n          if (typeof Binance.klineQueue[symbol] === 'undefined') Binance.klineQueue[symbol] = {};\n          if (typeof Binance.klineQueue[symbol][interval] === 'undefined') Binance.klineQueue[symbol][interval] = [];\n          Binance.info[symbol][interval].timestamp = 0;\n        };\n\n        var handleKlineStreamData = function handleKlineStreamData(kline) {\n          var symbol = kline.s,\n              interval = kline.k.i;\n\n          if (!Binance.info[symbol][interval].timestamp) {\n            if (typeof Binance.klineQueue[symbol][interval] !== 'undefined' && kline !== null) {\n              Binance.klineQueue[symbol][interval].push(kline);\n            }\n          } else {\n            //Binance.options.log('@klines at ' + kline.k.t);\n            klineHandler(symbol, kline);\n            if (callback) callback(symbol, interval, klineConcat(symbol, interval));\n          }\n        };\n\n        var getSymbolKlineSnapshot = function getSymbolKlineSnapshot(symbol) {\n          var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n\n          _publicRequest(base + 'v3/klines', {\n            symbol: symbol,\n            interval: interval,\n            limit: limit\n          }, function (error, data) {\n            klineData(symbol, interval, data); //Binance.options.log('/klines at ' + Binance.info[symbol][interval].timestamp);\n\n            if (typeof Binance.klineQueue[symbol][interval] !== 'undefined') {\n              var _iterator32 = _createForOfIteratorHelper(Binance.klineQueue[symbol][interval]),\n                  _step32;\n\n              try {\n                for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {\n                  var kline = _step32.value;\n                  klineHandler(symbol, kline, Binance.info[symbol][interval].timestamp);\n                }\n              } catch (err) {\n                _iterator32.e(err);\n              } finally {\n                _iterator32.f();\n              }\n\n              delete Binance.klineQueue[symbol][interval];\n            }\n\n            if (callback) callback(symbol, interval, klineConcat(symbol, interval));\n          });\n        };\n\n        var subscription;\n\n        if (Array.isArray(symbols)) {\n          if (!isArrayUnique(symbols)) throw Error('chart: \"symbols\" cannot contain duplicate elements.');\n          symbols.forEach(symbolChartInit);\n          var streams = symbols.map(function (symbol) {\n            return symbol.toLowerCase() + '@kline_' + interval;\n          });\n          subscription = _subscribeCombined(streams, handleKlineStreamData, reconnect);\n          symbols.forEach(function (element) {\n            return getSymbolKlineSnapshot(element, limit);\n          });\n        } else {\n          var symbol = symbols;\n          symbolChartInit(symbol);\n          subscription = _subscribe(symbol.toLowerCase() + '@kline_' + interval, handleKlineStreamData, reconnect);\n          getSymbolKlineSnapshot(symbol, limit);\n        }\n\n        return subscription.endpoint;\n      },\n\n      /**\r\n       * Websocket candle sticks\r\n       * @param {array/string} symbols - an array or string of symbols to query\r\n       * @param {string} interval - the time interval\r\n       * @param {function} callback - callback function\r\n       * @return {string} the websocket endpoint\r\n       */\n      candlesticks: function candlesticks(symbols, interval, callback) {\n        var reconnect = function reconnect() {\n          if (Binance.options.reconnect) candlesticks(symbols, interval, callback);\n        };\n        /* If an array of symbols are sent we use a combined stream connection rather.\r\n         This is transparent to the developer, and results in a single socket connection.\r\n         This essentially eliminates \"unexpected response\" errors when subscribing to a lot of data. */\n\n\n        var subscription;\n\n        if (Array.isArray(symbols)) {\n          if (!isArrayUnique(symbols)) throw Error('candlesticks: \"symbols\" cannot contain duplicate elements.');\n          var streams = symbols.map(function (symbol) {\n            return symbol.toLowerCase() + '@kline_' + interval;\n          });\n          subscription = _subscribeCombined(streams, callback, reconnect);\n        } else {\n          var symbol = symbols.toLowerCase();\n          subscription = _subscribe(symbol + '@kline_' + interval, callback, reconnect);\n        }\n\n        return subscription.endpoint;\n      },\n\n      /**\r\n       * Websocket mini ticker\r\n       * @param {function} callback - callback function\r\n       * @return {string} the websocket endpoint\r\n       */\n      miniTicker: function miniTicker(callback) {\n        var reconnect = function reconnect() {\n          if (Binance.options.reconnect) miniTicker(callback);\n        };\n\n        var subscription = _subscribe('!miniTicker@arr', function (data) {\n          var markets = {};\n\n          var _iterator33 = _createForOfIteratorHelper(data),\n              _step33;\n\n          try {\n            for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {\n              var obj = _step33.value;\n              markets[obj.s] = {\n                close: obj.c,\n                open: obj.o,\n                high: obj.h,\n                low: obj.l,\n                volume: obj.v,\n                quoteVolume: obj.q,\n                eventTime: obj.E\n              };\n            }\n          } catch (err) {\n            _iterator33.e(err);\n          } finally {\n            _iterator33.f();\n          }\n\n          callback(markets);\n        }, reconnect);\n\n        return subscription.endpoint;\n      },\n\n      /**\r\n       * Spot WebSocket bookTicker (bid/ask quotes including price & amount)\r\n       * @param {symbol} symbol name or false. can also be a callback\r\n       * @param {function} callback - callback function\r\n       * @return {string} the websocket endpoint\r\n       */\n      bookTickers: function bookTickerStream() {\n        var symbol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : console.log;\n\n        if (typeof symbol == 'function') {\n          callback = symbol;\n          symbol = false;\n        }\n\n        var reconnect = function reconnect() {\n          if (Binance.options.reconnect) bookTickerStream(symbol, callback);\n        };\n\n        var endpoint = symbol ? \"\".concat(symbol.toLowerCase(), \"@bookTicker\") : '!bookTicker';\n\n        var subscription = _subscribe(endpoint, function (data) {\n          return callback(fBookTickerConvertData(data));\n        }, reconnect);\n\n        return subscription.endpoint;\n      },\n\n      /**\r\n       * Websocket prevday percentage\r\n       * @param {array/string} symbols - an array or string of symbols to query\r\n       * @param {function} callback - callback function\r\n       * @param {boolean} singleCallback - avoid call one callback for each symbol in data array\r\n       * @return {string} the websocket endpoint\r\n       */\n      prevDay: function prevDay(symbols, callback, singleCallback) {\n        var reconnect = function reconnect() {\n          if (Binance.options.reconnect) prevDay(symbols, callback, singleCallback);\n        };\n\n        var subscription; // Combine stream for array of symbols\n\n        if (Array.isArray(symbols)) {\n          if (!isArrayUnique(symbols)) throw Error('prevDay: \"symbols\" cannot contain duplicate elements.');\n          var streams = symbols.map(function (symbol) {\n            return symbol.toLowerCase() + '@ticker';\n          });\n          subscription = _subscribeCombined(streams, function (data) {\n            prevDayStreamHandler(data, callback);\n          }, reconnect); // Raw stream for  a single symbol\n        } else if (symbols) {\n          var symbol = symbols;\n          subscription = _subscribe(symbol.toLowerCase() + '@ticker', function (data) {\n            prevDayStreamHandler(data, callback);\n          }, reconnect); // Raw stream of all listed symbols\n        } else {\n          subscription = _subscribe('!ticker@arr', function (data) {\n            if (singleCallback) {\n              prevDayStreamHandler(data, callback);\n            } else {\n              var _iterator34 = _createForOfIteratorHelper(data),\n                  _step34;\n\n              try {\n                for (_iterator34.s(); !(_step34 = _iterator34.n()).done;) {\n                  var line = _step34.value;\n                  prevDayStreamHandler(line, callback);\n                }\n              } catch (err) {\n                _iterator34.e(err);\n              } finally {\n                _iterator34.f();\n              }\n            }\n          }, reconnect);\n        }\n\n        return subscription.endpoint;\n      }\n    }\n  };\n};\n\nmodule.exports = api; //https://github.com/binance-exchange/binance-official-api-docs","map":{"version":3,"sources":["C:/Users/James Price/Documents/VS Code/bixpro/node_modules/node-binance-api/node-binance-api.js"],"names":["api","Binance","options","WebSocket","require","request","crypto","file","url","JSONbig","HttpsProxyAgent","SocksProxyAgent","stringHash","async","base","wapi","sapi","fapi","dapi","fapiTest","dapiTest","fstream","fstreamSingle","fstreamSingleTest","fstreamTest","dstream","dstreamSingle","dstreamSingleTest","dstreamTest","stream","combineStream","userAgent","contentType","subscriptions","futuresSubscriptions","futuresInfo","futuresMeta","futuresTicks","futuresRealtime","futuresKlineQueue","deliverySubscriptions","deliveryInfo","deliveryMeta","deliveryTicks","deliveryRealtime","deliveryKlineQueue","depthCache","depthCacheContext","ohlcLatest","klineQueue","ohlc","default_options","recvWindow","useServerTime","reconnect","keepAlive","verbose","test","hedgeMode","localAddress","family","log","args","console","Array","prototype","slice","call","info","usedWeight","futuresLatency","lastRequest","lastURL","statusCode","orderCount1s","orderCount1m","orderCount1h","orderCount1d","timeOffset","socketHeartbeatInterval","setOptions","opt","callback","JSON","parse","readFileSync","urls","publicRequest","error","response","serverTime","Date","getTime","proxyReplacewithIp","connString","parseProxy","arr","split","host","port","isIterable","obj","Symbol","iterator","addProxy","proxy","proxyauth","auth","username","password","reqHandler","cb","body","uri","href","headers","proxyRequest","req","on","err","reqObj","data","method","key","qs","timeout","forever","reqObjPOST","form","qsStringifyOptions","arrayFormat","makeQueryString","q","Object","keys","reduce","a","k","isArray","forEach","v","push","encodeURIComponent","undefined","join","apiRequest","requireApiKey","APIKEY","source","fatalError","Error","requireApiSecret","APISECRET","marketRequest","query","signedRequest","noDataInSignature","timestamp","signature","createHmac","update","digest","order","side","symbol","quantity","price","flags","endpoint","type","includes","timeInForce","stopLimitPrice","stopLimitTimeInForce","listClientOrderId","limitClientOrderId","stopClientOrderId","newOrderRespType","newClientOrderId","icebergQty","stopPrice","msg","marginOrder","isIsolated","sideEffectType","futuresOrder","params","positionSide","promiseRequest","deliveryOrder","Promise","resolve","reject","baseURL","followAllRedirects","noop","socketHeartbeat","endpointId","ws","isAlive","readyState","OPEN","ping","terminate","handleSocketOpen","opened_callback","length","setInterval","handleSocketClose","code","reason","clearInterval","parseInt","message","handleSocketError","handleSocketHeartbeat","subscribe","httpsproxy","process","env","https_proxy","socksproxy","socks_proxy","agent","protocol","config","bind","subscribeCombined","streams","queryParams","removeAllListeners","futuresSocketHeartbeat","handleFuturesSocketOpen","openCallback","handleFuturesSocketClose","handleFuturesSocketError","handleFuturesSocketHeartbeat","futuresSubscribeSingle","id","futuresSubscribe","futuresTerminate","futuresKlineConcat","interval","output","time","last_updated","pop","isFinal","futuresKlineHandler","kline","firstTime","eventType","e","eventTime","E","ticks","open","o","high","h","low","l","close","c","volume","i","x","quoteVolume","takerBuyBaseVolume","V","takerBuyQuoteVolume","Q","trades","n","t","closeTime","T","first_updated","shift","fLiquidationConvertData","s","S","orderType","f","origAmount","p","avgPrice","ap","orderStatus","X","lastFilledQty","totalFilledQty","z","tradeTime","fTickerConvertData","friendlyData","priceChange","percentChange","P","averagePrice","w","closeQty","openTime","O","C","firstTradeId","F","lastTradeId","L","numTrades","result","fMiniTickerConvertData","fBookTickerConvertData","updateId","u","bestBid","b","bestBidQty","B","bestAsk","bestAskQty","A","fUserDataMarginConvertData","crossWalletBalance","cw","positions","positionConverter","position","ps","positionAmount","pa","marginType","mt","isolatedWallet","iw","markPrice","mp","unrealizedPnL","up","maintenanceMargin","mm","convertedPositions","fUserConfigDataAccountUpdateConvertData","transactionTime","ac","leverage","fUserDataAccountUpdateConvertData","transaction","updateData","updateConverter","eventReasonType","m","balances","entryPrice","ep","accumulatedRealized","cr","balanceConverter","balance","asset","walletBalance","wb","balanceResult","positionResult","fUserDataOrderUpdateConvertData","orderConverter","clientOrderId","originalQuantity","originalPrice","sp","executionType","orderId","orderLastFilledQuantity","orderFilledAccumulatedQuantity","lastFilledPrice","commissionAsset","N","commission","orderTradeTime","tradeId","bidsNotional","askNotional","isMakerSide","isReduceOnly","R","stopPriceWorkingType","wt","originalOrderType","ot","closeAll","cp","activationPrice","AP","callbackRate","realizedProfit","rp","fMarkPriceConvertData","indexPrice","fundingRate","r","fundingTime","fAggTradeConvertData","aggTradeId","amount","maker","total","deliverySocketHeartbeat","handleDeliverySocketOpen","handleDeliverySocketClose","handleDeliverySocketError","handleDeliverySocketHeartbeat","deliverySubscribeSingle","deliverySubscribe","deliveryTerminate","deliveryKlineConcat","deliveryKlineHandler","dLiquidationConvertData","dTickerConvertData","dMiniTickerConvertData","dBookTickerConvertData","dMarkPriceConvertData","dAggTradeConvertData","dUserDataOrderUpdateConvertData","marginAsset","ma","priceProtect","pP","userDataHandler","execution_callback","list_status_callback","balance_callback","userMarginDataHandler","margin_execution_callback","margin_list_status_callback","margin_balance_callback","userFutureDataHandler","future_margin_call_callback","future_account_update_callback","future_order_update_callback","future_account_config_update_callback","userDeliveryDataHandler","delivery_margin_call_callback","delivery_account_update_callback","delivery_order_update_callback","transferBetweenMainAndFutures","parameters","assign","prevDayConvertData","convertData","prevClose","converted","prevDayStreamHandler","priceData","prices","bookPriceData","bid","bidPrice","bids","bidQty","ask","askPrice","asks","askQty","balanceData","available","free","onOrder","locked","klineData","last_time","tick","assetVolume","buyBaseVolume","buyAssetVolume","ignored","klineConcat","klineHandler","futuresKlineData","deliveryKlineData","depthData","parseFloat","lastUpdateId","depthHandler","depth","context","updateDepthCache","skipCount","lastEventUpdateId","lastEventUpdateTime","expectedUpdateId","U","snapshotUpdateId","getDepthCache","depthVolume","cache","bidbase","askbase","bidqty","askqty","toFixed","isArrayUnique","array","Set","size","getPrecision","float","Number","isInteger","toString","roundStep","qty","stepSize","qtyString","desiredDecimals","Math","max","indexOf","decimalIndex","roundTicks","tickSize","formatter","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","precision","format","percent","min","width","sum","reverse","object","range","map","sortBids","Infinity","baseValue","count","sorted","sort","cumulative","sortAsks","first","last","start","apply","setOption","value","getOption","getInfo","orderCount","getOptions","buy","sell","marketBuy","marketSell","cancel","orderid","openOrders","cancelAll","cancelOrders","json","origQty","executedQty","allOrders","limit","bookTickers","prevDay","input","exchangeInfo","dustLog","dustTransfer","assets","assetDividendRecord","systemStatus","withdraw","address","addressTag","name","withdrawHistory","depositHistory","depositAddress","accountStatus","tradeFee","assetDetail","account","aggTrades","recentTrades","historicalTrades","fromId","highstock","chart","include_volume","line","candlesticks","getMarket","endsWith","lending","futuresPing","futuresTime","then","futuresExchangeInfo","futuresPrices","out","futuresDaily","futuresOpenInterest","openInterest","futuresCandles","futuresMarkPrice","futuresTrades","futuresHistoricalTrades","futuresAggTrades","futuresForceOrders","futuresDeleverageQuantile","futuresUserTrades","futuresGetDataStream","futuresKeepDataStream","futuresCloseDataStream","futuresLiquidationOrders","futuresPositionRisk","futuresFundingRate","futuresLeverageBracket","futuresTradingStatus","futuresCommissionRate","futuresLeverage","futuresMarginType","futuresPositionMargin","futuresPositionMarginHistory","futuresIncome","futuresBalance","futuresAccount","futuresDepth","futuresQuote","futuresBuy","futuresSell","futuresMarketBuy","futuresMarketSell","futuresOrderStatus","futuresCancel","futuresCancelAll","futuresCountdownCancelAll","countdownTime","futuresOpenOrders","futuresAllOrders","futuresPositionSideDual","futuresChangePositionSideDual","dualSidePosition","futuresTransferAsset","futuresHistDataId","futuresDownloadLink","downloadId","deliveryPing","deliveryTime","deliveryExchangeInfo","deliveryPrices","deliveryDaily","deliveryOpenInterest","deliveryCandles","deliveryContinuousKlines","pair","contractType","deliveryIndexKlines","deliveryMarkPriceKlines","deliveryMarkPrice","deliveryTrades","deliveryHistoricalTrades","deliveryAggTrades","deliveryUserTrades","deliveryGetDataStream","deliveryKeepDataStream","deliveryCloseDataStream","deliveryLiquidationOrders","deliveryPositionRisk","deliveryLeverageBracket","deliveryLeverageBracketSymbols","deliveryLeverage","deliveryMarginType","deliveryPositionMargin","deliveryPositionMarginHistory","deliveryIncome","deliveryBalance","deliveryAccount","deliveryDepth","deliveryQuote","deliveryBuy","deliverySell","deliveryMarketBuy","deliveryMarketSell","deliveryOrderStatus","deliveryCancel","deliveryCancelAll","deliveryCountdownCancelAll","deliveryOpenOrders","deliveryAllOrders","deliveryPositionSideDual","deliveryChangePositionSideDual","mgOrder","mgBuy","mgSell","mgMarketBuy","mgMarketSell","mgCancel","mgAllOrders","mgOrderStatus","mgOpenOrders","mgCancelOrders","mgTransferMainToMargin","mgTransferMarginToMain","transferMainToFutures","transferFuturesToMain","transferMainToDelivery","transferDeliveryToMain","maxTransferable","mgBorrow","isolatedObj","mgRepay","mgAccount","maxBorrowable","futuresAggTradeStream","symbols","subscription","cleanCallback","toLowerCase","futuresMarkPriceStream","fMarkPriceStream","speed","futuresLiquidationStream","fLiquidationStream","futuresTickerStream","fTickerStream","futuresMiniTickerStream","fMiniTickerStream","futuresBookTickerStream","fBookTickerStream","futuresChart","futuresChartInit","handleFuturesKlineStream","getFuturesKlineSnapshot","element","futuresCandlesticks","deliveryAggTradeStream","deliveryMarkPriceStream","dMarkPriceStream","deliveryLiquidationStream","dLiquidationStream","deliveryTickerStream","dTickerStream","deliveryMiniTickerStream","dMiniTickerStream","deliveryBookTickerStream","dBookTickerStream","deliveryChart","deliveryChartInit","handleDeliveryKlineStream","getDeliveryKlineSnapshot","deliveryCandlesticks","websockets","userData","subscribed_callback","listenKey","setTimeout","userDataKeepAlive","userMarginData","listenMarginKey","userFutureData","margin_call_callback","account_update_callback","order_update_callback","account_config_update_callback","listenFutureKey","userDeliveryData","listenDeliveryKey","depthCacheFunction","symbolDepthInit","messageQueue","assignEndpointIdToContext","handleDepthStreamData","getSymbolDepthSnapshot","symb","updateSymbolDepthCache","filter","mapLimit","results","clearDepthCache","symbolsArr","thisSymbol","depthCacheStaggered","stagger","chain","promise","symbolChartInit","handleKlineStreamData","getSymbolKlineSnapshot","miniTicker","markets","bookTickerStream","singleCallback","module","exports"],"mappings":"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","sourcesContent":["/* ============================================================\r\n * node-binance-api\r\n * https://github.com/jaggedsoft/node-binance-api\r\n * ============================================================\r\n * Copyright 2017-, Jon Eyrick\r\n * Released under the MIT License\r\n * ============================================================\r\n * @module jaggedsoft/node-binance-api\r\n * @return {object} instance to class object */\r\nlet api = function Binance( options = {} ) {\r\n    if ( !new.target ) return new api( options ); // Legacy support for calling the constructor without 'new'\r\n    let Binance = this; // eslint-disable-line consistent-this\r\n    const WebSocket = require( 'ws' );\r\n    const request = require( 'request' );\r\n    const crypto = require( 'crypto' );\r\n    const file = require( 'fs' );\r\n    const url = require( 'url' );\r\n    const JSONbig = require( 'json-bigint' );\r\n    const HttpsProxyAgent = require( 'https-proxy-agent' );\r\n    const SocksProxyAgent = require( 'socks-proxy-agent' );\r\n    const stringHash = require( 'string-hash' );\r\n    const async = require( 'async' );\r\n    let base = 'https://api.binance.com/api/';\r\n    let wapi = 'https://api.binance.com/wapi/';\r\n    let sapi = 'https://api.binance.com/sapi/';\r\n    let fapi = 'https://fapi.binance.com/fapi/';\r\n    let dapi = 'https://dapi.binance.com/dapi/';\r\n    let fapiTest = 'https://testnet.binancefuture.com/fapi/';\r\n    let dapiTest = 'https://testnet.binancefuture.com/dapi/';\r\n    let fstream = 'wss://fstream.binance.com/stream?streams=';\r\n    let fstreamSingle = 'wss://fstream.binance.com/ws/';\r\n    let fstreamSingleTest = 'wss://stream.binancefuture.com/ws/';\r\n    let fstreamTest = 'wss://stream.binancefuture.com/stream?streams=';\r\n    let dstream = 'wss://dstream.binance.com/stream?streams=';\r\n    let dstreamSingle = 'wss://dstream.binance.com/ws/';\r\n    let dstreamSingleTest = 'wss://dstream.binancefuture.com/ws/';\r\n    let dstreamTest = 'wss://dstream.binancefuture.com/stream?streams=';\r\n    let stream = 'wss://stream.binance.com:9443/ws/';\r\n    let combineStream = 'wss://stream.binance.com:9443/stream?streams=';\r\n    const userAgent = 'Mozilla/4.0 (compatible; Node Binance API)';\r\n    const contentType = 'application/x-www-form-urlencoded';\r\n    Binance.subscriptions = {};\r\n    Binance.futuresSubscriptions = {};\r\n    Binance.futuresInfo = {};\r\n    Binance.futuresMeta = {};\r\n    Binance.futuresTicks = {};\r\n    Binance.futuresRealtime = {};\r\n    Binance.futuresKlineQueue = {};\r\n    Binance.deliverySubscriptions = {};\r\n    Binance.deliveryInfo = {};\r\n    Binance.deliveryMeta = {};\r\n    Binance.deliveryTicks = {};\r\n    Binance.deliveryRealtime = {};\r\n    Binance.deliveryKlineQueue = {};\r\n    Binance.depthCache = {};\r\n    Binance.depthCacheContext = {};\r\n    Binance.ohlcLatest = {};\r\n    Binance.klineQueue = {};\r\n    Binance.ohlc = {};\r\n\r\n    const default_options = {\r\n        recvWindow: 5000,\r\n        useServerTime: false,\r\n        reconnect: true,\r\n        keepAlive: true,\r\n        verbose: false,\r\n        test: false,\r\n        hedgeMode: false,\r\n        localAddress: false,\r\n        family: false,\r\n        log: function ( ...args ) {\r\n            console.log( Array.prototype.slice.call( args ) );\r\n        }\r\n    };\r\n    Binance.options = default_options;\r\n    Binance.info = {\r\n        usedWeight: 0,\r\n        futuresLatency: false,\r\n        lastRequest: false,\r\n        lastURL: false,\r\n        statusCode: 0,\r\n        orderCount1s: 0,\r\n        orderCount1m: 0,\r\n        orderCount1h: 0,\r\n        orderCount1d: 0,\r\n        timeOffset: 0\r\n    };\r\n    Binance.socketHeartbeatInterval = null;\r\n    if ( options ) setOptions( options );\r\n\r\n    function setOptions( opt = {}, callback = false ) {\r\n        if ( typeof opt === 'string' ) { // Pass json config filename\r\n            Binance.options = JSON.parse( file.readFileSync( opt ) );\r\n        } else Binance.options = opt;\r\n        if ( typeof Binance.options.recvWindow === 'undefined' ) Binance.options.recvWindow = default_options.recvWindow;\r\n        if ( typeof Binance.options.useServerTime === 'undefined' ) Binance.options.useServerTime = default_options.useServerTime;\r\n        if ( typeof Binance.options.reconnect === 'undefined' ) Binance.options.reconnect = default_options.reconnect;\r\n        if ( typeof Binance.options.test === 'undefined' ) Binance.options.test = default_options.test;\r\n        if ( typeof Binance.options.hedgeMode === 'undefined' ) Binance.options.hedgeMode = default_options.hedgeMode;\r\n        if ( typeof Binance.options.log === 'undefined' ) Binance.options.log = default_options.log;\r\n        if ( typeof Binance.options.verbose === 'undefined' ) Binance.options.verbose = default_options.verbose;\r\n        if ( typeof Binance.options.keepAlive === 'undefined' ) Binance.options.keepAlive = default_options.keepAlive;\r\n        if ( typeof Binance.options.localAddress === 'undefined' ) Binance.options.localAddress = default_options.localAddress;\r\n        if ( typeof Binance.options.family === 'undefined' ) Binance.options.family = default_options.family;\r\n        if ( typeof Binance.options.urls !== 'undefined' ) {\r\n            const { urls } = Binance.options;\r\n            if ( typeof urls.base === 'string' ) base = urls.base;\r\n            if ( typeof urls.wapi === 'string' ) wapi = urls.wapi;\r\n            if ( typeof urls.sapi === 'string' ) sapi = urls.sapi;\r\n            if ( typeof urls.fapi === 'string' ) fapi = urls.fapi;\r\n            if ( typeof urls.fapiTest === 'string' ) fapiTest = urls.fapiTest;\r\n            if ( typeof urls.stream === 'string' ) stream = urls.stream;\r\n            if ( typeof urls.combineStream === 'string' ) combineStream = urls.combineStream;\r\n            if ( typeof urls.fstream === 'string' ) fstream = urls.fstream;\r\n            if ( typeof urls.fstreamSingle === 'string' ) fstreamSingle = urls.fstreamSingle;\r\n            if ( typeof urls.fstreamTest === 'string' ) fstreamTest = urls.fstreamTest;\r\n            if ( typeof urls.fstreamSingleTest === 'string' ) fstreamSingleTest = urls.fstreamSingleTest;\r\n            if ( typeof urls.dstream === 'string' ) dstream = urls.dstream;\r\n            if ( typeof urls.dstreamSingle === 'string' ) dstreamSingle = urls.dstreamSingle;\r\n            if ( typeof urls.dstreamTest === 'string' ) dstreamTest = urls.dstreamTest;\r\n            if ( typeof urls.dstreamSingleTest === 'string' ) dstreamSingleTest = urls.dstreamSingleTest;\r\n        }\r\n        if ( Binance.options.useServerTime ) {\r\n            publicRequest( base + 'v3/time', {}, function ( error, response ) {\r\n                Binance.info.timeOffset = response.serverTime - new Date().getTime();\r\n                //Binance.options.log(\"server time set: \", response.serverTime, Binance.info.timeOffset);\r\n                if ( callback ) callback();\r\n            } );\r\n        } else if ( callback ) callback();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Replaces socks connection uri hostname with IP address\r\n     * @param {string} connString - socks connection string\r\n     * @return {string} modified string with ip address\r\n     */\r\n    const proxyReplacewithIp = connString => {\r\n        return connString;\r\n    }\r\n\r\n    /**\r\n     * Returns an array in the form of [host, port]\r\n     * @param {string} connString - connection string\r\n     * @return {array} array of host and port\r\n     */\r\n    const parseProxy = connString => {\r\n        let arr = connString.split( '/' );\r\n        let host = arr[2].split( ':' )[0];\r\n        let port = arr[2].split( ':' )[1];\r\n        return [ arr[0], host, port ];\r\n    }\r\n\r\n    /**\r\n     * Checks to see of the object is iterable\r\n     * @param {object} obj - The object check\r\n     * @return {boolean} true or false is iterable\r\n     */\r\n    const isIterable = obj => {\r\n        if ( obj === null ) return false;\r\n        return typeof obj[Symbol.iterator] === 'function';\r\n    }\r\n\r\n    const addProxy = opt => {\r\n        if ( Binance.options.proxy ) {\r\n            const proxyauth = Binance.options.proxy.auth ? `${ Binance.options.proxy.auth.username }:${ Binance.options.proxy.auth.password }@` : '';\r\n            opt.proxy = `http://${ proxyauth }${ Binance.options.proxy.host }:${ Binance.options.proxy.port }`;\r\n        }\r\n        return opt;\r\n    }\r\n\r\n    const reqHandler = cb => ( error, response, body ) => {\r\n        Binance.info.lastRequest = new Date().getTime();\r\n        if ( response ) {\r\n            Binance.info.statusCode = response.statusCode || 0;\r\n            if ( response.request ) Binance.info.lastURL = response.request.uri.href;\r\n            if ( response.headers ) {\r\n                Binance.info.usedWeight = response.headers['x-mbx-used-weight-1m'] || 0;\r\n                Binance.info.orderCount1s = response.headers['x-mbx-order-count-1s'] || 0;\r\n                Binance.info.orderCount1m = response.headers['x-mbx-order-count-1m'] || 0;\r\n                Binance.info.orderCount1h = response.headers['x-mbx-order-count-1h'] || 0;\r\n                Binance.info.orderCount1d = response.headers['x-mbx-order-count-1d'] || 0;\r\n            }\r\n        }\r\n        if ( !cb ) return;\r\n        if ( error ) return cb( error, {} );\r\n        if ( response && response.statusCode !== 200 ) return cb( response, {} );\r\n        return cb( null, JSONbig.parse( body ) );\r\n    }\r\n\r\n    const proxyRequest = ( opt, cb ) => {\r\n        const req = request( addProxy( opt ), reqHandler( cb ) ).on('error', (err) => { cb( err, {} ) });\r\n        return req;\r\n    }\r\n\r\n    const reqObj = ( url, data = {}, method = 'GET', key ) => ( {\r\n        url: url,\r\n        qs: data,\r\n        method: method,\r\n        family: Binance.options.family,\r\n        localAddress: Binance.options.localAddress,\r\n        timeout: Binance.options.recvWindow,\r\n        forever: Binance.options.keepAlive,\r\n        headers: {\r\n            'User-Agent': userAgent,\r\n            'Content-type': contentType,\r\n            'X-MBX-APIKEY': key || ''\r\n        }\r\n    } )\r\n    const reqObjPOST = ( url, data = {}, method = 'POST', key ) => ( {\r\n        url: url,\r\n        form: data,\r\n        method: method,\r\n        family: Binance.options.family,\r\n        localAddress: Binance.options.localAddress,\r\n        timeout: Binance.options.recvWindow,\r\n        forever: Binance.options.keepAlive,\r\n        qsStringifyOptions: {\r\n            arrayFormat: 'repeat'\r\n        },\r\n        headers: {\r\n            'User-Agent': userAgent,\r\n            'Content-type': contentType,\r\n            'X-MBX-APIKEY': key || ''\r\n        }\r\n    } )\r\n    /**\r\n     * Create a http request to the public API\r\n     * @param {string} url - The http endpoint\r\n     * @param {object} data - The data to send\r\n     * @param {function} callback - The callback method to call\r\n     * @param {string} method - the http method\r\n     * @return {undefined}\r\n     */\r\n    const publicRequest = ( url, data = {}, callback, method = 'GET' ) => {\r\n        let opt = reqObj( url, data, method );\r\n        proxyRequest( opt, callback );\r\n    };\r\n\r\n    // XXX: This one works with array (e.g. for dust.transfer)\r\n    // XXX: I _guess_ we could use replace this function with the `qs` module\r\n    const makeQueryString = q =>\r\n        Object.keys( q )\r\n            .reduce( ( a, k ) => {\r\n                if ( Array.isArray( q[k] ) ) {\r\n                    q[k].forEach( v => {\r\n                        a.push( k + \"=\" + encodeURIComponent( v ) )\r\n                    } )\r\n                } else if ( q[k] !== undefined ) {\r\n                    a.push( k + \"=\" + encodeURIComponent( q[k] ) );\r\n                }\r\n                return a;\r\n            }, [] )\r\n            .join( \"&\" );\r\n\r\n    /**\r\n     * Create a http request to the public API\r\n     * @param {string} url - The http endpoint\r\n     * @param {object} data - The data to send\r\n     * @param {function} callback - The callback method to call\r\n     * @param {string} method - the http method\r\n     * @return {undefined}\r\n     */\r\n    const apiRequest = ( url, data = {}, callback, method = 'GET' ) => {\r\n        requireApiKey( 'apiRequest' );\r\n        let opt = reqObj(\r\n            url,\r\n            data,\r\n            method,\r\n            Binance.options.APIKEY\r\n        );\r\n        proxyRequest( opt, callback );\r\n    };\r\n\r\n    // Check if API key is empty or invalid\r\n    const requireApiKey = function( source = 'requireApiKey', fatalError = true ) {\r\n        if ( !Binance.options.APIKEY ) {\r\n            if ( fatalError ) throw Error( `${ source }: Invalid API Key!` );\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Check if API secret is present\r\n    const requireApiSecret = function( source = 'requireApiSecret', fatalError = true ) {\r\n        if ( !Binance.options.APIKEY ) {\r\n            if ( fatalError ) throw Error( `${ source }: Invalid API Key!` );\r\n            return false;\r\n        }\r\n        if ( !Binance.options.APISECRET ) {\r\n            if ( fatalError ) throw Error( `${ source }: Invalid API Secret!` );\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Make market request\r\n     * @param {string} url - The http endpoint\r\n     * @param {object} data - The data to send\r\n     * @param {function} callback - The callback method to call\r\n     * @param {string} method - the http method\r\n     * @return {undefined}\r\n     */\r\n    const marketRequest = ( url, data = {}, callback, method = 'GET' ) => {\r\n        requireApiKey( 'marketRequest' );\r\n        let query = makeQueryString( data );\r\n        let opt = reqObj(\r\n            url + ( query ? '?' + query : '' ),\r\n            data,\r\n            method,\r\n            Binance.options.APIKEY\r\n        );\r\n        proxyRequest( opt, callback );\r\n    };\r\n\r\n    /**\r\n     * Create a signed http request\r\n     * @param {string} url - The http endpoint\r\n     * @param {object} data - The data to send\r\n     * @param {function} callback - The callback method to call\r\n     * @param {string} method - the http method\r\n     * @param {boolean} noDataInSignature - Prevents data from being added to signature\r\n     * @return {undefined}\r\n     */\r\n    const signedRequest = ( url, data = {}, callback, method = 'GET', noDataInSignature = false ) => {\r\n        requireApiSecret( 'signedRequest' );\r\n        data.timestamp = new Date().getTime() + Binance.info.timeOffset;\r\n        if ( typeof data.recvWindow === 'undefined' ) data.recvWindow = Binance.options.recvWindow;\r\n        let query = method === 'POST' && noDataInSignature ? '' : makeQueryString( data );\r\n        let signature = crypto.createHmac( 'sha256', Binance.options.APISECRET ).update( query ).digest( 'hex' ); // set the HMAC hash header\r\n        if ( method === 'POST' ) {\r\n            let opt = reqObjPOST(\r\n                url,\r\n                data,\r\n                method,\r\n                Binance.options.APIKEY\r\n            );\r\n            opt.form.signature = signature;\r\n            proxyRequest( opt, callback );\r\n        } else {\r\n            let opt = reqObj(\r\n                url + '?' + query + '&signature=' + signature,\r\n                data,\r\n                method,\r\n                Binance.options.APIKEY\r\n            );\r\n            proxyRequest( opt, callback );\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Create a signed spot order\r\n     * @param {string} side - BUY or SELL\r\n     * @param {string} symbol - The symbol to buy or sell\r\n     * @param {string} quantity - The quantity to buy or sell\r\n     * @param {string} price - The price per unit to transact each unit at\r\n     * @param {object} flags - additional order settings\r\n     * @param {function} callback - the callback function\r\n     * @return {undefined}\r\n     */\r\n    const order = ( side, symbol, quantity, price, flags = {}, callback = false ) => {\r\n        let endpoint = flags.type === 'OCO' ? 'v3/order/oco' : 'v3/order';\r\n        if ( Binance.options.test ) endpoint += '/test';\r\n        let opt = {\r\n            symbol: symbol,\r\n            side: side,\r\n            type: 'LIMIT',\r\n            quantity: quantity\r\n        };\r\n        if ( typeof flags.type !== 'undefined' ) opt.type = flags.type;\r\n        if ( opt.type.includes( 'LIMIT' ) ) {\r\n            opt.price = price;\r\n            if ( opt.type !== 'LIMIT_MAKER' ) {\r\n                opt.timeInForce = 'GTC';\r\n            }\r\n        }\r\n        if ( opt.type === 'OCO' ) {\r\n            opt.price = price;\r\n            opt.stopLimitPrice = flags.stopLimitPrice;\r\n            opt.stopLimitTimeInForce = 'GTC';\r\n            delete opt.type;\r\n            if ( typeof flags.listClientOrderId !== 'undefined' ) opt.listClientOrderId = flags.listClientOrderId;\r\n            if ( typeof flags.limitClientOrderId !== 'undefined' ) opt.limitClientOrderId = flags.limitClientOrderId;\r\n            if ( typeof flags.stopClientOrderId !== 'undefined' ) opt.stopClientOrderId = flags.stopClientOrderId;\r\n        }\r\n        if ( typeof flags.timeInForce !== 'undefined' ) opt.timeInForce = flags.timeInForce;\r\n        if ( typeof flags.newOrderRespType !== 'undefined' ) opt.newOrderRespType = flags.newOrderRespType;\r\n        if ( typeof flags.newClientOrderId !== 'undefined' ) opt.newClientOrderId = flags.newClientOrderId;\r\n\r\n        /*\r\n         * STOP_LOSS\r\n         * STOP_LOSS_LIMIT\r\n         * TAKE_PROFIT\r\n         * TAKE_PROFIT_LIMIT\r\n         * LIMIT_MAKER\r\n         */\r\n        if ( typeof flags.icebergQty !== 'undefined' ) opt.icebergQty = flags.icebergQty;\r\n        if ( typeof flags.stopPrice !== 'undefined' ) {\r\n            opt.stopPrice = flags.stopPrice;\r\n            if ( opt.type === 'LIMIT' ) throw Error( 'stopPrice: Must set \"type\" to one of the following: STOP_LOSS, STOP_LOSS_LIMIT, TAKE_PROFIT, TAKE_PROFIT_LIMIT' );\r\n        }\r\n        signedRequest( base + endpoint, opt, ( error, response ) => {\r\n            if ( !response ) {\r\n                if ( callback ) callback( error, response );\r\n                else Binance.options.log( 'Order() error:', error );\r\n                return;\r\n            }\r\n            if ( typeof response.msg !== 'undefined' && response.msg === 'Filter failure: MIN_NOTIONAL' ) {\r\n                Binance.options.log( 'Order quantity too small. See exchangeInfo() for minimum amounts' );\r\n            }\r\n            if ( callback ) callback( error, response );\r\n            else Binance.options.log( side + '(' + symbol + ',' + quantity + ',' + price + ') ', response );\r\n        }, 'POST' );\r\n    };\r\n\r\n    /**\r\n     * Create a signed margin order\r\n     * @param {string} side - BUY or SELL\r\n     * @param {string} symbol - The symbol to buy or sell\r\n     * @param {string} quantity - The quantity to buy or sell\r\n     * @param {string} price - The price per unit to transact each unit at\r\n     * @param {object} flags - additional order settings\r\n     * @param {function} callback - the callback function\r\n     * @return {undefined}\r\n     */\r\n    const marginOrder = ( side, symbol, quantity, price, flags = {}, callback = false ) => {\r\n        let endpoint = 'v1/margin/order';\r\n        if ( Binance.options.test ) endpoint += '/test';\r\n        let opt = {\r\n            symbol: symbol,\r\n            side: side,\r\n            type: 'LIMIT',\r\n            quantity: quantity\r\n        };\r\n        if ( typeof flags.type !== 'undefined' ) opt.type = flags.type;\r\n        if (typeof flags.isIsolated !== 'undefined') opt.isIsolated = flags.isIsolated;\r\n        if ( opt.type.includes( 'LIMIT' ) ) {\r\n            opt.price = price;\r\n            if ( opt.type !== 'LIMIT_MAKER' ) {\r\n                opt.timeInForce = 'GTC';\r\n            }\r\n        }\r\n\r\n        if ( typeof flags.timeInForce !== 'undefined' ) opt.timeInForce = flags.timeInForce;\r\n        if ( typeof flags.newOrderRespType !== 'undefined' ) opt.newOrderRespType = flags.newOrderRespType;\r\n        if ( typeof flags.newClientOrderId !== 'undefined' ) opt.newClientOrderId = flags.newClientOrderId;\r\n        if ( typeof flags.sideEffectType !== 'undefined' ) opt.sideEffectType = flags.sideEffectType;\r\n\r\n        /*\r\n         * STOP_LOSS\r\n         * STOP_LOSS_LIMIT\r\n         * TAKE_PROFIT\r\n         * TAKE_PROFIT_LIMIT\r\n         */\r\n        if ( typeof flags.icebergQty !== 'undefined' ) opt.icebergQty = flags.icebergQty;\r\n        if ( typeof flags.stopPrice !== 'undefined' ) {\r\n            opt.stopPrice = flags.stopPrice;\r\n            if ( opt.type === 'LIMIT' ) throw Error( 'stopPrice: Must set \"type\" to one of the following: STOP_LOSS, STOP_LOSS_LIMIT, TAKE_PROFIT, TAKE_PROFIT_LIMIT' );\r\n        }\r\n        signedRequest( sapi + endpoint, opt, function ( error, response ) {\r\n            if ( !response ) {\r\n                if ( callback ) callback( error, response );\r\n                else Binance.options.log( 'Order() error:', error );\r\n                return;\r\n            }\r\n            if ( typeof response.msg !== 'undefined' && response.msg === 'Filter failure: MIN_NOTIONAL' ) {\r\n                Binance.options.log( 'Order quantity too small. See exchangeInfo() for minimum amounts' );\r\n            }\r\n            if ( callback ) callback( error, response );\r\n            else Binance.options.log( side + '(' + symbol + ',' + quantity + ',' + price + ') ', response );\r\n        }, 'POST' );\r\n    };\r\n\r\n    // Futures internal functions\r\n    const futuresOrder = async ( side, symbol, quantity, price = false, params = {} ) => {\r\n        params.symbol = symbol;\r\n        params.side = side;\r\n        if ( quantity ) params.quantity = quantity;\r\n        // if in the binance futures setting Hedged mode is active, positionSide parameter is mandatory\r\n        if( typeof params.positionSide === 'undefined' && Binance.options.hedgeMode ){\r\n            params.positionSide = side === 'BUY' ? 'LONG' : 'SHORT';\r\n        }\r\n        // LIMIT STOP MARKET STOP_MARKET TAKE_PROFIT TAKE_PROFIT_MARKET\r\n        // reduceOnly stopPrice\r\n        if ( price ) {\r\n            params.price = price;\r\n            if ( typeof params.type === 'undefined' ) params.type = 'LIMIT';\r\n        } else {\r\n            if ( typeof params.type === 'undefined' ) params.type = 'MARKET';\r\n        }\r\n        if ( !params.timeInForce && ( params.type.includes( 'LIMIT' ) || params.type === 'STOP' || params.type === 'TAKE_PROFIT' ) ) {\r\n            params.timeInForce = 'GTX'; // Post only by default. Use GTC for limit orders.\r\n        }\r\n        return promiseRequest( 'v1/order', params, { base:fapi, type:'TRADE', method:'POST' } );\r\n    };\r\n    const deliveryOrder = async ( side, symbol, quantity, price = false, params = {} ) => {\r\n        params.symbol = symbol;\r\n        params.side = side;\r\n        params.quantity = quantity;\r\n        // if in the binance futures setting Hedged mode is active, positionSide parameter is mandatory\r\n        if( Binance.options.hedgeMode ){\r\n            params.positionSide = side === 'BUY' ? 'LONG' : 'SHORT';\r\n        }\r\n        // LIMIT STOP MARKET STOP_MARKET TAKE_PROFIT TAKE_PROFIT_MARKET\r\n        // reduceOnly stopPrice\r\n        if ( price ) {\r\n            params.price = price;\r\n            if ( typeof params.type === 'undefined' ) params.type = 'LIMIT';\r\n        } else {\r\n            if ( typeof params.type === 'undefined' ) params.type = 'MARKET';\r\n        }\r\n        if ( !params.timeInForce && ( params.type.includes( 'LIMIT' ) || params.type === 'STOP' || params.type === 'TAKE_PROFIT' ) ) {\r\n            params.timeInForce = 'GTX'; // Post only by default. Use GTC for limit orders.\r\n        }\r\n        return promiseRequest( 'v1/order', params, { base:dapi, type:'TRADE', method:'POST' } );\r\n    };\r\n    const promiseRequest = async ( url, data = {}, flags = {} ) => {\r\n        return new Promise( ( resolve, reject ) => {\r\n            let query = '', headers = {\r\n                'User-Agent': userAgent,\r\n                'Content-type': 'application/x-www-form-urlencoded'\r\n            };\r\n            if ( typeof flags.method === 'undefined' ) flags.method = 'GET'; // GET POST PUT DELETE\r\n            if ( typeof flags.type === 'undefined' ) flags.type = false; // TRADE, SIGNED, MARKET_DATA, USER_DATA, USER_STREAM\r\n            else {\r\n                if ( typeof data.recvWindow === 'undefined' ) data.recvWindow = Binance.options.recvWindow;\r\n                requireApiKey( 'promiseRequest' );\r\n                headers['X-MBX-APIKEY'] = Binance.options.APIKEY;\r\n            }\r\n            let baseURL = typeof flags.base === 'undefined' ? base : flags.base;\r\n            if ( Binance.options.test && baseURL === fapi ) baseURL = fapiTest;\r\n            if ( Binance.options.test && baseURL === dapi ) baseURL = dapiTest;\r\n            let opt = {\r\n                headers,\r\n                url: baseURL + url,\r\n                method: flags.method,\r\n                timeout: Binance.options.recvWindow,\r\n                followAllRedirects: true\r\n            };\r\n            if ( flags.type === 'SIGNED' || flags.type === 'TRADE' || flags.type === 'USER_DATA' ) {\r\n                if ( !requireApiSecret( 'promiseRequest' ) ) return reject( 'promiseRequest: Invalid API Secret!' );\r\n                data.timestamp = new Date().getTime() + Binance.info.timeOffset;\r\n                query = makeQueryString( data );\r\n                data.signature = crypto.createHmac( 'sha256', Binance.options.APISECRET ).update( query ).digest( 'hex' ); // HMAC hash header\r\n                opt.url = `${ baseURL }${ url }?${ query }&signature=${ data.signature }`;\r\n            }\r\n            opt.qs = data;\r\n            /*if ( flags.method === 'POST' ) {\r\n                opt.form = data;\r\n            } else {\r\n                opt.qs = data;\r\n            }*/\r\n            try {\r\n                request( addProxy( opt ), ( error, response, body ) => {\r\n                    if ( error ) return reject( error );\r\n                    try {\r\n                        Binance.info.lastRequest = new Date().getTime();\r\n                        if ( response ) {\r\n                            Binance.info.statusCode = response.statusCode || 0;\r\n                            if ( response.request ) Binance.info.lastURL = response.request.uri.href;\r\n                            if ( response.headers ) {\r\n                                Binance.info.usedWeight = response.headers['x-mbx-used-weight-1m'] || 0;\r\n                                Binance.info.futuresLatency = response.headers['x-response-time'] || 0;\r\n                            }\r\n                        }\r\n                        if ( !error && response.statusCode == 200 ) return resolve( JSONbig.parse( body ) );\r\n                        if ( typeof response.body !== 'undefined' ) {\r\n                            return resolve( JSONbig.parse( response.body ) );\r\n                        }\r\n                        return reject( response );\r\n                    } catch ( err ) {\r\n                        return reject( `promiseRequest error #${ response.statusCode }` );\r\n                    }\r\n                } ).on( 'error', reject );\r\n            } catch ( err ) {\r\n                return reject( err );\r\n            }\r\n        } );\r\n    };\r\n\r\n    /**\r\n     * No-operation function\r\n     * @return {undefined}\r\n     */\r\n    const noop = () => { }; // Do nothing.\r\n\r\n    /**\r\n     * Reworked Tuitio's heartbeat code into a shared single interval tick\r\n     * @return {undefined}\r\n     */\r\n    const socketHeartbeat = () => {\r\n        /* Sockets removed from `subscriptions` during a manual terminate()\r\n         will no longer be at risk of having functions called on them */\r\n        for ( let endpointId in Binance.subscriptions ) {\r\n            const ws = Binance.subscriptions[endpointId];\r\n            if ( ws.isAlive ) {\r\n                ws.isAlive = false;\r\n                if ( ws.readyState === WebSocket.OPEN ) ws.ping( noop );\r\n            } else {\r\n                if ( Binance.options.verbose ) Binance.options.log( 'Terminating inactive/broken WebSocket: ' + ws.endpoint );\r\n                if ( ws.readyState === WebSocket.OPEN ) ws.terminate();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Called when socket is opened, subscriptions are registered for later reference\r\n     * @param {function} opened_callback - a callback function\r\n     * @return {undefined}\r\n     */\r\n    const handleSocketOpen = function ( opened_callback ) {\r\n        this.isAlive = true;\r\n        if ( Object.keys( Binance.subscriptions ).length === 0 ) {\r\n            Binance.socketHeartbeatInterval = setInterval( socketHeartbeat, 30000 );\r\n        }\r\n        Binance.subscriptions[this.endpoint] = this;\r\n        if ( typeof opened_callback === 'function' ) opened_callback( this.endpoint );\r\n    };\r\n\r\n    /**\r\n     * Called when socket is closed, subscriptions are de-registered for later reference\r\n     * @param {boolean} reconnect - true or false to reconnect the socket\r\n     * @param {string} code - code associated with the socket\r\n     * @param {string} reason - string with the response\r\n     * @return {undefined}\r\n     */\r\n    const handleSocketClose = function ( reconnect, code, reason ) {\r\n        delete Binance.subscriptions[this.endpoint];\r\n        if ( Binance.subscriptions && Object.keys( Binance.subscriptions ).length === 0 ) {\r\n            clearInterval( Binance.socketHeartbeatInterval );\r\n        }\r\n        Binance.options.log( 'WebSocket closed: ' + this.endpoint +\r\n          ( code ? ' (' + code + ')' : '' ) +\r\n          ( reason ? ' ' + reason : '' ) );\r\n        if ( Binance.options.reconnect && this.reconnect && reconnect ) {\r\n            if ( this.endpoint && parseInt( this.endpoint.length, 10 ) === 60 ) Binance.options.log( 'Account data WebSocket reconnecting...' );\r\n            else Binance.options.log( 'WebSocket reconnecting: ' + this.endpoint + '...' );\r\n            try {\r\n                reconnect();\r\n            } catch ( error ) {\r\n                Binance.options.log( 'WebSocket reconnect error: ' + error.message );\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Called when socket errors\r\n     * @param {object} error - error object message\r\n     * @return {undefined}\r\n     */\r\n    const handleSocketError = function ( error ) {\r\n        /* Errors ultimately result in a `close` event.\r\n         see: https://github.com/websockets/ws/blob/828194044bf247af852b31c49e2800d557fedeff/lib/websocket.js#L126 */\r\n        Binance.options.log( 'WebSocket error: ' + this.endpoint +\r\n          ( error.code ? ' (' + error.code + ')' : '' ) +\r\n          ( error.message ? ' ' + error.message : '' ) );\r\n    };\r\n\r\n    /**\r\n     * Called on each socket heartbeat\r\n     * @return {undefined}\r\n     */\r\n    const handleSocketHeartbeat = function () {\r\n        this.isAlive = true;\r\n    };\r\n\r\n    /**\r\n     * Used to subscribe to a single websocket endpoint\r\n     * @param {string} endpoint - endpoint to connect to\r\n     * @param {function} callback - the function to call when information is received\r\n     * @param {boolean} reconnect - whether to reconnect on disconnect\r\n     * @param {object} opened_callback - the function to call when opened\r\n     * @return {WebSocket} - websocket reference\r\n     */\r\n    const subscribe = function ( endpoint, callback, reconnect = false, opened_callback = false ) {\r\n        let httpsproxy = process.env.https_proxy || false;\r\n        let socksproxy = process.env.socks_proxy || false;\r\n        let ws = false;\r\n\r\n        if ( socksproxy !== false ) {\r\n            socksproxy = proxyReplacewithIp( socksproxy );\r\n            if ( Binance.options.verbose ) Binance.options.log( 'using socks proxy server ' + socksproxy );\r\n            let agent = new SocksProxyAgent( {\r\n                protocol: parseProxy( socksproxy )[0],\r\n                host: parseProxy( socksproxy )[1],\r\n                port: parseProxy( socksproxy )[2]\r\n            } );\r\n            ws = new WebSocket( stream + endpoint, { agent: agent } );\r\n        } else if ( httpsproxy !== false ) {\r\n            let config = url.parse( httpsproxy );\r\n            let agent = new HttpsProxyAgent( config );\r\n            if ( Binance.options.verbose ) Binance.options.log( 'using proxy server ' + agent );\r\n            ws = new WebSocket( stream + endpoint, { agent: agent } );\r\n        } else {\r\n            ws = new WebSocket( stream + endpoint );\r\n        }\r\n\r\n        if ( Binance.options.verbose ) Binance.options.log( 'Subscribed to ' + endpoint );\r\n        ws.reconnect = Binance.options.reconnect;\r\n        ws.endpoint = endpoint;\r\n        ws.isAlive = false;\r\n        ws.on( 'open', handleSocketOpen.bind( ws, opened_callback ) );\r\n        ws.on( 'pong', handleSocketHeartbeat );\r\n        ws.on( 'error', handleSocketError );\r\n        ws.on( 'close', handleSocketClose.bind( ws, reconnect ) );\r\n        ws.on( 'message', data => {\r\n            try {\r\n                callback( JSON.parse( data ) );\r\n            } catch ( error ) {\r\n                Binance.options.log( 'Parse error: ' + error.message );\r\n            }\r\n        } );\r\n        return ws;\r\n    };\r\n\r\n    /**\r\n     * Used to subscribe to a combined websocket endpoint\r\n     * @param {string} streams - streams to connect to\r\n     * @param {function} callback - the function to call when information is received\r\n     * @param {boolean} reconnect - whether to reconnect on disconnect\r\n     * @param {object} opened_callback - the function to call when opened\r\n     * @return {WebSocket} - websocket reference\r\n     */\r\n    const subscribeCombined = function ( streams, callback, reconnect = false, opened_callback = false ) {\r\n        let httpsproxy = process.env.https_proxy || false;\r\n        let socksproxy = process.env.socks_proxy || false;\r\n        const queryParams = streams.join( '/' );\r\n        let ws = false;\r\n        if ( socksproxy !== false ) {\r\n            socksproxy = proxyReplacewithIp( socksproxy );\r\n            if ( Binance.options.verbose ) Binance.options.log( 'using socks proxy server ' + socksproxy );\r\n            let agent = new SocksProxyAgent( {\r\n                protocol: parseProxy( socksproxy )[0],\r\n                host: parseProxy( socksproxy )[1],\r\n                port: parseProxy( socksproxy )[2]\r\n            } );\r\n            ws = new WebSocket( combineStream + queryParams, { agent: agent } );\r\n        } else if ( httpsproxy !== false ) {\r\n            if ( Binance.options.verbose ) Binance.options.log( 'using proxy server ' + httpsproxy );\r\n            let config = url.parse( httpsproxy );\r\n            let agent = new HttpsProxyAgent( config );\r\n            ws = new WebSocket( combineStream + queryParams, { agent: agent } );\r\n        } else {\r\n            ws = new WebSocket( combineStream + queryParams );\r\n        }\r\n\r\n        ws.reconnect = Binance.options.reconnect;\r\n        ws.endpoint = stringHash( queryParams );\r\n        ws.isAlive = false;\r\n        if ( Binance.options.verbose ) {\r\n            Binance.options.log( 'CombinedStream: Subscribed to [' + ws.endpoint + '] ' + queryParams );\r\n        }\r\n        ws.on( 'open', handleSocketOpen.bind( ws, opened_callback ) );\r\n        ws.on( 'pong', handleSocketHeartbeat );\r\n        ws.on( 'error', handleSocketError );\r\n        ws.on( 'close', handleSocketClose.bind( ws, reconnect ) );\r\n        ws.on( 'message', data => {\r\n            try {\r\n                callback( JSON.parse( data ).data );\r\n            } catch ( error ) {\r\n                Binance.options.log( 'CombinedStream: Parse error: ' + error.message );\r\n            }\r\n        } );\r\n        return ws;\r\n    };\r\n\r\n    /**\r\n     * Used to terminate a web socket\r\n     * @param {string} endpoint - endpoint identifier associated with the web socket\r\n     * @param {boolean} reconnect - auto reconnect after termination\r\n     * @return {undefined}\r\n     */\r\n    const terminate = function ( endpoint, reconnect = false ) {\r\n        let ws = Binance.subscriptions[endpoint];\r\n        if ( !ws ) return;\r\n        ws.removeAllListeners( 'message' );\r\n        ws.reconnect = reconnect;\r\n        ws.terminate();\r\n    }\r\n\r\n\r\n    /**\r\n     * Futures heartbeat code with a shared single interval tick\r\n     * @return {undefined}\r\n     */\r\n    const futuresSocketHeartbeat = () => {\r\n        /* Sockets removed from subscriptions during a manual terminate()\r\n         will no longer be at risk of having functions called on them */\r\n        for ( let endpointId in Binance.futuresSubscriptions ) {\r\n            const ws = Binance.futuresSubscriptions[endpointId];\r\n            if ( ws.isAlive ) {\r\n                ws.isAlive = false;\r\n                if ( ws.readyState === WebSocket.OPEN ) ws.ping( noop );\r\n            } else {\r\n                if ( Binance.options.verbose ) Binance.options.log( `Terminating zombie futures WebSocket: ${ ws.endpoint }` );\r\n                if ( ws.readyState === WebSocket.OPEN ) ws.terminate();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Called when a futures socket is opened, subscriptions are registered for later reference\r\n     * @param {function} openCallback - a callback function\r\n     * @return {undefined}\r\n     */\r\n    const handleFuturesSocketOpen = function ( openCallback ) {\r\n        this.isAlive = true;\r\n        if ( Object.keys( Binance.futuresSubscriptions ).length === 0 ) {\r\n            Binance.socketHeartbeatInterval = setInterval( futuresSocketHeartbeat, 30000 );\r\n        }\r\n        Binance.futuresSubscriptions[this.endpoint] = this;\r\n        if ( typeof openCallback === 'function' ) openCallback( this.endpoint );\r\n    };\r\n\r\n    /**\r\n     * Called when futures websocket is closed, subscriptions are de-registered for later reference\r\n     * @param {boolean} reconnect - true or false to reconnect the socket\r\n     * @param {string} code - code associated with the socket\r\n     * @param {string} reason - string with the response\r\n     * @return {undefined}\r\n     */\r\n    const handleFuturesSocketClose = function ( reconnect, code, reason ) {\r\n        delete Binance.futuresSubscriptions[this.endpoint];\r\n        if ( Binance.futuresSubscriptions && Object.keys( Binance.futuresSubscriptions ).length === 0 ) {\r\n            clearInterval( Binance.socketHeartbeatInterval );\r\n        }\r\n        Binance.options.log( 'Futures WebSocket closed: ' + this.endpoint +\r\n          ( code ? ' (' + code + ')' : '' ) +\r\n          ( reason ? ' ' + reason : '' ) );\r\n        if ( Binance.options.reconnect && this.reconnect && reconnect ) {\r\n            if ( this.endpoint && parseInt( this.endpoint.length, 10 ) === 60 ) Binance.options.log( 'Futures account data WebSocket reconnecting...' );\r\n            else Binance.options.log( 'Futures WebSocket reconnecting: ' + this.endpoint + '...' );\r\n            try {\r\n                reconnect();\r\n            } catch ( error ) {\r\n                Binance.options.log( 'Futures WebSocket reconnect error: ' + error.message );\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Called when a futures websocket errors\r\n     * @param {object} error - error object message\r\n     * @return {undefined}\r\n     */\r\n    const handleFuturesSocketError = function ( error ) {\r\n        Binance.options.log( 'Futures WebSocket error: ' + this.endpoint +\r\n          ( error.code ? ' (' + error.code + ')' : '' ) +\r\n          ( error.message ? ' ' + error.message : '' ) );\r\n    };\r\n\r\n    /**\r\n     * Called on each futures socket heartbeat\r\n     * @return {undefined}\r\n     */\r\n    const handleFuturesSocketHeartbeat = function () {\r\n        this.isAlive = true;\r\n    };\r\n\r\n    /**\r\n     * Used to subscribe to a single futures websocket endpoint\r\n     * @param {string} endpoint - endpoint to connect to\r\n     * @param {function} callback - the function to call when information is received\r\n     * @param {object} params - Optional reconnect {boolean} (whether to reconnect on disconnect), openCallback {function}, id {string}\r\n     * @return {WebSocket} - websocket reference\r\n     */\r\n    const futuresSubscribeSingle = function ( endpoint, callback, params = {} ) {\r\n        if ( typeof params === 'boolean' ) params = { reconnect: params };\r\n        if ( !params.reconnect ) params.reconnect = false;\r\n        if ( !params.openCallback ) params.openCallback = false;\r\n        if ( !params.id ) params.id = false;\r\n        let httpsproxy = process.env.https_proxy || false;\r\n        let socksproxy = process.env.socks_proxy || false;\r\n        let ws = false;\r\n\r\n        if ( socksproxy !== false ) {\r\n            socksproxy = proxyReplacewithIp( socksproxy );\r\n            if ( Binance.options.verbose ) Binance.options.log( `futuresSubscribeSingle: using socks proxy server: ${ socksproxy }` );\r\n            let agent = new SocksProxyAgent( {\r\n                protocol: parseProxy( socksproxy )[0],\r\n                host: parseProxy( socksproxy )[1],\r\n                port: parseProxy( socksproxy )[2]\r\n            } );\r\n            ws = new WebSocket( ( Binance.options.test ? fstreamSingleTest : fstreamSingle ) + endpoint, { agent } );\r\n        } else if ( httpsproxy !== false ) {\r\n            if ( Binance.options.verbose ) Binance.options.log( `futuresSubscribeSingle: using proxy server: ${ agent }` );\r\n            let config = url.parse( httpsproxy );\r\n            let agent = new HttpsProxyAgent( config );\r\n            ws = new WebSocket( ( Binance.options.test ? fstreamSingleTest : fstreamSingle ) + endpoint, { agent } );\r\n        } else {\r\n            ws = new WebSocket( ( Binance.options.test ? fstreamSingleTest : fstreamSingle ) + endpoint );\r\n        }\r\n\r\n        if ( Binance.options.verbose ) Binance.options.log( 'futuresSubscribeSingle: Subscribed to ' + endpoint );\r\n        ws.reconnect = Binance.options.reconnect;\r\n        ws.endpoint = endpoint;\r\n        ws.isAlive = false;\r\n        ws.on( 'open', handleFuturesSocketOpen.bind( ws, params.openCallback ) );\r\n        ws.on( 'pong', handleFuturesSocketHeartbeat );\r\n        ws.on( 'error', handleFuturesSocketError );\r\n        ws.on( 'close', handleFuturesSocketClose.bind( ws, params.reconnect ) );\r\n        ws.on( 'message', data => {\r\n            try {\r\n                callback( JSON.parse( data ) );\r\n            } catch ( error ) {\r\n                Binance.options.log( 'Parse error: ' + error.message );\r\n            }\r\n        } );\r\n        return ws;\r\n    };\r\n\r\n    /**\r\n     * Used to subscribe to a combined futures websocket endpoint\r\n     * @param {string} streams - streams to connect to\r\n     * @param {function} callback - the function to call when information is received\r\n     * @param {object} params - Optional reconnect {boolean} (whether to reconnect on disconnect), openCallback {function}, id {string}\r\n     * @return {WebSocket} - websocket reference\r\n     */\r\n    const futuresSubscribe = function ( streams, callback, params = {} ) {\r\n        if ( typeof streams === 'string' ) return futuresSubscribeSingle( streams, callback, params );\r\n        if ( typeof params === 'boolean' ) params = { reconnect: params };\r\n        if ( !params.reconnect ) params.reconnect = false;\r\n        if ( !params.openCallback ) params.openCallback = false;\r\n        if ( !params.id ) params.id = false;\r\n        let httpsproxy = process.env.https_proxy || false;\r\n        let socksproxy = process.env.socks_proxy || false;\r\n        const queryParams = streams.join( '/' );\r\n        let ws = false;\r\n        if ( socksproxy !== false ) {\r\n            socksproxy = proxyReplacewithIp( socksproxy );\r\n            if ( Binance.options.verbose ) Binance.options.log( `futuresSubscribe: using socks proxy server ${ socksproxy }` );\r\n            let agent = new SocksProxyAgent( {\r\n                protocol: parseProxy( socksproxy )[0],\r\n                host: parseProxy( socksproxy )[1],\r\n                port: parseProxy( socksproxy )[2]\r\n            } );\r\n            ws = new WebSocket( ( Binance.options.test ? fstreamTest : fstream ) + queryParams, { agent } );\r\n        } else if ( httpsproxy !== false ) {\r\n            if ( Binance.options.verbose ) Binance.options.log( `futuresSubscribe: using proxy server ${ httpsproxy }` );\r\n            let config = url.parse( httpsproxy );\r\n            let agent = new HttpsProxyAgent( config );\r\n            ws = new WebSocket( ( Binance.options.test ? fstreamTest : fstream ) + queryParams, { agent } );\r\n        } else {\r\n            ws = new WebSocket( ( Binance.options.test ? fstreamTest : fstream ) + queryParams );\r\n        }\r\n\r\n        ws.reconnect = Binance.options.reconnect;\r\n        ws.endpoint = stringHash( queryParams );\r\n        ws.isAlive = false;\r\n        if ( Binance.options.verbose ) {\r\n            Binance.options.log( `futuresSubscribe: Subscribed to [${ ws.endpoint }] ${ queryParams }` );\r\n        }\r\n        ws.on( 'open', handleFuturesSocketOpen.bind( ws, params.openCallback ) );\r\n        ws.on( 'pong', handleFuturesSocketHeartbeat );\r\n        ws.on( 'error', handleFuturesSocketError );\r\n        ws.on( 'close', handleFuturesSocketClose.bind( ws, params.reconnect ) );\r\n        ws.on( 'message', data => {\r\n            try {\r\n                callback( JSON.parse( data ).data );\r\n            } catch ( error ) {\r\n                Binance.options.log( `futuresSubscribe: Parse error: ${ error.message }` );\r\n            }\r\n        } );\r\n        return ws;\r\n    };\r\n\r\n    /**\r\n     * Used to terminate a futures websocket\r\n     * @param {string} endpoint - endpoint identifier associated with the web socket\r\n     * @param {boolean} reconnect - auto reconnect after termination\r\n     * @return {undefined}\r\n     */\r\n    const futuresTerminate = function ( endpoint, reconnect = false ) {\r\n        let ws = Binance.futuresSubscriptions[endpoint];\r\n        if ( !ws ) return;\r\n        ws.removeAllListeners( 'message' );\r\n        ws.reconnect = reconnect;\r\n        ws.terminate();\r\n    }\r\n\r\n    /**\r\n     * Combines all futures OHLC data with the latest update\r\n     * @param {string} symbol - the symbol\r\n     * @param {string} interval - time interval\r\n     * @return {array} - interval data for given symbol\r\n     */\r\n    const futuresKlineConcat = ( symbol, interval ) => {\r\n        let output = Binance.futuresTicks[symbol][interval];\r\n        if ( typeof Binance.futuresRealtime[symbol][interval].time === 'undefined' ) return output;\r\n        const time = Binance.futuresRealtime[symbol][interval].time;\r\n        const last_updated = Object.keys( Binance.futuresTicks[symbol][interval] ).pop();\r\n        if ( time >= last_updated ) {\r\n            output[time] = Binance.futuresRealtime[symbol][interval];\r\n            //delete output[time].time;\r\n            output[last_updated].isFinal = true;\r\n            output[time].isFinal = false;\r\n        }\r\n        return output;\r\n    };\r\n\r\n    /**\r\n     * Used for websocket futures @kline\r\n     * @param {string} symbol - the symbol\r\n     * @param {object} kline - object with kline info\r\n     * @param {string} firstTime - time filter\r\n     * @return {undefined}\r\n     */\r\n    const futuresKlineHandler = ( symbol, kline, firstTime = 0 ) => {\r\n        // eslint-disable-next-line no-unused-vars\r\n        let { e: eventType, E: eventTime, k: ticks } = kline;\r\n        // eslint-disable-next-line no-unused-vars\r\n        let { o: open, h: high, l: low, c: close, v: volume, i: interval, x: isFinal, q: quoteVolume, V: takerBuyBaseVolume, Q: takerBuyQuoteVolume, n: trades, t: time, T:closeTime } = ticks;\r\n        if ( time <= firstTime ) return;\r\n        if ( !isFinal ) {\r\n            // if ( typeof Binance.futuresRealtime[symbol][interval].time !== 'undefined' ) {\r\n            //     if ( Binance.futuresRealtime[symbol][interval].time > time ) return;\r\n            // }\r\n            Binance.futuresRealtime[symbol][interval] = { time, closeTime, open, high, low, close, volume, quoteVolume, takerBuyBaseVolume, takerBuyQuoteVolume, trades, isFinal };\r\n            return;\r\n        }\r\n        const first_updated = Object.keys( Binance.futuresTicks[symbol][interval] ).shift();\r\n        if ( first_updated ) delete Binance.futuresTicks[symbol][interval][first_updated];\r\n        Binance.futuresTicks[symbol][interval][time] = { time, closeTime, open, high, low, close, volume, quoteVolume, takerBuyBaseVolume, takerBuyQuoteVolume, trades, isFinal:false };\r\n    };\r\n\r\n    /**\r\n     * Converts the futures liquidation stream data into a friendly object\r\n     * @param {object} data - liquidation data callback data type\r\n     * @return {object} - user friendly data type\r\n     */\r\n    const fLiquidationConvertData = data => {\r\n        let eventType = data.e, eventTime = data.E;\r\n        let {\r\n            s: symbol,\r\n            S: side,\r\n            o: orderType,\r\n            f: timeInForce,\r\n            q: origAmount,\r\n            p: price,\r\n            ap: avgPrice,\r\n            X: orderStatus,\r\n            l: lastFilledQty,\r\n            z: totalFilledQty,\r\n            T: tradeTime\r\n        } = data.o;\r\n        return { symbol, side, orderType, timeInForce, origAmount, price, avgPrice, orderStatus, lastFilledQty, totalFilledQty, eventType, tradeTime, eventTime };\r\n    };\r\n\r\n    /**\r\n     * Converts the futures ticker stream data into a friendly object\r\n     * @param {object} data - user data callback data type\r\n     * @return {object} - user friendly data type\r\n     */\r\n    const fTickerConvertData = data => {\r\n        let friendlyData = data => {\r\n            let {\r\n                e: eventType,\r\n                E: eventTime,\r\n                s: symbol,\r\n                p: priceChange,\r\n                P: percentChange,\r\n                w: averagePrice,\r\n                c: close,\r\n                Q: closeQty,\r\n                o: open,\r\n                h: high,\r\n                l: low,\r\n                v: volume,\r\n                q: quoteVolume,\r\n                O: openTime,\r\n                C: closeTime,\r\n                F: firstTradeId,\r\n                L: lastTradeId,\r\n                n: numTrades\r\n            } = data;\r\n            return {\r\n                eventType,\r\n                eventTime,\r\n                symbol,\r\n                priceChange,\r\n                percentChange,\r\n                averagePrice,\r\n                close,\r\n                closeQty,\r\n                open,\r\n                high,\r\n                low,\r\n                volume,\r\n                quoteVolume,\r\n                openTime,\r\n                closeTime,\r\n                firstTradeId,\r\n                lastTradeId,\r\n                numTrades\r\n            };\r\n        }\r\n        if ( Array.isArray( data ) ) {\r\n            const result = [];\r\n            for ( let obj of data ) {\r\n                result.push( friendlyData( obj ) );\r\n            }\r\n            return result;\r\n        }\r\n        return friendlyData( data );\r\n    }\r\n\r\n    /**\r\n     * Converts the futures miniTicker stream data into a friendly object\r\n     * @param {object} data - user data callback data type\r\n     * @return {object} - user friendly data type\r\n     */\r\n    const fMiniTickerConvertData = data => {\r\n        let friendlyData = data => {\r\n            let {\r\n                e: eventType,\r\n                E: eventTime,\r\n                s: symbol,\r\n                c: close,\r\n                o: open,\r\n                h: high,\r\n                l: low,\r\n                v: volume,\r\n                q: quoteVolume\r\n            } = data;\r\n            return {\r\n                eventType,\r\n                eventTime,\r\n                symbol,\r\n                close,\r\n                open,\r\n                high,\r\n                low,\r\n                volume,\r\n                quoteVolume\r\n            };\r\n        }\r\n        if ( Array.isArray( data ) ) {\r\n            const result = [];\r\n            for ( let obj of data ) {\r\n                result.push( friendlyData( obj ) );\r\n            }\r\n            return result;\r\n        }\r\n        return friendlyData( data );\r\n    }\r\n\r\n    /**\r\n     * Converts the futures bookTicker stream data into a friendly object\r\n     * @param {object} data - user data callback data type\r\n     * @return {object} - user friendly data type\r\n     */\r\n    const fBookTickerConvertData = data => {\r\n        let {\r\n            u: updateId,\r\n            s: symbol,\r\n            b: bestBid,\r\n            B: bestBidQty,\r\n            a: bestAsk,\r\n            A: bestAskQty\r\n        } = data;\r\n        return {\r\n            updateId,\r\n            symbol,\r\n            bestBid,\r\n            bestBidQty,\r\n            bestAsk,\r\n            bestAskQty\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Converts the futures UserData stream MARGIN_CALL data into a friendly object\r\n     * @param {object} data - user data callback data type\r\n     * @return {object} - user friendly data type\r\n     */\r\n    const fUserDataMarginConvertData = data => {\r\n        let {\r\n            e: eventType,\r\n            E: eventTime,\r\n            cw: crossWalletBalance, // only pushed with crossed position margin call\r\n            p: positions\r\n        } = data;\r\n        let positionConverter = position => {\r\n            let {\r\n                s: symbol,\r\n                ps: positionSide,\r\n                pa: positionAmount,\r\n                mt: marginType,\r\n                iw: isolatedWallet, // if isolated position\r\n                mp: markPrice,\r\n                up: unrealizedPnL,\r\n                mm: maintenanceMargin // maintenance margin required\r\n            } = position;\r\n            return {\r\n                symbol,\r\n                positionSide,\r\n                positionAmount,\r\n                marginType,\r\n                isolatedWallet,\r\n                markPrice,\r\n                unrealizedPnL,\r\n                maintenanceMargin\r\n            }\r\n        };\r\n        const convertedPositions = [];\r\n        for ( let position of positions ) {\r\n            convertedPositions.push( positionConverter( position ) );\r\n        }\r\n        positions = convertedPositions;\r\n        return {\r\n            eventType,\r\n            eventTime,\r\n            crossWalletBalance,\r\n            positions\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Converts the futures UserData stream ACCOUNT_CONFIG_UPDATE into a friendly object\r\n     * @param {object} data - user config callback data type\r\n     * @return {object} - user friendly data type\r\n     */\r\n    const fUserConfigDataAccountUpdateConvertData = data => {\r\n        return {\r\n            eventType: data.e,\r\n            eventTime: data.E,\r\n            transactionTime: data.T,\r\n            ac: {\r\n                symbol: data.ac.s,\r\n                leverage: data.ac.l\r\n            }\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Converts the futures UserData stream ACCOUNT_UPDATE data into a friendly object\r\n     * @param {object} data - user data callback data type\r\n     * @return {object} - user friendly data type\r\n     */\r\n    const fUserDataAccountUpdateConvertData = data => {\r\n        let {\r\n            e: eventType,\r\n            E: eventTime,\r\n            T: transaction,\r\n            a: updateData\r\n        } = data;\r\n        let updateConverter = updateData => {\r\n            let {\r\n                m: eventReasonType,\r\n                B: balances,\r\n                P: positions\r\n            } = updateData;\r\n            let positionConverter = position => {\r\n                let {\r\n                    s: symbol,\r\n                    pa: positionAmount,\r\n                    ep: entryPrice,\r\n                    cr: accumulatedRealized, // (Pre-fee) Accumulated Realized\r\n                    up: unrealizedPnL,\r\n                    mt: marginType,\r\n                    iw: isolatedWallet, // if isolated position\r\n                    ps: positionSide\r\n                } = position;\r\n                return {\r\n                    symbol,\r\n                    positionAmount,\r\n                    entryPrice,\r\n                    accumulatedRealized,\r\n                    unrealizedPnL,\r\n                    marginType,\r\n                    isolatedWallet,\r\n                    positionSide\r\n                };\r\n            };\r\n            let balanceConverter = balance => {\r\n                let {\r\n                    a: asset,\r\n                    wb: walletBalance,\r\n                    cw: crossWalletBalance\r\n                } = balance;\r\n                return {\r\n                    asset,\r\n                    walletBalance,\r\n                    crossWalletBalance\r\n                }\r\n            };\r\n\r\n            const balanceResult = [];\r\n            const positionResult = [];\r\n\r\n            for ( let balance of balances ) {\r\n                balanceResult.push( balanceConverter( balance ) );\r\n            }\r\n            for ( let position of positions ) {\r\n                positionResult.push( positionConverter( position ) );\r\n            }\r\n\r\n            balances = balanceResult;\r\n            positions = positionResult;\r\n            return {\r\n                eventReasonType,\r\n                balances,\r\n                positions\r\n            };\r\n        };\r\n        updateData = updateConverter( updateData );\r\n        return {\r\n            eventType,\r\n            eventTime,\r\n            transaction,\r\n            updateData\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Converts the futures UserData stream ORDER_TRADE_UPDATE data into a friendly object\r\n     * @param {object} data - user data callback data type\r\n     * @return {object} - user friendly data type\r\n     */\r\n    const fUserDataOrderUpdateConvertData = data => {\r\n        let {\r\n            e: eventType,\r\n            E: eventTime,\r\n            T: transaction, // transaction time\r\n            o: order\r\n        } = data;\r\n\r\n        let orderConverter = order => {\r\n            let {\r\n                s: symbol,\r\n                c: clientOrderId,\r\n                // special client order id:\r\n                // starts with \"autoclose-\": liquidation order\r\n                // \"adl_autoclose\": ADL auto close order\r\n                S: side,\r\n                o: orderType,\r\n                f: timeInForce,\r\n                q: originalQuantity,\r\n                p: originalPrice,\r\n                ap: averagePrice,\r\n                sp: stopPrice, // please ignore with TRAILING_STOP_MARKET order,\r\n                x: executionType,\r\n                X: orderStatus,\r\n                i: orderId,\r\n                l: orderLastFilledQuantity,\r\n                z: orderFilledAccumulatedQuantity,\r\n                L: lastFilledPrice,\r\n                N: commissionAsset, // will not push if no commission\r\n                n: commission, // will not push if no commission\r\n                T: orderTradeTime,\r\n                t: tradeId,\r\n                b: bidsNotional,\r\n                a: askNotional,\r\n                m: isMakerSide, // is this trade maker side\r\n                R: isReduceOnly, // is this reduce only\r\n                wt: stopPriceWorkingType,\r\n                ot: originalOrderType,\r\n                ps: positionSide,\r\n                cp: closeAll, // if close-all, pushed with conditional order\r\n                AP: activationPrice, // only pushed with TRAILING_STOP_MARKET order\r\n                cr: callbackRate, // only pushed with TRAILING_STOP_MARKET order\r\n                rp: realizedProfit\r\n            } = order;\r\n            return {\r\n                symbol,\r\n                clientOrderId,\r\n                side,\r\n                orderType,\r\n                timeInForce,\r\n                originalQuantity,\r\n                originalPrice,\r\n                averagePrice,\r\n                stopPrice,\r\n                executionType,\r\n                orderStatus,\r\n                orderId,\r\n                orderLastFilledQuantity,\r\n                orderFilledAccumulatedQuantity,\r\n                lastFilledPrice,\r\n                commissionAsset,\r\n                commission,\r\n                orderTradeTime,\r\n                tradeId,\r\n                bidsNotional,\r\n                askNotional,\r\n                isMakerSide,\r\n                isReduceOnly,\r\n                stopPriceWorkingType,\r\n                originalOrderType,\r\n                positionSide,\r\n                closeAll,\r\n                activationPrice,\r\n                callbackRate,\r\n                realizedProfit\r\n            };\r\n        };\r\n        order = orderConverter( order );\r\n        return {\r\n            eventType,\r\n            eventTime,\r\n            transaction,\r\n            order\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Converts the futures markPrice stream data into a friendly object\r\n     * @param {object} data - user data callback data type\r\n     * @return {object} - user friendly data type\r\n     */\r\n    const fMarkPriceConvertData = data => {\r\n        let friendlyData = data => {\r\n            let {\r\n                e: eventType,\r\n                E: eventTime,\r\n                s: symbol,\r\n                p: markPrice,\r\n                i: indexPrice,\r\n                r: fundingRate,\r\n                T: fundingTime\r\n            } = data;\r\n            return {\r\n                eventType,\r\n                eventTime,\r\n                symbol,\r\n                markPrice,\r\n                indexPrice,\r\n                fundingRate,\r\n                fundingTime\r\n            };\r\n        }\r\n        if ( Array.isArray( data ) ) {\r\n            const result = [];\r\n            for ( let obj of data ) {\r\n                result.push( friendlyData( obj ) );\r\n            }\r\n            return result;\r\n        }\r\n        return friendlyData( data );\r\n    }\r\n\r\n    /**\r\n     * Converts the futures aggTrade stream data into a friendly object\r\n     * @param {object} data - user data callback data type\r\n     * @return {object} - user friendly data type\r\n     */\r\n    const fAggTradeConvertData = data => {\r\n        let friendlyData = data => {\r\n            let {\r\n                e: eventType,\r\n                E: eventTime,\r\n                s: symbol,\r\n                a: aggTradeId,\r\n                p: price,\r\n                q: amount,\r\n                f: firstTradeId,\r\n                l: lastTradeId,\r\n                T: timestamp,\r\n                m: maker\r\n            } = data;\r\n            return {\r\n                eventType,\r\n                eventTime,\r\n                symbol,\r\n                aggTradeId,\r\n                price,\r\n                amount,\r\n                total: price * amount,\r\n                firstTradeId,\r\n                lastTradeId,\r\n                timestamp,\r\n                maker\r\n            };\r\n        }\r\n        if ( Array.isArray( data ) ) {\r\n            const result = [];\r\n            for ( let obj of data ) {\r\n                result.push( friendlyData( obj ) );\r\n            }\r\n            return result;\r\n        }\r\n        return friendlyData( data );\r\n    }\r\n\r\n    /**\r\n     * Delivery heartbeat code with a shared single interval tick\r\n     * @return {undefined}\r\n     */\r\n    const deliverySocketHeartbeat = () => {\r\n        /* Sockets removed from subscriptions during a manual terminate()\r\n         will no longer be at risk of having functions called on them */\r\n        for ( let endpointId in Binance.deliverySubscriptions ) {\r\n            const ws = Binance.deliverySubscriptions[endpointId];\r\n            if ( ws.isAlive ) {\r\n                ws.isAlive = false;\r\n                if ( ws.readyState === WebSocket.OPEN ) ws.ping( noop );\r\n            } else {\r\n                if ( Binance.options.verbose ) Binance.options.log( `Terminating zombie delivery WebSocket: ${ ws.endpoint }` );\r\n                if ( ws.readyState === WebSocket.OPEN ) ws.terminate();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Called when a delivery socket is opened, subscriptions are registered for later reference\r\n     * @param {function} openCallback - a callback function\r\n     * @return {undefined}\r\n     */\r\n    const handleDeliverySocketOpen = function ( openCallback ) {\r\n        this.isAlive = true;\r\n        if ( Object.keys( Binance.deliverySubscriptions ).length === 0 ) {\r\n            Binance.socketHeartbeatInterval = setInterval( deliverySocketHeartbeat, 30000 );\r\n        }\r\n        Binance.deliverySubscriptions[this.endpoint] = this;\r\n        if ( typeof openCallback === 'function' ) openCallback( this.endpoint );\r\n    };\r\n\r\n    /**\r\n     * Called when delivery websocket is closed, subscriptions are de-registered for later reference\r\n     * @param {boolean} reconnect - true or false to reconnect the socket\r\n     * @param {string} code - code associated with the socket\r\n     * @param {string} reason - string with the response\r\n     * @return {undefined}\r\n     */\r\n    const handleDeliverySocketClose = function ( reconnect, code, reason ) {\r\n        delete Binance.deliverySubscriptions[this.endpoint];\r\n        if ( Binance.deliverySubscriptions && Object.keys( Binance.deliverySubscriptions ).length === 0 ) {\r\n            clearInterval( Binance.socketHeartbeatInterval );\r\n        }\r\n        Binance.options.log( 'Delivery WebSocket closed: ' + this.endpoint +\r\n          ( code ? ' (' + code + ')' : '' ) +\r\n          ( reason ? ' ' + reason : '' ) );\r\n        if ( Binance.options.reconnect && this.reconnect && reconnect ) {\r\n            if ( this.endpoint && parseInt( this.endpoint.length, 10 ) === 60 ) Binance.options.log( 'Delivery account data WebSocket reconnecting...' );\r\n            else Binance.options.log( 'Delivery WebSocket reconnecting: ' + this.endpoint + '...' );\r\n            try {\r\n                reconnect();\r\n            } catch ( error ) {\r\n                Binance.options.log( 'Delivery WebSocket reconnect error: ' + error.message );\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Called when a delivery websocket errors\r\n     * @param {object} error - error object message\r\n     * @return {undefined}\r\n     */\r\n    const handleDeliverySocketError = function ( error ) {\r\n        Binance.options.log( 'Delivery WebSocket error: ' + this.endpoint +\r\n          ( error.code ? ' (' + error.code + ')' : '' ) +\r\n          ( error.message ? ' ' + error.message : '' ) );\r\n    };\r\n\r\n    /**\r\n     * Called on each delivery socket heartbeat\r\n     * @return {undefined}\r\n     */\r\n    const handleDeliverySocketHeartbeat = function () {\r\n        this.isAlive = true;\r\n    };\r\n\r\n    /**\r\n     * Used to subscribe to a single delivery websocket endpoint\r\n     * @param {string} endpoint - endpoint to connect to\r\n     * @param {function} callback - the function to call when information is received\r\n     * @param {object} params - Optional reconnect {boolean} (whether to reconnect on disconnect), openCallback {function}, id {string}\r\n     * @return {WebSocket} - websocket reference\r\n     */\r\n    const deliverySubscribeSingle = function ( endpoint, callback, params = {} ) {\r\n        if ( typeof params === 'boolean' ) params = { reconnect: params };\r\n        if ( !params.reconnect ) params.reconnect = false;\r\n        if ( !params.openCallback ) params.openCallback = false;\r\n        if ( !params.id ) params.id = false;\r\n        let httpsproxy = process.env.https_proxy || false;\r\n        let socksproxy = process.env.socks_proxy || false;\r\n        let ws = false;\r\n        if ( socksproxy !== false ) {\r\n            socksproxy = proxyReplacewithIp( socksproxy );\r\n            if ( Binance.options.verbose ) Binance.options.log( `deliverySubscribeSingle: using socks proxy server: ${ socksproxy }` );\r\n            let agent = new SocksProxyAgent( {\r\n                protocol: parseProxy( socksproxy )[0],\r\n                host: parseProxy( socksproxy )[1],\r\n                port: parseProxy( socksproxy )[2]\r\n            } );\r\n            ws = new WebSocket( ( Binance.options.test ? dstreamSingleTest : dstreamSingle ) + endpoint, { agent } );\r\n        } else if ( httpsproxy !== false ) {\r\n            if ( Binance.options.verbose ) Binance.options.log( `deliverySubscribeSingle: using proxy server: ${ agent }` );\r\n            let config = url.parse( httpsproxy );\r\n            let agent = new HttpsProxyAgent( config );\r\n            ws = new WebSocket( ( Binance.options.test ? dstreamSingleTest : dstreamSingle ) + endpoint, { agent } );\r\n        } else {\r\n            ws = new WebSocket( ( Binance.options.test ? dstreamSingleTest : dstreamSingle ) + endpoint );\r\n        }\r\n\r\n        if ( Binance.options.verbose ) Binance.options.log( 'deliverySubscribeSingle: Subscribed to ' + endpoint );\r\n        ws.reconnect = Binance.options.reconnect;\r\n        ws.endpoint = endpoint;\r\n        ws.isAlive = false;\r\n        ws.on( 'open', handleDeliverySocketOpen.bind( ws, params.openCallback ) );\r\n        ws.on( 'pong', handleDeliverySocketHeartbeat );\r\n        ws.on( 'error', handleDeliverySocketError );\r\n        ws.on( 'close', handleDeliverySocketClose.bind( ws, params.reconnect ) );\r\n        ws.on( 'message', data => {\r\n            try {\r\n                callback( JSON.parse( data ) );\r\n            } catch ( error ) {\r\n                Binance.options.log( 'Parse error: ' + error.message );\r\n            }\r\n        } );\r\n        return ws;\r\n    };\r\n\r\n    /**\r\n     * Used to subscribe to a combined delivery websocket endpoint\r\n     * @param {string} streams - streams to connect to\r\n     * @param {function} callback - the function to call when information is received\r\n     * @param {object} params - Optional reconnect {boolean} (whether to reconnect on disconnect), openCallback {function}, id {string}\r\n     * @return {WebSocket} - websocket reference\r\n     */\r\n    const deliverySubscribe = function ( streams, callback, params = {} ) {\r\n        if ( typeof streams === 'string' ) return deliverySubscribeSingle( streams, callback, params );\r\n        if ( typeof params === 'boolean' ) params = { reconnect: params };\r\n        if ( !params.reconnect ) params.reconnect = false;\r\n        if ( !params.openCallback ) params.openCallback = false;\r\n        if ( !params.id ) params.id = false;\r\n        let httpsproxy = process.env.https_proxy || false;\r\n        let socksproxy = process.env.socks_proxy || false;\r\n        const queryParams = streams.join( '/' );\r\n        let ws = false;\r\n        if ( socksproxy !== false ) {\r\n            socksproxy = proxyReplacewithIp( socksproxy );\r\n            if ( Binance.options.verbose ) Binance.options.log( `deliverySubscribe: using socks proxy server ${ socksproxy }` );\r\n            let agent = new SocksProxyAgent( {\r\n                protocol: parseProxy( socksproxy )[0],\r\n                host: parseProxy( socksproxy )[1],\r\n                port: parseProxy( socksproxy )[2]\r\n            } );\r\n            ws = new WebSocket( ( Binance.options.test ? dstreamTest : dstream ) + queryParams, { agent } );\r\n        } else if ( httpsproxy !== false ) {\r\n            if ( Binance.options.verbose ) Binance.options.log( `deliverySubscribe: using proxy server ${ httpsproxy }` );\r\n            let config = url.parse( httpsproxy );\r\n            let agent = new HttpsProxyAgent( config );\r\n            ws = new WebSocket( ( Binance.options.test ? dstreamTest : dstream ) + queryParams, { agent } );\r\n        } else {\r\n            ws = new WebSocket( ( Binance.options.test ? dstreamTest : dstream ) + queryParams );\r\n        }\r\n\r\n        ws.reconnect = Binance.options.reconnect;\r\n        ws.endpoint = stringHash( queryParams );\r\n        ws.isAlive = false;\r\n        if ( Binance.options.verbose ) {\r\n            Binance.options.log( `deliverySubscribe: Subscribed to [${ ws.endpoint }] ${ queryParams }` );\r\n        }\r\n        ws.on( 'open', handleDeliverySocketOpen.bind( ws, params.openCallback ) );\r\n        ws.on( 'pong', handleDeliverySocketHeartbeat );\r\n        ws.on( 'error', handleDeliverySocketError );\r\n        ws.on( 'close', handleDeliverySocketClose.bind( ws, params.reconnect ) );\r\n        ws.on( 'message', data => {\r\n            try {\r\n                callback( JSON.parse( data ).data );\r\n            } catch ( error ) {\r\n                Binance.options.log( `deliverySubscribe: Parse error: ${ error.message }` );\r\n            }\r\n        } );\r\n        return ws;\r\n    };\r\n\r\n    /**\r\n     * Used to terminate a delivery websocket\r\n     * @param {string} endpoint - endpoint identifier associated with the web socket\r\n     * @param {boolean} reconnect - auto reconnect after termination\r\n     * @return {undefined}\r\n     */\r\n    const deliveryTerminate = function ( endpoint, reconnect = false ) {\r\n        let ws = Binance.deliverySubscriptions[endpoint];\r\n        if ( !ws ) return;\r\n        ws.removeAllListeners( 'message' );\r\n        ws.reconnect = reconnect;\r\n        ws.terminate();\r\n    }\r\n\r\n    /**\r\n     * Combines all delivery OHLC data with the latest update\r\n     * @param {string} symbol - the symbol\r\n     * @param {string} interval - time interval\r\n     * @return {array} - interval data for given symbol\r\n     */\r\n    const deliveryKlineConcat = ( symbol, interval ) => {\r\n        let output = Binance.deliveryTicks[symbol][interval];\r\n        if ( typeof Binance.deliveryRealtime[symbol][interval].time === 'undefined' ) return output;\r\n        const time = Binance.deliveryRealtime[symbol][interval].time;\r\n        const last_updated = Object.keys( Binance.deliveryTicks[symbol][interval] ).pop();\r\n        if ( time >= last_updated ) {\r\n            output[time] = Binance.deliveryRealtime[symbol][interval];\r\n            //delete output[time].time;\r\n            output[last_updated].isFinal = true;\r\n            output[time].isFinal = false;\r\n        }\r\n        return output;\r\n    };\r\n\r\n    /**\r\n     * Used for websocket delivery @kline\r\n     * @param {string} symbol - the symbol\r\n     * @param {object} kline - object with kline info\r\n     * @param {string} firstTime - time filter\r\n     * @return {undefined}\r\n     */\r\n    const deliveryKlineHandler = ( symbol, kline, firstTime = 0 ) => {\r\n        // eslint-disable-next-line no-unused-vars\r\n        let { e: eventType, E: eventTime, k: ticks } = kline;\r\n        // eslint-disable-next-line no-unused-vars\r\n        let { o: open, h: high, l: low, c: close, v: volume, i: interval, x: isFinal, q: quoteVolume, V: takerBuyBaseVolume, Q: takerBuyQuoteVolume, n: trades, t: time, T:closeTime } = ticks;\r\n        if ( time <= firstTime ) return;\r\n        if ( !isFinal ) {\r\n            // if ( typeof Binance.futuresRealtime[symbol][interval].time !== 'undefined' ) {\r\n            //     if ( Binance.futuresRealtime[symbol][interval].time > time ) return;\r\n            // }\r\n            Binance.deliveryRealtime[symbol][interval] = { time, closeTime, open, high, low, close, volume, quoteVolume, takerBuyBaseVolume, takerBuyQuoteVolume, trades, isFinal };\r\n            return;\r\n        }\r\n        const first_updated = Object.keys( Binance.deliveryTicks[symbol][interval] ).shift();\r\n        if ( first_updated ) delete Binance.deliveryTicks[symbol][interval][first_updated];\r\n        Binance.deliveryTicks[symbol][interval][time] = { time, closeTime, open, high, low, close, volume, quoteVolume, takerBuyBaseVolume, takerBuyQuoteVolume, trades, isFinal:false };\r\n    };\r\n\r\n    /**\r\n     * Converts the delivery liquidation stream data into a friendly object\r\n     * @param {object} data - liquidation data callback data type\r\n     * @return {object} - user friendly data type\r\n     */\r\n    const dLiquidationConvertData = data => {\r\n        let eventType = data.e, eventTime = data.E;\r\n        let {\r\n            s: symbol,\r\n            S: side,\r\n            o: orderType,\r\n            f: timeInForce,\r\n            q: origAmount,\r\n            p: price,\r\n            ap: avgPrice,\r\n            X: orderStatus,\r\n            l: lastFilledQty,\r\n            z: totalFilledQty,\r\n            T: tradeTime\r\n        } = data.o;\r\n        return { symbol, side, orderType, timeInForce, origAmount, price, avgPrice, orderStatus, lastFilledQty, totalFilledQty, eventType, tradeTime, eventTime };\r\n    };\r\n\r\n    /**\r\n     * Converts the delivery ticker stream data into a friendly object\r\n     * @param {object} data - user data callback data type\r\n     * @return {object} - user friendly data type\r\n     */\r\n    const dTickerConvertData = data => {\r\n        let friendlyData = data => {\r\n            let {\r\n                e: eventType,\r\n                E: eventTime,\r\n                s: symbol,\r\n                p: priceChange,\r\n                P: percentChange,\r\n                w: averagePrice,\r\n                c: close,\r\n                Q: closeQty,\r\n                o: open,\r\n                h: high,\r\n                l: low,\r\n                v: volume,\r\n                q: quoteVolume,\r\n                O: openTime,\r\n                C: closeTime,\r\n                F: firstTradeId,\r\n                L: lastTradeId,\r\n                n: numTrades\r\n            } = data;\r\n            return {\r\n                eventType,\r\n                eventTime,\r\n                symbol,\r\n                priceChange,\r\n                percentChange,\r\n                averagePrice,\r\n                close,\r\n                closeQty,\r\n                open,\r\n                high,\r\n                low,\r\n                volume,\r\n                quoteVolume,\r\n                openTime,\r\n                closeTime,\r\n                firstTradeId,\r\n                lastTradeId,\r\n                numTrades\r\n            };\r\n        }\r\n        if ( Array.isArray( data ) ) {\r\n            const result = [];\r\n            for ( let obj of data ) {\r\n                result.push( friendlyData( obj ) );\r\n            }\r\n            return result;\r\n        }\r\n        return friendlyData( data );\r\n    }\r\n\r\n    /**\r\n     * Converts the delivery miniTicker stream data into a friendly object\r\n     * @param {object} data - user data callback data type\r\n     * @return {object} - user friendly data type\r\n     */\r\n    const dMiniTickerConvertData = data => {\r\n        let friendlyData = data => {\r\n            let {\r\n                e: eventType,\r\n                E: eventTime,\r\n                s: symbol,\r\n                c: close,\r\n                o: open,\r\n                h: high,\r\n                l: low,\r\n                v: volume,\r\n                q: quoteVolume\r\n            } = data;\r\n            return {\r\n                eventType,\r\n                eventTime,\r\n                symbol,\r\n                close,\r\n                open,\r\n                high,\r\n                low,\r\n                volume,\r\n                quoteVolume\r\n            };\r\n        }\r\n        if ( Array.isArray( data ) ) {\r\n            const result = [];\r\n            for ( let obj of data ) {\r\n                result.push( friendlyData( obj ) );\r\n            }\r\n            return result;\r\n        }\r\n        return friendlyData( data );\r\n    }\r\n\r\n    /**\r\n     * Converts the delivery bookTicker stream data into a friendly object\r\n     * @param {object} data - user data callback data type\r\n     * @return {object} - user friendly data type\r\n     */\r\n    const dBookTickerConvertData = data => {\r\n        let {\r\n            u: updateId,\r\n            s: symbol,\r\n            b: bestBid,\r\n            B: bestBidQty,\r\n            a: bestAsk,\r\n            A: bestAskQty\r\n        } = data;\r\n        return {\r\n            updateId,\r\n            symbol,\r\n            bestBid,\r\n            bestBidQty,\r\n            bestAsk,\r\n            bestAskQty\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Converts the delivery markPrice stream data into a friendly object\r\n     * @param {object} data - user data callback data type\r\n     * @return {object} - user friendly data type\r\n     */\r\n    const dMarkPriceConvertData = data => {\r\n        let friendlyData = data => {\r\n            let {\r\n                e: eventType,\r\n                E: eventTime,\r\n                s: symbol,\r\n                p: markPrice,\r\n                r: fundingRate,\r\n                T: fundingTime\r\n            } = data;\r\n            return {\r\n                eventType,\r\n                eventTime,\r\n                symbol,\r\n                markPrice,\r\n                fundingRate,\r\n                fundingTime\r\n            };\r\n        }\r\n        if ( Array.isArray( data ) ) {\r\n            const result = [];\r\n            for ( let obj of data ) {\r\n                result.push( friendlyData( obj ) );\r\n            }\r\n            return result;\r\n        }\r\n        return friendlyData( data );\r\n    }\r\n\r\n    /**\r\n     * Converts the delivery aggTrade stream data into a friendly object\r\n     * @param {object} data - user data callback data type\r\n     * @return {object} - user friendly data type\r\n     */\r\n    const dAggTradeConvertData = data => {\r\n        let friendlyData = data => {\r\n            let {\r\n                e: eventType,\r\n                E: eventTime,\r\n                s: symbol,\r\n                a: aggTradeId,\r\n                p: price,\r\n                q: amount,\r\n                f: firstTradeId,\r\n                l: lastTradeId,\r\n                T: timestamp,\r\n                m: maker\r\n            } = data;\r\n            return {\r\n                eventType,\r\n                eventTime,\r\n                symbol,\r\n                aggTradeId,\r\n                price,\r\n                amount,\r\n                total: price * amount,\r\n                firstTradeId,\r\n                lastTradeId,\r\n                timestamp,\r\n                maker\r\n            };\r\n        }\r\n        if ( Array.isArray( data ) ) {\r\n            const result = [];\r\n            for ( let obj of data ) {\r\n                result.push( friendlyData( obj ) );\r\n            }\r\n            return result;\r\n        }\r\n        return friendlyData( data );\r\n    }\r\n\r\n    /**\r\n   * Converts the delivery UserData stream ORDER_TRADE_UPDATE data into a friendly object\r\n   * @param {object} data - user data callback data type\r\n   * @return {object} - user friendly data type\r\n   */\r\n    const dUserDataOrderUpdateConvertData = ( data ) => {\r\n        let {\r\n            e: eventType,\r\n            E: eventTime,\r\n            T: transaction, // transaction time\r\n            o: order,\r\n        } = data;\r\n\r\n        let orderConverter = ( order ) => {\r\n            let {\r\n                s: symbol,\r\n                c: clientOrderId,\r\n                // special client order id:\r\n                // starts with \"autoclose-\": liquidation order\r\n                // \"adl_autoclose\": ADL auto close order\r\n                S: side,\r\n                o: orderType,\r\n                f: timeInForce,\r\n                q: originalQuantity,\r\n                p: originalPrice,\r\n                ap: averagePrice,\r\n                sp: stopPrice, // please ignore with TRAILING_STOP_MARKET order,\r\n                x: executionType,\r\n                X: orderStatus,\r\n                i: orderId,\r\n                l: orderLastFilledQuantity,\r\n                z: orderFilledAccumulatedQuantity,\r\n                L: lastFilledPrice,\r\n                ma: marginAsset,\r\n                N: commissionAsset, // will not push if no commission\r\n                n: commission, // will not push if no commission\r\n                T: orderTradeTime,\r\n                t: tradeId,\r\n                rp: realizedProfit,\r\n                b: bidsNotional,\r\n                a: askNotional,\r\n                m: isMakerSide, // is this trade maker side\r\n                R: isReduceOnly, // is this reduce only\r\n                wt: stopPriceWorkingType,\r\n                ot: originalOrderType,\r\n                ps: positionSide,\r\n                cp: closeAll, // if close-all, pushed with conditional order\r\n                AP: activationPrice, // only pushed with TRAILING_STOP_MARKET order\r\n                cr: callbackRate, // only pushed with TRAILING_STOP_MARKET order\r\n                pP: priceProtect, // If conditional order trigger is protected\r\n            } = order;\r\n            return {\r\n                symbol,\r\n                clientOrderId,\r\n                side,\r\n                orderType,\r\n                timeInForce,\r\n                originalQuantity,\r\n                originalPrice,\r\n                averagePrice,\r\n                stopPrice,\r\n                executionType,\r\n                orderStatus,\r\n                orderId,\r\n                orderLastFilledQuantity,\r\n                orderFilledAccumulatedQuantity,\r\n                lastFilledPrice,\r\n                marginAsset,\r\n                commissionAsset,\r\n                commission,\r\n                orderTradeTime,\r\n                tradeId,\r\n                bidsNotional,\r\n                askNotional,\r\n                isMakerSide,\r\n                isReduceOnly,\r\n                stopPriceWorkingType,\r\n                originalOrderType,\r\n                positionSide,\r\n                closeAll,\r\n                activationPrice,\r\n                callbackRate,\r\n                realizedProfit,\r\n                priceProtect,\r\n            };\r\n        };\r\n        order = orderConverter( order );\r\n        return {\r\n            eventType,\r\n            eventTime,\r\n            transaction,\r\n            order,\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Used as part of the user data websockets callback\r\n     * @param {object} data - user data callback data type\r\n     * @return {undefined}\r\n     */\r\n    const userDataHandler = data => {\r\n        let type = data.e;\r\n        if ( type === 'outboundAccountInfo' ) {\r\n            // XXX: Deprecated in 2020-09-08\r\n        } else if ( type === 'executionReport' ) {\r\n            if ( Binance.options.execution_callback ) Binance.options.execution_callback( data );\r\n        } else if ( type === 'listStatus' ) {\r\n            if ( Binance.options.list_status_callback ) Binance.options.list_status_callback( data );\r\n        } else if ( type === 'outboundAccountPosition' ) {\r\n            Binance.options.balance_callback( data );\r\n        } else {\r\n            Binance.options.log( 'Unexpected userData: ' + type );\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Used as part of the user data websockets callback\r\n     * @param {object} data - user data callback data type\r\n     * @return {undefined}\r\n     */\r\n    const userMarginDataHandler = data => {\r\n        let type = data.e;\r\n        if ( type === 'outboundAccountInfo' ) {\r\n            // XXX: Deprecated in 2020-09-08\r\n        } else if ( type === 'executionReport' ) {\r\n            if ( Binance.options.margin_execution_callback ) Binance.options.margin_execution_callback( data );\r\n        } else if ( type === 'listStatus' ) {\r\n            if ( Binance.options.margin_list_status_callback ) Binance.options.margin_list_status_callback( data );\r\n        } else if ( type === 'outboundAccountPosition' ) {\r\n            Binance.options.margin_balance_callback( data );\r\n        } else {\r\n            Binance.options.log( 'Unexpected userMarginData: ' + type );\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Used as part of the user data websockets callback\r\n     * @param {object} data - user data callback data type\r\n     * @return {undefined}\r\n     */\r\n    const userFutureDataHandler = data => {\r\n        let type = data.e;\r\n        if ( type === 'MARGIN_CALL' ) {\r\n            Binance.options.future_margin_call_callback( fUserDataMarginConvertData( data ) );\r\n        } else if ( type === 'ACCOUNT_UPDATE' ) {\r\n            if ( Binance.options.future_account_update_callback ) {\r\n                Binance.options.future_account_update_callback( fUserDataAccountUpdateConvertData( data ) );\r\n            }\r\n        } else if ( type === 'ORDER_TRADE_UPDATE' ) {\r\n            if ( Binance.options.future_order_update_callback ) {\r\n                Binance.options.future_order_update_callback( fUserDataOrderUpdateConvertData( data ) );\r\n            }\r\n        } else if ( type === 'ACCOUNT_CONFIG_UPDATE' ) {\r\n            if ( Binance.options.future_account_config_update_callback ) {\r\n                Binance.options.future_account_config_update_callback( fUserConfigDataAccountUpdateConvertData( data ) );\r\n            }\r\n        } else {\r\n            Binance.options.log( 'Unexpected userFutureData: ' + type );\r\n        }\r\n    };\r\n\r\n    /**\r\n   * Used as part of the user data websockets callback\r\n   * @param {object} data - user data callback data type\r\n   * @return {undefined}\r\n   */\r\n    const userDeliveryDataHandler = ( data ) => {\r\n        let type = data.e;\r\n        if ( type === \"MARGIN_CALL\" ) {\r\n            Binance.options.delivery_margin_call_callback(\r\n                fUserDataMarginConvertData( data )\r\n            );\r\n        } else if ( type === \"ACCOUNT_UPDATE\" ) {\r\n            if ( Binance.options.delivery_account_update_callback ) {\r\n                Binance.options.delivery_account_update_callback(\r\n                    fUserDataAccountUpdateConvertData( data )\r\n                );\r\n            }\r\n        } else if ( type === \"ORDER_TRADE_UPDATE\" ) {\r\n            if ( Binance.options.delivery_order_update_callback ) {\r\n                Binance.options.delivery_order_update_callback(\r\n                    dUserDataOrderUpdateConvertData( data )\r\n                );\r\n            }\r\n        } else {\r\n            Binance.options.log( \"Unexpected userDeliveryData: \" + type );\r\n        }\r\n    };\r\n\r\n    /**\r\n   * Transfer between main account and futures/delivery accounts\r\n   * @param {string} asset - the asset\r\n   * @param {number} amount - the asset\r\n   * @param {function} callback - the callback function\r\n   * @param {object} options - additional options\r\n   * @return {undefined}\r\n   */\r\n    const transferBetweenMainAndFutures = function (\r\n        asset,\r\n        amount,\r\n        type,\r\n        callback\r\n    ) {\r\n        let parameters = Object.assign( {\r\n            asset,\r\n            amount,\r\n            type,\r\n        } );\r\n        if ( !callback ) {\r\n            return new Promise( ( resolve, reject ) => {\r\n                signedRequest(\r\n                    sapi + \"v1/futures/transfer\",\r\n                    parameters,\r\n                    function ( error, data ) {\r\n                        if ( error ) return reject( error );\r\n                        return resolve( data );\r\n                    },\r\n                    \"POST\"\r\n                );\r\n            } );\r\n        }\r\n        signedRequest(\r\n            sapi + \"v1/futures/transfer\",\r\n            parameters,\r\n            function ( error, data ) {\r\n                if ( callback ) return callback( error, data );\r\n            },\r\n            \"POST\"\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Converts the previous day stream into friendly object\r\n     * @param {object} data - user data callback data type\r\n     * @return {object} - user friendly data type\r\n     */\r\n    const prevDayConvertData = data => {\r\n        let convertData = data => {\r\n            let {\r\n                e: eventType,\r\n                E: eventTime,\r\n                s: symbol,\r\n                p: priceChange,\r\n                P: percentChange,\r\n                w: averagePrice,\r\n                x: prevClose,\r\n                c: close,\r\n                Q: closeQty,\r\n                b: bestBid,\r\n                B: bestBidQty,\r\n                a: bestAsk,\r\n                A: bestAskQty,\r\n                o: open,\r\n                h: high,\r\n                l: low,\r\n                v: volume,\r\n                q: quoteVolume,\r\n                O: openTime,\r\n                C: closeTime,\r\n                F: firstTradeId,\r\n                L: lastTradeId,\r\n                n: numTrades\r\n            } = data;\r\n            return {\r\n                eventType,\r\n                eventTime,\r\n                symbol,\r\n                priceChange,\r\n                percentChange,\r\n                averagePrice,\r\n                prevClose,\r\n                close,\r\n                closeQty,\r\n                bestBid,\r\n                bestBidQty,\r\n                bestAsk,\r\n                bestAskQty,\r\n                open,\r\n                high,\r\n                low,\r\n                volume,\r\n                quoteVolume,\r\n                openTime,\r\n                closeTime,\r\n                firstTradeId,\r\n                lastTradeId,\r\n                numTrades\r\n            };\r\n        }\r\n        if ( Array.isArray( data ) ) {\r\n            const result = [];\r\n            for ( let obj of data ) {\r\n                let converted = convertData( obj );\r\n                result.push( converted );\r\n            }\r\n            return result;\r\n            // eslint-disable-next-line no-else-return\r\n        } else {\r\n            return convertData( data );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Parses the previous day stream and calls the user callback with friendly object\r\n     * @param {object} data - user data callback data type\r\n     * @param {function} callback - user data callback data type\r\n     * @return {undefined}\r\n     */\r\n    const prevDayStreamHandler = ( data, callback ) => {\r\n        const converted = prevDayConvertData( data );\r\n        callback( null, converted );\r\n    };\r\n\r\n    /**\r\n     * Gets the price of a given symbol or symbols\r\n     * @param {array} data - array of symbols\r\n     * @return {array} - symbols with their current prices\r\n     */\r\n    const priceData = ( data ) => {\r\n        const prices = {};\r\n        if ( Array.isArray( data ) ) {\r\n            for ( let obj of data ) {\r\n                prices[obj.symbol] = obj.price;\r\n            }\r\n        } else { // Single price returned\r\n            prices[data.symbol] = data.price;\r\n        }\r\n        return prices;\r\n    };\r\n\r\n    /**\r\n     * Used by bookTickers to format the bids and asks given given symbols\r\n     * @param {array} data - array of symbols\r\n     * @return {object} - symbols with their bids and asks data\r\n     */\r\n    const bookPriceData = data => {\r\n        let prices = {};\r\n        for ( let obj of data ) {\r\n            prices[obj.symbol] = {\r\n                bid: obj.bidPrice,\r\n                bids: obj.bidQty,\r\n                ask: obj.askPrice,\r\n                asks: obj.askQty\r\n            };\r\n        }\r\n        return prices;\r\n    };\r\n\r\n    /**\r\n     * Used by balance to get the balance data\r\n     * @param {array} data - account info object\r\n     * @return {object} - balances hel with available, onorder amounts\r\n     */\r\n    const balanceData = data => {\r\n        let balances = {};\r\n        if ( typeof data === 'undefined' ) return {};\r\n        if ( typeof data.balances === 'undefined' ) {\r\n            Binance.options.log( 'balanceData error', data );\r\n            return {};\r\n        }\r\n        for ( let obj of data.balances ) {\r\n            balances[obj.asset] = { available: obj.free, onOrder: obj.locked };\r\n        }\r\n        return balances;\r\n    };\r\n\r\n    /**\r\n     * Used by web sockets depth and populates OHLC and info\r\n     * @param {string} symbol - symbol to get candlestick info\r\n     * @param {string} interval - time interval, 1m, 3m, 5m ....\r\n     * @param {array} ticks - tick array\r\n     * @return {undefined}\r\n     */\r\n    const klineData = ( symbol, interval, ticks ) => { // Used for /depth\r\n        let last_time = 0;\r\n        if ( isIterable( ticks ) ) {\r\n            for ( let tick of ticks ) {\r\n                // eslint-disable-next-line no-unused-vars\r\n                let [ time, open, high, low, close, volume, closeTime, assetVolume, trades, buyBaseVolume, buyAssetVolume, ignored ] = tick;\r\n                Binance.ohlc[symbol][interval][time] = { open: open, high: high, low: low, close: close, volume: volume };\r\n                last_time = time;\r\n            }\r\n\r\n            Binance.info[symbol][interval].timestamp = last_time;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Combines all OHLC data with latest update\r\n     * @param {string} symbol - the symbol\r\n     * @param {string} interval - time interval, 1m, 3m, 5m ....\r\n     * @return {array} - interval data for given symbol\r\n     */\r\n    const klineConcat = ( symbol, interval ) => {\r\n        let output = Binance.ohlc[symbol][interval];\r\n        if ( typeof Binance.ohlcLatest[symbol][interval].time === 'undefined' ) return output;\r\n        const time = Binance.ohlcLatest[symbol][interval].time;\r\n        const last_updated = Object.keys( Binance.ohlc[symbol][interval] ).pop();\r\n        if ( time >= last_updated ) {\r\n            output[time] = Binance.ohlcLatest[symbol][interval];\r\n            delete output[time].time;\r\n            output[time].isFinal = false;\r\n        }\r\n        return output;\r\n    };\r\n\r\n    /**\r\n     * Used for websocket @kline\r\n     * @param {string} symbol - the symbol\r\n     * @param {object} kline - object with kline info\r\n     * @param {string} firstTime - time filter\r\n     * @return {undefined}\r\n     */\r\n    const klineHandler = ( symbol, kline, firstTime = 0 ) => {\r\n        // TODO: add Taker buy base asset volume\r\n        // eslint-disable-next-line no-unused-vars\r\n        let { e: eventType, E: eventTime, k: ticks } = kline;\r\n        // eslint-disable-next-line no-unused-vars\r\n        let { o: open, h: high, l: low, c: close, v: volume, i: interval, x: isFinal, q: quoteVolume, t: time } = ticks; //n:trades, V:buyVolume, Q:quoteBuyVolume\r\n        if ( time <= firstTime ) return;\r\n        if ( !isFinal ) {\r\n            if ( typeof Binance.ohlcLatest[symbol][interval].time !== 'undefined' ) {\r\n                if ( Binance.ohlcLatest[symbol][interval].time > time ) return;\r\n            }\r\n            Binance.ohlcLatest[symbol][interval] = { open: open, high: high, low: low, close: close, volume: volume, time: time };\r\n            return;\r\n        }\r\n        // Delete an element from the beginning so we don't run out of memory\r\n        const first_updated = Object.keys( Binance.ohlc[symbol][interval] ).shift();\r\n        if ( first_updated ) delete Binance.ohlc[symbol][interval][first_updated];\r\n        Binance.ohlc[symbol][interval][time] = { open: open, high: high, low: low, close: close, volume: volume };\r\n    };\r\n\r\n\r\n    /**\r\n     * Used by futures websockets chart cache\r\n     * @param {string} symbol - symbol to get candlestick info\r\n     * @param {string} interval - time interval, 1m, 3m, 5m ....\r\n     * @param {array} ticks - tick array\r\n     * @return {undefined}\r\n     */\r\n    const futuresKlineData = ( symbol, interval, ticks ) => {\r\n        let last_time = 0;\r\n        if ( isIterable( ticks ) ) {\r\n            for ( let tick of ticks ) {\r\n                // eslint-disable-next-line no-unused-vars\r\n                let [ time, open, high, low, close, volume, closeTime, quoteVolume, trades, takerBuyBaseVolume, takerBuyQuoteVolume, ignored ] = tick;\r\n                Binance.futuresTicks[symbol][interval][time] = { time, closeTime, open, high, low, close, volume, quoteVolume, takerBuyBaseVolume, takerBuyQuoteVolume, trades };\r\n                last_time = time;\r\n            }\r\n            Binance.futuresMeta[symbol][interval].timestamp = last_time;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Used by delivery websockets chart cache\r\n     * @param {string} symbol - symbol to get candlestick info\r\n     * @param {string} interval - time interval, 1m, 3m, 5m ....\r\n     * @param {array} ticks - tick array\r\n     * @return {undefined}\r\n     */\r\n    const deliveryKlineData = ( symbol, interval, ticks ) => {\r\n        let last_time = 0;\r\n        if ( isIterable( ticks ) ) {\r\n            for ( let tick of ticks ) {\r\n                // eslint-disable-next-line no-unused-vars\r\n                let [ time, open, high, low, close, volume, closeTime, quoteVolume, trades, takerBuyBaseVolume, takerBuyQuoteVolume, ignored ] = tick;\r\n                Binance.deliveryTicks[symbol][interval][time] = { time, closeTime, open, high, low, close, volume, quoteVolume, takerBuyBaseVolume, takerBuyQuoteVolume, trades };\r\n                last_time = time;\r\n            }\r\n            Binance.deliveryMeta[symbol][interval].timestamp = last_time;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Used for /depth endpoint\r\n     * @param {object} data - containing the bids and asks\r\n     * @return {undefined}\r\n     */\r\n    const depthData = data => {\r\n        if ( !data ) return { bids: [], asks: [] };\r\n        let bids = {}, asks = {}, obj;\r\n        if ( typeof data.bids !== 'undefined' ) {\r\n            for ( obj of data.bids ) {\r\n                bids[obj[0]] = parseFloat( obj[1] );\r\n            }\r\n        }\r\n        if ( typeof data.asks !== 'undefined' ) {\r\n            for ( obj of data.asks ) {\r\n                asks[obj[0]] = parseFloat( obj[1] );\r\n            }\r\n        }\r\n        return { lastUpdateId: data.lastUpdateId, bids: bids, asks: asks };\r\n    }\r\n\r\n    /**\r\n     * Used for /depth endpoint\r\n     * @param {object} depth - information\r\n     * @return {undefined}\r\n     */\r\n    const depthHandler = depth => {\r\n        let symbol = depth.s, obj;\r\n        let context = Binance.depthCacheContext[symbol];\r\n        let updateDepthCache = () => {\r\n            Binance.depthCache[symbol].eventTime = depth.E;\r\n            for ( obj of depth.b ) { //bids\r\n                if ( obj[1] === '0.00000000' ) {\r\n                    delete Binance.depthCache[symbol].bids[obj[0]];\r\n                } else {\r\n                    Binance.depthCache[symbol].bids[obj[0]] = parseFloat( obj[1] );\r\n                }\r\n            }\r\n            for ( obj of depth.a ) { //asks\r\n                if ( obj[1] === '0.00000000' ) {\r\n                    delete Binance.depthCache[symbol].asks[obj[0]];\r\n                } else {\r\n                    Binance.depthCache[symbol].asks[obj[0]] = parseFloat( obj[1] );\r\n                }\r\n            }\r\n            context.skipCount = 0;\r\n            context.lastEventUpdateId = depth.u;\r\n            context.lastEventUpdateTime = depth.E;\r\n        };\r\n\r\n        // This now conforms 100% to the Binance docs constraints on managing a local order book\r\n        if ( context.lastEventUpdateId ) {\r\n            const expectedUpdateId = context.lastEventUpdateId + 1;\r\n            if ( depth.U <= expectedUpdateId ) {\r\n                updateDepthCache();\r\n            } else {\r\n                let msg = 'depthHandler: [' + symbol + '] The depth cache is out of sync.';\r\n                msg += ' Symptom: Unexpected Update ID. Expected \"' + expectedUpdateId + '\", got \"' + depth.U + '\"';\r\n                if ( Binance.options.verbose ) Binance.options.log( msg );\r\n                throw new Error( msg );\r\n            }\r\n        } else if ( depth.U > context.snapshotUpdateId + 1 ) {\r\n            /* In this case we have a gap between the data of the stream and the snapshot.\r\n             This is an out of sync error, and the connection must be torn down and reconnected. */\r\n            let msg = 'depthHandler: [' + symbol + '] The depth cache is out of sync.';\r\n            msg += ' Symptom: Gap between snapshot and first stream data.';\r\n            if ( Binance.options.verbose ) Binance.options.log( msg );\r\n            throw new Error( msg );\r\n        } else if ( depth.u < context.snapshotUpdateId + 1 ) {\r\n            /* In this case we've received data that we've already had since the snapshot.\r\n             This isn't really an issue, and we can just update the cache again, or ignore it entirely. */\r\n\r\n            // do nothing\r\n        } else {\r\n            // This is our first legal update from the stream data\r\n            updateDepthCache();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets depth cache for given symbol\r\n     * @param {string} symbol - the symbol to fetch\r\n     * @return {object} - the depth cache object\r\n     */\r\n    const getDepthCache = symbol => {\r\n        if ( typeof Binance.depthCache[symbol] === 'undefined' ) return { bids: {}, asks: {} };\r\n        return Binance.depthCache[symbol];\r\n    };\r\n\r\n    /**\r\n     * Calculate Buy/Sell volume from DepthCache\r\n     * @param {string} symbol - the symbol to fetch\r\n     * @return {object} - the depth volume cache object\r\n     */\r\n    const depthVolume = symbol => {\r\n        let cache = getDepthCache( symbol ), quantity, price;\r\n        let bidbase = 0, askbase = 0, bidqty = 0, askqty = 0;\r\n        for ( price in cache.bids ) {\r\n            quantity = cache.bids[price];\r\n            bidbase += parseFloat( ( quantity * parseFloat( price ) ).toFixed( 8 ) );\r\n            bidqty += quantity;\r\n        }\r\n        for ( price in cache.asks ) {\r\n            quantity = cache.asks[price];\r\n            askbase += parseFloat( ( quantity * parseFloat( price ) ).toFixed( 8 ) );\r\n            askqty += quantity;\r\n        }\r\n        return { bids: bidbase, asks: askbase, bidQty: bidqty, askQty: askqty };\r\n    };\r\n\r\n    /**\r\n     * Checks whether or not an array contains any duplicate elements\r\n     * @param {array} array - the array to check\r\n     * @return {boolean} - true or false\r\n     */\r\n    const isArrayUnique = array => {\r\n        return new Set( array ).size === array.length;\r\n    };\r\n    return {\r\n        /**\r\n        * Gets depth cache for given symbol\r\n        * @param {symbol} symbol - get depch cache for this symbol\r\n        * @return {object} - object\r\n        */\r\n        depthCache: symbol => {\r\n            return getDepthCache( symbol );\r\n        },\r\n\r\n        /**\r\n        * Gets depth volume for given symbol\r\n        * @param {symbol} symbol - get depch volume for this symbol\r\n        * @return {object} - object\r\n        */\r\n        depthVolume: symbol => {\r\n            return depthVolume( symbol );\r\n        },\r\n\r\n        /**\r\n        * Count decimal places\r\n        * @param {float} float - get the price precision point\r\n        * @return {int} - number of place\r\n        */\r\n        getPrecision: function ( float ) {\r\n            if ( !float || Number.isInteger( float ) ) return 0;\r\n            return float.toString().split( '.' )[1].length || 0;\r\n        },\r\n\r\n        /**\r\n        * rounds number with given step\r\n        * @param {float} qty - quantity to round\r\n        * @param {float} stepSize - stepSize as specified by exchangeInfo\r\n        * @return {float} - number\r\n        */\r\n        roundStep: function ( qty, stepSize ) {\r\n            // Integers do not require rounding\r\n            if ( Number.isInteger( qty ) ) return qty;\r\n            const qtyString = qty.toFixed( 16 );\r\n            const desiredDecimals = Math.max( stepSize.indexOf( '1' ) - 1, 0 );\r\n            const decimalIndex = qtyString.indexOf( '.' );\r\n            return parseFloat( qtyString.slice( 0, decimalIndex + desiredDecimals + 1 ) );\r\n        },\r\n\r\n        /**\r\n        * rounds price to required precision\r\n        * @param {float} price - price to round\r\n        * @param {float} tickSize - tickSize as specified by exchangeInfo\r\n        * @return {float} - number\r\n        */\r\n        roundTicks: function ( price, tickSize ) {\r\n            const formatter = new Intl.NumberFormat( 'en-US', { style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 8 } );\r\n            const precision = formatter.format( tickSize ).split( '.' )[1].length || 0;\r\n            if ( typeof price === 'string' ) price = parseFloat( price );\r\n            return price.toFixed( precision );\r\n        },\r\n\r\n        /**\r\n        * Gets percentage of given numbers\r\n        * @param {float} min - the smaller number\r\n        * @param {float} max - the bigger number\r\n        * @param {int} width - percentage width\r\n        * @return {float} - percentage\r\n        */\r\n        percent: function ( min, max, width = 100 ) {\r\n            return ( min * 0.01 ) / ( max * 0.01 ) * width;\r\n        },\r\n\r\n        /**\r\n        * Gets the sum of an array of numbers\r\n        * @param {array} array - the number to add\r\n        * @return {float} - sum\r\n        */\r\n        sum: function ( array ) {\r\n            return array.reduce( ( a, b ) => a + b, 0 );\r\n        },\r\n\r\n        /**\r\n        * Reverses the keys of an object\r\n        * @param {object} object - the object\r\n        * @return {object} - the object\r\n        */\r\n        reverse: function ( object ) {\r\n            let range = Object.keys( object ).reverse(), output = {};\r\n            for ( let price of range ) {\r\n                output[price] = object[price];\r\n            }\r\n            return output;\r\n        },\r\n\r\n        /**\r\n        * Converts an object to an array\r\n        * @param {object} obj - the object\r\n        * @return {array} - the array\r\n        */\r\n        array: function( obj ) {\r\n            return Object.keys( obj ).map( function ( key ) {\r\n                return [ Number( key ), obj[key] ];\r\n            } );\r\n        },\r\n\r\n        /**\r\n        * Sorts bids\r\n        * @param {string} symbol - the object\r\n        * @param {int} max - the max number of bids\r\n        * @param {string} baseValue - the object\r\n        * @return {object} - the object\r\n        */\r\n        sortBids: function ( symbol, max = Infinity, baseValue = false ) {\r\n            let object = {}, count = 0, cache;\r\n            if ( typeof symbol === 'object' ) cache = symbol;\r\n            else cache = getDepthCache( symbol ).bids;\r\n            const sorted = Object.keys( cache ).sort( ( a, b ) => parseFloat( b ) - parseFloat( a ) );\r\n            let cumulative = 0;\r\n            for ( let price of sorted ) {\r\n                if ( !baseValue ) object[price] = cache[price];\r\n                else if ( baseValue === 'cumulative' ) {\r\n                    cumulative += cache[price];\r\n                    object[price] = cumulative;\r\n                } else object[price] = parseFloat( ( cache[price] * parseFloat( price ) ).toFixed( 8 ) );\r\n                if ( ++count >= max ) break;\r\n            }\r\n            return object;\r\n        },\r\n\r\n        /**\r\n        * Sorts asks\r\n        * @param {string} symbol - the object\r\n        * @param {int} max - the max number of bids\r\n        * @param {string} baseValue - the object\r\n        * @return {object} - the object\r\n        */\r\n        sortAsks: function ( symbol, max = Infinity, baseValue = false ) {\r\n            let object = {}, count = 0, cache;\r\n            if ( typeof symbol === 'object' ) cache = symbol;\r\n            else cache = getDepthCache( symbol ).asks;\r\n            const sorted = Object.keys( cache ).sort( ( a, b ) => parseFloat( a ) - parseFloat( b ) );\r\n            let cumulative = 0;\r\n            for ( let price of sorted ) {\r\n                if ( !baseValue ) object[price] = cache[price];\r\n                else if ( baseValue === 'cumulative' ) {\r\n                    cumulative += cache[price];\r\n                    object[price] = cumulative;\r\n                } else object[price] = parseFloat( ( cache[price] * parseFloat( price ) ).toFixed( 8 ) );\r\n                if ( ++count >= max ) break;\r\n            }\r\n            return object;\r\n        },\r\n\r\n        /**\r\n        * Returns the first property of an object\r\n        * @param {object} object - the object to get the first member\r\n        * @return {string} - the object key\r\n        */\r\n        first: function ( object ) {\r\n            return Object.keys( object ).shift();\r\n        },\r\n\r\n        /**\r\n        * Returns the last property of an object\r\n        * @param {object} object - the object to get the first member\r\n        * @return {string} - the object key\r\n        */\r\n        last: function ( object ) {\r\n            return Object.keys( object ).pop();\r\n        },\r\n\r\n        /**\r\n        * Returns an array of properties starting at start\r\n        * @param {object} object - the object to get the properties form\r\n        * @param {int} start - the starting index\r\n        * @return {array} - the array of entires\r\n        */\r\n        slice: function ( object, start = 0 ) {\r\n            return Object.keys( object ).slice( start );\r\n        },\r\n\r\n        /**\r\n        * Gets the minimum key form object\r\n        * @param {object} object - the object to get the properties form\r\n        * @return {string} - the minimum key\r\n        */\r\n        min: function ( object ) {\r\n            return Math.min.apply( Math, Object.keys( object ) );\r\n        },\r\n\r\n        /**\r\n        * Gets the maximum key form object\r\n        * @param {object} object - the object to get the properties form\r\n        * @return {string} - the minimum key\r\n        */\r\n        max: function ( object ) {\r\n            return Math.max.apply( Math, Object.keys( object ) );\r\n        },\r\n\r\n        /**\r\n        * Sets an option given a key and value\r\n        * @param {string} key - the key to set\r\n        * @param {object} value - the value of the key\r\n        * @return {undefined}\r\n        */\r\n        setOption: function ( key, value ) {\r\n            Binance.options[key] = value;\r\n        },\r\n\r\n        /**\r\n        * Gets an option given a key\r\n        * @param {string} key - the key to set\r\n        * @return {undefined}\r\n        */\r\n        getOption: key => Binance.options[key],\r\n\r\n        /**\r\n        * Returns the entire info object\r\n        * @return {object} - the info object\r\n        */\r\n        getInfo: () => Binance.info,\r\n\r\n        /**\r\n        * Returns the used weight from the last request\r\n        * @return {object} - 1m weight used\r\n        */\r\n        usedWeight: () => Binance.info.usedWeight,\r\n\r\n        /**\r\n        * Returns the status code from the last http response\r\n        * @return {object} - status code\r\n        */\r\n        statusCode: () => Binance.info.statusCode,\r\n\r\n        /**\r\n        * Returns the ping time from the last futures request\r\n        * @return {object} - latency/ping (2ms)\r\n        */\r\n        futuresLatency: () => Binance.info.futuresLatency,\r\n\r\n        /**\r\n        * Returns the complete URL from the last request\r\n        * @return {object} - http address including query string\r\n        */\r\n        lastURL: () => Binance.info.lastURL,\r\n\r\n        /**\r\n        * Returns the order count from the last request\r\n        * @return {object} - orders allowed per 1m\r\n        */\r\n        orderCount: () => Binance.info.orderCount1m,\r\n\r\n        /**\r\n        * Returns the entire options object\r\n        * @return {object} - the options object\r\n        */\r\n        getOptions: () => Binance.options,\r\n\r\n        /**\r\n        * Gets an option given a key\r\n        * @param {object} opt - the object with the class configuration\r\n        * @param {function} callback - the callback function\r\n        * @return {undefined}\r\n        */\r\n        options: setOptions,\r\n\r\n        /**\r\n        * Creates an order\r\n        * @param {string} side - BUY or SELL\r\n        * @param {string} symbol - the symbol to buy\r\n        * @param {numeric} quantity - the quantity required\r\n        * @param {numeric} price - the price to pay for each unit\r\n        * @param {object} flags - aadditionalbuy order flags\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        order: function ( side, symbol, quantity, price, flags = {}, callback = false ) {\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    order( side, symbol, quantity, price, flags, callback );\r\n                } )\r\n            } else {\r\n                order( side, symbol, quantity, price, flags, callback );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Creates a buy order\r\n        * @param {string} symbol - the symbol to buy\r\n        * @param {numeric} quantity - the quantity required\r\n        * @param {numeric} price - the price to pay for each unit\r\n        * @param {object} flags - additional buy order flags\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        buy: function( symbol, quantity, price, flags = {}, callback = false ) {\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    order( 'BUY', symbol, quantity, price, flags, callback );\r\n                } )\r\n            } else {\r\n                order( 'BUY', symbol, quantity, price, flags, callback );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Creates a sell order\r\n        * @param {string} symbol - the symbol to sell\r\n        * @param {numeric} quantity - the quantity required\r\n        * @param {numeric} price - the price to sell each unit for\r\n        * @param {object} flags - additional order flags\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        sell: function ( symbol, quantity, price, flags = {}, callback = false ) {\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    order( 'SELL', symbol, quantity, price, flags, callback );\r\n                } )\r\n            } else {\r\n                order( 'SELL', symbol, quantity, price, flags, callback );\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n        * Creates a market buy order\r\n        * @param {string} symbol - the symbol to buy\r\n        * @param {numeric} quantity - the quantity required\r\n        * @param {object} flags - additional buy order flags\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        marketBuy: function ( symbol, quantity, flags = { type: 'MARKET' }, callback = false ) {\r\n            if ( typeof flags === 'function' ) { // Accept callback as third parameter\r\n                callback = flags;\r\n                flags = { type: 'MARKET' };\r\n            }\r\n            if ( typeof flags.type === 'undefined' ) flags.type = 'MARKET';\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    order( 'BUY', symbol, quantity, 0, flags, callback );\r\n                } )\r\n            } else {\r\n                order( 'BUY', symbol, quantity, 0, flags, callback );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Creates a market sell order\r\n        * @param {string} symbol - the symbol to sell\r\n        * @param {numeric} quantity - the quantity required\r\n        * @param {object} flags - additional sell order flags\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n       marketSell: function ( symbol, quantity, flags = { type: 'MARKET' }, callback = false ) {\r\n            if ( typeof flags === 'function' ) { // Accept callback as third parameter\r\n                callback = flags;\r\n                flags = { type: 'MARKET' };\r\n            }\r\n            if ( typeof flags.type === 'undefined' ) flags.type = 'MARKET';\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    order( 'SELL', symbol, quantity, 0, flags, callback );\r\n                } )\r\n            } else {\r\n                order( 'SELL', symbol, quantity, 0, flags, callback );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Cancels an order\r\n        * @param {string} symbol - the symbol to cancel\r\n        * @param {string} orderid - the orderid to cancel\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        cancel: function ( symbol, orderid, callback = false ) {\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    signedRequest( base + 'v3/order', { symbol: symbol, orderId: orderid }, function ( error, data ) {\r\n                        return callback.call( this, error, data, symbol );\r\n                    }, 'DELETE' );\r\n                } )\r\n            } else {\r\n                signedRequest( base + 'v3/order', { symbol: symbol, orderId: orderid }, function ( error, data ) {\r\n                    return callback.call( this, error, data, symbol );\r\n                }, 'DELETE' );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Gets the status of an order\r\n        * @param {string} symbol - the symbol to check\r\n        * @param {string} orderid - the orderid to check\r\n        * @param {function} callback - the callback function\r\n        * @param {object} flags - any additional flags\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        orderStatus: function ( symbol, orderid, callback, flags = {} ) {\r\n            let parameters = Object.assign( { symbol: symbol, orderId: orderid }, flags );\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    signedRequest( base + 'v3/order', parameters, function ( error, data ) {\r\n                        return callback.call( this, error, data, symbol );\r\n                    } );\r\n                } )\r\n            } else {\r\n                signedRequest( base + 'v3/order', parameters, function ( error, data ) {\r\n                    return callback.call( this, error, data, symbol );\r\n                } );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Gets open orders\r\n        * @param {string} symbol - the symbol to get\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        openOrders: function ( symbol, callback ) {\r\n            let parameters = symbol ? { symbol: symbol } : {};\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    signedRequest( base + 'v3/openOrders', parameters, function ( error, data ) {\r\n                        return callback.call( this, error, data, symbol );\r\n                    } );\r\n                } )\r\n            } else {\r\n                signedRequest( base + 'v3/openOrders', parameters, function ( error, data ) {\r\n                    return callback.call( this, error, data, symbol );\r\n                } );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Cancels all orders of a given symbol\r\n        * @param {string} symbol - the symbol to cancel all orders for\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        cancelAll: function ( symbol, callback = false ) {\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    signedRequest( base + 'v3/openOrders', { symbol }, callback, 'DELETE' );\r\n                } )\r\n            } else {\r\n                signedRequest( base + 'v3/openOrders', { symbol }, callback, 'DELETE' );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Cancels all orders of a given symbol\r\n        * @param {string} symbol - the symbol to cancel all orders for\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        cancelOrders: function ( symbol, callback = false ) {\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    signedRequest( base + 'v3/openOrders', { symbol }, function ( error, json ) {\r\n                        if ( json.length === 0 ) {\r\n                            return callback.call( this, 'No orders present for this symbol', {}, symbol );\r\n                        }\r\n                        for ( let obj of json ) {\r\n                            let quantity = obj.origQty - obj.executedQty;\r\n                            Binance.options.log( 'cancel order: ' + obj.side + ' ' + symbol + ' ' + quantity + ' @ ' + obj.price + ' #' + obj.orderId );\r\n                            signedRequest( base + 'v3/order', { symbol, orderId: obj.orderId }, function ( error, data ) {\r\n                                return callback.call( this, error, data, symbol );\r\n                            }, 'DELETE' );\r\n                        }\r\n                    } );\r\n                } )\r\n            } else {\r\n                signedRequest( base + 'v3/openOrders', { symbol: symbol }, function ( error, json ) {\r\n                    if ( json.length === 0 ) {\r\n                        return callback.call( this, 'No orders present for this symbol', {}, symbol );\r\n                    }\r\n                    for ( let obj of json ) {\r\n                        let quantity = obj.origQty - obj.executedQty;\r\n                        Binance.options.log( 'cancel order: ' + obj.side + ' ' + symbol + ' ' + quantity + ' @ ' + obj.price + ' #' + obj.orderId );\r\n                        signedRequest( base + 'v3/order', { symbol: symbol, orderId: obj.orderId }, function ( error, data ) {\r\n                            return callback.call( this, error, data, symbol );\r\n                        }, 'DELETE' );\r\n                    }\r\n                } );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Gets all order of a given symbol\r\n        * @param {string} symbol - the symbol\r\n        * @param {function} callback - the callback function (can also accept options)\r\n        * @param {object} options - additional options\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        allOrders: function ( symbol, callback, options = {} ) {\r\n            let parameters = Object.assign( { symbol }, options );\r\n            if ( typeof callback == 'object' ) { // Allow second parameter to be options\r\n                options = callback;\r\n                callback = false;\r\n            }\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    signedRequest( base + 'v3/allOrders', parameters, function ( error, data ) {\r\n                        return callback.call( this, error, data, symbol );\r\n                    } );\r\n                } )\r\n            } else {\r\n                signedRequest( base + 'v3/allOrders', parameters, function ( error, data ) {\r\n                    return callback.call( this, error, data, symbol );\r\n                } );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Gets the depth information for a given symbol\r\n        * @param {string} symbol - the symbol\r\n        * @param {function} callback - the callback function\r\n        * @param {int} limit - limit the number of returned orders\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        depth: function ( symbol, callback, limit = 100 ) {\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    publicRequest( base + 'v3/depth', { symbol: symbol, limit: limit }, function ( error, data ) {\r\n                        return callback.call( this, error, depthData( data ), symbol );\r\n                    } );\r\n                } )\r\n            } else {\r\n                publicRequest( base + 'v3/depth', { symbol: symbol, limit: limit }, function ( error, data ) {\r\n                    return callback.call( this, error, depthData( data ), symbol );\r\n                } );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Gets the average prices of a given symbol\r\n        * @param {string} symbol - the symbol\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        avgPrice: function ( symbol, callback = false ) {\r\n            let opt = {\r\n                url: base + 'v3/avgPrice?symbol=' + symbol,\r\n                timeout: Binance.options.recvWindow\r\n            };\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    request( addProxy( opt ), ( error, response, body ) => {\r\n                        if ( error ) return reject( error );\r\n                        if ( response.statusCode !== 200 ) return reject( response );\r\n                        let result = {};\r\n                        result[symbol] = JSON.parse( response.body ).price;\r\n                        return resolve( result );\r\n                    } ).on( 'error', reject );\r\n                } );\r\n            }\r\n            request( addProxy( opt ), ( error, response, body ) => {\r\n                if ( error ) return callback( error );\r\n                if ( response.statusCode !== 200 ) return callback( response );\r\n                let result = {};\r\n                result[symbol] = JSON.parse( response.body ).price;\r\n                return callback( null, result );\r\n            } ).on( 'error', callback );\r\n        },\r\n\r\n        /**\r\n        * Gets the prices of a given symbol(s)\r\n        * @param {string} symbol - the symbol\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        prices: function ( symbol, callback = false ) {\r\n            const params = typeof symbol === 'string' ? '?symbol=' + symbol : '';\r\n            if ( typeof symbol === 'function' ) callback = symbol; // backwards compatibility\r\n\r\n            let opt = {\r\n                url: base + 'v3/ticker/price' + params,\r\n                timeout: Binance.options.recvWindow\r\n            };\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    request( addProxy( opt ), ( error, response, body ) => {\r\n                        if ( error ) return reject( error );\r\n                        if ( response.statusCode !== 200 ) return reject( response );\r\n                        return resolve( priceData( JSON.parse( body ) ) );\r\n                    } ).on( 'error', reject );\r\n                } );\r\n            }\r\n            request( addProxy( opt ), ( error, response, body ) => {\r\n                if ( error ) return callback( error );\r\n                if ( response.statusCode !== 200 ) return callback( response );\r\n                return callback( null, priceData( JSON.parse( body ) ) );\r\n            } ).on( 'error', callback );\r\n        },\r\n\r\n        /**\r\n        * Gets the book tickers of given symbol(s)\r\n        * @param {string} symbol - the symbol\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        bookTickers: function ( symbol, callback ) {\r\n            const params = typeof symbol === 'string' ? '?symbol=' + symbol : '';\r\n            if ( typeof symbol === 'function' ) callback = symbol; // backwards compatibility\r\n            let opt = {\r\n                url: base + 'v3/ticker/bookTicker' + params,\r\n                timeout: Binance.options.recvWindow\r\n            };\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    request( addProxy( opt ), function ( error, response, body ) {\r\n                        if ( error ) return reject( error );\r\n                        if ( response.statusCode !== 200 ) return reject( response );\r\n                        const result = symbol ? JSON.parse( body ) : bookPriceData( JSON.parse( body ) );\r\n                        return resolve( result );\r\n                    } ).on( 'error', reject );\r\n                } );\r\n            }\r\n            request( addProxy( opt ), ( error, response, body ) => {\r\n                if ( error ) return callback( error );\r\n                if ( response.statusCode !== 200 ) return callback( response );\r\n                const result = symbol ? JSON.parse( body ) : bookPriceData( JSON.parse( body ) );\r\n                return callback( null, result );\r\n            } ).on( 'error', callback );\r\n        },\r\n\r\n        /**\r\n        * Gets the prevday percentage change\r\n        * @param {string} symbol - the symbol or symbols\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        prevDay: function ( symbol, callback ) {\r\n            let input = symbol ? { symbol: symbol } : {};\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    publicRequest( base + 'v3/ticker/24hr', input, ( error, data ) => {\r\n                        return callback.call( this, error, data, symbol );\r\n                    } );\r\n                } )\r\n            } else {\r\n                publicRequest( base + 'v3/ticker/24hr', input, ( error, data ) => {\r\n                    return callback.call( this, error, data, symbol );\r\n                } );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Gets the the exchange info\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        exchangeInfo: function ( callback ) {\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    publicRequest( base + 'v3/exchangeInfo', {}, callback );\r\n                } )\r\n            } else {\r\n                publicRequest( base + 'v3/exchangeInfo', {}, callback );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Gets the dust log for user\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        dustLog: function ( callback ) {\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    signedRequest( wapi + '/v3/userAssetDribbletLog.html', {}, callback );\r\n                } )\r\n            } else {\r\n                signedRequest( wapi + '/v3/userAssetDribbletLog.html', {}, callback );\r\n            }\r\n        },\r\n\r\n        dustTransfer: function ( assets, callback ) {\r\n            signedRequest( sapi + 'v1/asset/dust', { asset: assets }, callback, 'POST' );\r\n        },\r\n\r\n        assetDividendRecord: function ( callback, params = {} ) {\r\n            signedRequest( sapi + 'v1/asset/assetDividend', params, callback );\r\n        },\r\n\r\n        /**\r\n        * Gets the the system status\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        systemStatus: function ( callback ) {\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    publicRequest( wapi + 'v3/systemStatus.html', {}, callback );\r\n                } )\r\n            } else {\r\n                publicRequest( wapi + 'v3/systemStatus.html', {}, callback );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Withdraws asset to given wallet id\r\n        * @param {string} asset - the asset symbol\r\n        * @param {string} address - the wallet to transfer it to\r\n        * @param {number} amount - the amount to transfer\r\n        * @param {string} addressTag - and addtional address tag\r\n        * @param {function} callback - the callback function\r\n        * @param {string} name - the name to save the address as. Set falsy to prevent Binance saving to address book\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        withdraw: function ( asset, address, amount, addressTag = false, callback = false, name = false ) {\r\n            let params = { asset, address, amount };\r\n            if ( name ) params.name = name;\r\n            if ( addressTag ) params.addressTag = addressTag;\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    signedRequest( wapi + 'v3/withdraw.html', params, callback, 'POST' );\r\n                } )\r\n            } else {\r\n                signedRequest( wapi + 'v3/withdraw.html', params, callback, 'POST' );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Get the Withdraws history for a given asset\r\n        * @param {function} callback - the callback function\r\n        * @param {object} params - supports limit and fromId parameters\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        withdrawHistory: function ( callback, params = {} ) {\r\n            if ( typeof params === 'string' ) params = { asset: params };\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    signedRequest( wapi + 'v3/withdrawHistory.html', params, callback );\r\n                } )\r\n            } else {\r\n                signedRequest( wapi + 'v3/withdrawHistory.html', params, callback );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Get the deposit history\r\n        * @param {function} callback - the callback function\r\n        * @param {object} params - additional params\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        depositHistory: function ( callback, params = {} ) {\r\n            if ( typeof params === 'string' ) params = { asset: params }; // Support 'asset' (string) or optional parameters (object)\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    signedRequest( wapi + 'v3/depositHistory.html', params, callback );\r\n                } )\r\n            } else {\r\n                signedRequest( wapi + 'v3/depositHistory.html', params, callback );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Get the deposit history for given asset\r\n        * @param {string} asset - the asset\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        depositAddress: function ( asset, callback ) {\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    signedRequest( wapi + 'v3/depositAddress.html', { asset: asset }, callback );\r\n                } )\r\n            } else {\r\n                signedRequest( wapi + 'v3/depositAddress.html', { asset: asset }, callback );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Get the account status\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        accountStatus: function ( callback ) {\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    signedRequest( wapi + 'v3/accountStatus.html', {}, callback );\r\n                } )\r\n            } else {\r\n                signedRequest( wapi + 'v3/accountStatus.html', {}, callback );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Get the trade fee\r\n        * @param {function} callback - the callback function\r\n        * @param {string} symbol (optional)\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        tradeFee: function ( callback, symbol = false ) {\r\n            let params = symbol ? { symbol: symbol } : {};\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    signedRequest( wapi + 'v3/tradeFee.html', params, callback );\r\n                } )\r\n            } else {\r\n                signedRequest( wapi + 'v3/tradeFee.html', params, callback );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Fetch asset detail (minWithdrawAmount, depositStatus, withdrawFee, withdrawStatus, depositTip)\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        assetDetail: function ( callback ) {\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    signedRequest( wapi + 'v3/assetDetail.html', {}, callback );\r\n                } )\r\n            } else {\r\n                signedRequest( wapi + 'v3/assetDetail.html', {}, callback );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Get the account\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        account: function ( callback ) {\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    signedRequest( base + 'v3/account', {}, callback );\r\n                } )\r\n            } else {\r\n                signedRequest( base + 'v3/account', {}, callback );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Get the balance data\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        balance: function ( callback ) {\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    signedRequest( base + 'v3/account', {}, function ( error, data ) {\r\n                        callback( error, balanceData( data ) );\r\n                    } );\r\n                } )\r\n            } else {\r\n                signedRequest( base + 'v3/account', {}, function ( error, data ) {\r\n                    callback( error, balanceData( data ) );\r\n                } );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Get trades for a given symbol\r\n        * @param {string} symbol - the symbol\r\n        * @param {function} callback - the callback function\r\n        * @param {object} options - additional options\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        trades: ( symbol, callback, options = {} ) => {\r\n            let parameters = Object.assign( { symbol: symbol }, options );\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    signedRequest( base + 'v3/myTrades', parameters, function ( error, data ) {\r\n                        return callback.call( this, error, data, symbol );\r\n                    } );\r\n                } )\r\n            } else {\r\n                signedRequest( base + 'v3/myTrades', parameters, function ( error, data ) {\r\n                    return callback.call( this, error, data, symbol );\r\n                } );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Tell api to use the server time to offset time indexes\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        useServerTime: ( callback = false ) => {\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    publicRequest( base + 'v3/time', {}, function ( error, response ) {\r\n                        if ( !error ) {\r\n                            Binance.info.timeOffset = response.serverTime - new Date().getTime();\r\n                            //Binance.options.log(\"server time set: \", response.serverTime, Binance.info.timeOffset);\r\n                        }\r\n                        callback( error, response );\r\n                    } );\r\n                } )\r\n            } else {\r\n                publicRequest( base + 'v3/time', {}, function ( error, response ) {\r\n                    if ( !error ) {\r\n                        Binance.info.timeOffset = response.serverTime - new Date().getTime();\r\n                        //Binance.options.log(\"server time set: \", response.serverTime, Binance.info.timeOffset);\r\n                    }\r\n                    callback( error, response );\r\n                } );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Get Binance server time\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        time: function ( callback ) {\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    publicRequest( base + 'v3/time', {}, callback );\r\n                } )\r\n            } else {\r\n                publicRequest( base + 'v3/time', {}, callback );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Get agg trades for given symbol\r\n        * @param {string} symbol - the symbol\r\n        * @param {object} options - additional optoins\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        aggTrades: function ( symbol, options = {}, callback = false ) { //fromId startTime endTime limit\r\n            let parameters = Object.assign( { symbol }, options );\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    publicRequest( base + 'v3/aggTrades', parameters, callback );\r\n                } )\r\n            } else {\r\n                publicRequest( base + 'v3/aggTrades', parameters, callback );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Get the recent trades\r\n        * @param {string} symbol - the symbol\r\n        * @param {function} callback - the callback function\r\n        * @param {int} limit - limit the number of items returned\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        recentTrades: function ( symbol, callback, limit = 500 ) {\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    marketRequest( base + 'v1/trades', { symbol: symbol, limit: limit }, callback );\r\n                } )\r\n            } else {\r\n                marketRequest( base + 'v1/trades', { symbol: symbol, limit: limit }, callback );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Get the historical trade info\r\n        * @param {string} symbol - the symbol\r\n        * @param {function} callback - the callback function\r\n        * @param {int} limit - limit the number of items returned\r\n        * @param {int} fromId - from this id\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        historicalTrades: function ( symbol, callback, limit = 500, fromId = false ) {\r\n            let parameters = { symbol: symbol, limit: limit };\r\n            if ( fromId ) parameters.fromId = fromId;\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    marketRequest( base + 'v3/historicalTrades', parameters, callback );\r\n                } )\r\n            } else {\r\n                marketRequest( base + 'v3/historicalTrades', parameters, callback );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Convert chart data to highstock array [timestamp,open,high,low,close]\r\n        * @param {object} chart - the chart\r\n        * @param {boolean} include_volume - to include the volume or not\r\n        * @return {array} - an array\r\n        */\r\n        highstock: function ( chart, include_volume = false ) {\r\n            let array = [];\r\n            for ( let timestamp in chart ) {\r\n                let obj = chart[timestamp];\r\n                let line = [\r\n                    Number( timestamp ),\r\n                    parseFloat( obj.open ),\r\n                    parseFloat( obj.high ),\r\n                    parseFloat( obj.low ),\r\n                    parseFloat( obj.close )\r\n                ];\r\n                if ( include_volume ) line.push( parseFloat( obj.volume ) );\r\n                array.push( line );\r\n            }\r\n            return array;\r\n        },\r\n\r\n        /**\r\n        * Populates OHLC information\r\n        * @param {object} chart - the chart\r\n        * @return {object} - object with candle information\r\n        */\r\n        ohlc: function ( chart ) {\r\n            let open = [], high = [], low = [], close = [], volume = [];\r\n            for ( let timestamp in chart ) { //Binance.ohlc[symbol][interval]\r\n                let obj = chart[timestamp];\r\n                open.push( parseFloat( obj.open ) );\r\n                high.push( parseFloat( obj.high ) );\r\n                low.push( parseFloat( obj.low ) );\r\n                close.push( parseFloat( obj.close ) );\r\n                volume.push( parseFloat( obj.volume ) );\r\n            }\r\n            return { open: open, high: high, low: low, close: close, volume: volume };\r\n        },\r\n\r\n        /**\r\n        * Gets the candles information for a given symbol\r\n        * intervals: 1m,3m,5m,15m,30m,1h,2h,4h,6h,8h,12h,1d,3d,1w,1M\r\n        * @param {string} symbol - the symbol\r\n        * @param {function} interval - the callback function\r\n        * @param {function} callback - the callback function\r\n        * @param {object} options - additional options\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        candlesticks: function ( symbol, interval = '5m', callback = false, options = { limit: 500 } ) {\r\n            let params = Object.assign( { symbol: symbol, interval: interval }, options );\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    publicRequest( base + 'v3/klines', params, function ( error, data ) {\r\n                        return callback.call( this, error, data, symbol );\r\n                    } );\r\n                } )\r\n            } else {\r\n                publicRequest( base + 'v3/klines', params, function ( error, data ) {\r\n                    return callback.call( this, error, data, symbol );\r\n                } );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Queries the public api\r\n        * @param {string} url - the public api endpoint\r\n        * @param {object} data - the data to send\r\n        * @param {function} callback - the callback function\r\n        * @param {string} method - the http method\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        publicRequest: function ( url, data, callback, method = 'GET' ) {\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    publicRequest( url, data, callback, method );\r\n                } )\r\n            } else {\r\n                publicRequest( url, data, callback, method );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Queries the futures API by default\r\n         * @param {string} url - the signed api endpoint\r\n         * @param {object} data - the data to send\r\n         * @param {object} flags - type of request, authentication method and endpoint url\r\n         */\r\n        promiseRequest: function ( url, data = {}, flags = {} ) {\r\n            return promiseRequest( url, data, flags );\r\n        },\r\n\r\n        /**\r\n        * Queries the signed api\r\n        * @param {string} url - the signed api endpoint\r\n        * @param {object} data - the data to send\r\n        * @param {function} callback - the callback function\r\n        * @param {string} method - the http method\r\n        * @param {boolean} noDataInSignature - Prevents data from being added to signature\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        signedRequest: function ( url, data, callback, method = 'GET', noDataInSignature = false ) {\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    signedRequest( url, data, callback, method, noDataInSignature );\r\n                } )\r\n            } else {\r\n                signedRequest( url, data, callback, method, noDataInSignature );\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Gets the market asset of given symbol\r\n        * @param {string} symbol - the public api endpoint\r\n        * @return {undefined}\r\n        */\r\n        getMarket: function ( symbol ) {\r\n            if ( symbol.endsWith( 'BTC' ) ) return 'BTC';\r\n            else if ( symbol.endsWith( 'ETH' ) ) return 'ETH';\r\n            else if ( symbol.endsWith( 'BNB' ) ) return 'BNB';\r\n            else if ( symbol.endsWith( 'XRP' ) ) return 'XRP';\r\n            else if ( symbol.endsWith( 'PAX' ) ) return 'PAX';\r\n            else if ( symbol.endsWith( 'USDT' ) ) return 'USDT';\r\n            else if ( symbol.endsWith( 'USDC' ) ) return 'USDC';\r\n            else if ( symbol.endsWith( 'USDS' ) ) return 'USDS';\r\n            else if ( symbol.endsWith( 'TUSD' ) ) return 'TUSD';\r\n        },\r\n\r\n        /**\r\n        * Get the account binance lending information\r\n        * @param {function} callback - the callback function\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        lending: async ( params = {} ) => {\r\n            return promiseRequest( 'v1/lending/union/account', params, { base:sapi, type:'SIGNED' } );\r\n        },\r\n\r\n        //** Futures methods */\r\n        futuresPing: async ( params = {} ) => {\r\n            return promiseRequest( 'v1/ping', params, { base:fapi } );\r\n        },\r\n\r\n        futuresTime: async ( params = {} ) => {\r\n            return promiseRequest( 'v1/time', params, { base:fapi } ).then( r => r.serverTime );\r\n        },\r\n\r\n        futuresExchangeInfo: async () => {\r\n            return promiseRequest( 'v1/exchangeInfo', {}, { base:fapi } );\r\n        },\r\n\r\n        futuresPrices: async ( params = {} ) => {\r\n            let data = await promiseRequest( 'v1/ticker/price', params, { base:fapi } );\r\n            return data.reduce( ( out, i ) => ( ( out[i.symbol] =  i.price ), out ), {} );\r\n        },\r\n\r\n        futuresDaily: async ( symbol = false, params = {} ) => {\r\n            if ( symbol ) params.symbol = symbol;\r\n            let data = await promiseRequest( 'v1/ticker/24hr', params, { base:fapi } );\r\n            return symbol ? data : data.reduce( ( out, i ) => ( ( out[i.symbol] = i ), out ), {} );\r\n        },\r\n\r\n        futuresOpenInterest: async ( symbol ) => {\r\n            return promiseRequest( 'v1/openInterest', { symbol }, { base:fapi } ).then( r => r.openInterest );\r\n        },\r\n\r\n        futuresCandles: async ( symbol, interval = \"30m\", params = {} ) => {\r\n            params.symbol = symbol;\r\n            params.interval = interval;\r\n            return promiseRequest( 'v1/klines', params, { base:fapi } );\r\n        },\r\n\r\n        futuresMarkPrice: async ( symbol = false ) => {\r\n            return promiseRequest( 'v1/premiumIndex', symbol ? { symbol } : {}, { base:fapi } );\r\n        },\r\n\r\n        futuresTrades: async ( symbol, params = {} ) => {\r\n            params.symbol = symbol;\r\n            return promiseRequest( 'v1/trades', params, { base:fapi } );\r\n        },\r\n\r\n        futuresHistoricalTrades: async ( symbol, params = {} ) => {\r\n            params.symbol = symbol;\r\n            return promiseRequest( 'v1/historicalTrades', params, { base:fapi, type:'MARKET_DATA' } );\r\n        },\r\n\r\n        futuresAggTrades: async ( symbol, params = {} ) => {\r\n            params.symbol = symbol;\r\n            return promiseRequest( 'v1/aggTrades', params, { base:fapi } );\r\n        },\r\n\r\n        futuresForceOrders: async ( params = {} ) => {\r\n            return promiseRequest( 'v1/forceOrders', params, { base:fapi, type:'SIGNED' } );\r\n        },\r\n\r\n        futuresDeleverageQuantile: async ( params = {} ) => {\r\n            return promiseRequest( 'v1/adlQuantile', params, { base:fapi, type:'SIGNED' } );\r\n        },\r\n\r\n        futuresUserTrades: async ( symbol, params = {} ) => {\r\n            params.symbol = symbol;\r\n            return promiseRequest( 'v1/userTrades', params, { base:fapi, type:'SIGNED' } );\r\n        },\r\n\r\n        futuresGetDataStream: async ( params = {} ) => {\r\n            //A User Data Stream listenKey is valid for 60 minutes after creation. setInterval\r\n            return promiseRequest( 'v1/listenKey', params, { base:fapi, type:'SIGNED', method:'POST' } );\r\n        },\r\n\r\n        futuresKeepDataStream: async ( params = {} ) => {\r\n            return promiseRequest( 'v1/listenKey', params, { base:fapi, type:'SIGNED', method:'PUT' } );\r\n        },\r\n\r\n        futuresCloseDataStream: async ( params = {} ) => {\r\n            return promiseRequest( 'v1/listenKey', params, { base:fapi, type:'SIGNED', method:'DELETE' } );\r\n        },\r\n\r\n        futuresLiquidationOrders: async ( symbol = false, params = {} ) => {\r\n            if ( symbol ) params.symbol = symbol;\r\n            return promiseRequest( 'v1/allForceOrders', params, { base:fapi } );\r\n        },\r\n\r\n        futuresPositionRisk: async ( params = {} ) => {\r\n            return promiseRequest( 'v2/positionRisk', params, { base:fapi, type:'SIGNED' } );\r\n        },\r\n\r\n        futuresFundingRate: async ( symbol, params = {} ) => {\r\n            params.symbol = symbol;\r\n            return promiseRequest( 'v1/fundingRate', params, { base:fapi } );\r\n        },\r\n\r\n        futuresLeverageBracket: async ( symbol = false, params = {} ) => {\r\n            if ( symbol ) params.symbol = symbol;\r\n            return promiseRequest( 'v1/leverageBracket', params, { base:fapi, type:'USER_DATA' } );\r\n        },\r\n\r\n        futuresTradingStatus: async ( symbol = false, params = {} ) => {\r\n            if ( symbol ) params.symbol = symbol;\r\n            return promiseRequest( 'v1/apiTradingStatus', params, { base:fapi, type:'USER_DATA' } );\r\n        },\r\n\r\n        futuresCommissionRate: async ( symbol = false, params = {} ) => {\r\n            if ( symbol ) params.symbol = symbol;\r\n            return promiseRequest( 'v1/commissionRate', params, { base:fapi, type:'USER_DATA' } );\r\n        },\r\n\r\n        // leverage 1 to 125\r\n        futuresLeverage: async ( symbol, leverage, params = {} ) => {\r\n            params.symbol = symbol;\r\n            params.leverage = leverage;\r\n            return promiseRequest( 'v1/leverage', params, { base:fapi, method:'POST', type:'SIGNED' } );\r\n        },\r\n\r\n        // ISOLATED, CROSSED\r\n        futuresMarginType: async ( symbol, marginType, params = {} ) => {\r\n            params.symbol = symbol;\r\n            params.marginType = marginType;\r\n            return promiseRequest( 'v1/marginType', params, { base:fapi, method:'POST', type:'SIGNED' } );\r\n        },\r\n\r\n        // type: 1: Add postion margin，2: Reduce postion margin\r\n        futuresPositionMargin: async ( symbol, amount, type = 1, params = {} ) => {\r\n            params.symbol = symbol;\r\n            params.amount = amount;\r\n            params.type = type;\r\n            return promiseRequest( 'v1/positionMargin', params, { base:fapi, method:'POST', type:'SIGNED' } );\r\n        },\r\n\r\n        futuresPositionMarginHistory: async ( symbol, params = {} ) => {\r\n            params.symbol = symbol;\r\n            return promiseRequest( 'v1/positionMargin/history', params, { base:fapi, type:'SIGNED' } );\r\n        },\r\n\r\n        futuresIncome: async ( params = {} ) => {\r\n            return promiseRequest( 'v1/income', params, { base:fapi, type:'SIGNED' } );\r\n        },\r\n\r\n        futuresBalance: async ( params = {} ) => {\r\n            return promiseRequest( 'v2/balance', params, { base:fapi, type:'SIGNED' } );\r\n        },\r\n\r\n        futuresAccount: async ( params = {} ) => {\r\n            return promiseRequest( 'v2/account', params, { base:fapi, type:'SIGNED' } );\r\n        },\r\n\r\n        futuresDepth: async ( symbol, params = {} ) => {\r\n            params.symbol = symbol;\r\n            return promiseRequest( 'v1/depth', params, { base:fapi } );\r\n        },\r\n\r\n        futuresQuote: async ( symbol = false, params = {} ) => {\r\n            if ( symbol ) params.symbol = symbol;\r\n            //let data = await promiseRequest( 'v1/ticker/bookTicker', params, {base:fapi} );\r\n            //return data.reduce((out, i) => ((out[i.symbol] = i), out), {}),\r\n            let data = await promiseRequest( 'v1/ticker/bookTicker', params, { base:fapi } );\r\n            return symbol ? data : data.reduce( ( out, i ) => ( ( out[i.symbol] = i ), out ), {} );\r\n        },\r\n\r\n        futuresBuy: async ( symbol, quantity, price, params = {} ) => {\r\n            return futuresOrder( 'BUY', symbol, quantity, price, params );\r\n        },\r\n\r\n        futuresSell: async ( symbol, quantity, price, params = {} ) => {\r\n            return futuresOrder( 'SELL', symbol, quantity, price, params );\r\n        },\r\n\r\n        futuresMarketBuy: async ( symbol, quantity, params = {} ) => {\r\n            return futuresOrder( 'BUY', symbol, quantity, false, params );\r\n        },\r\n\r\n        futuresMarketSell: async ( symbol, quantity, params = {} ) => {\r\n            return futuresOrder( 'SELL', symbol, quantity, false, params );\r\n        },\r\n\r\n        futuresOrder, // side symbol quantity [price] [params]\r\n\r\n        futuresOrderStatus: async ( symbol, params = {} ) => { // Either orderId or origClientOrderId must be sent\r\n            params.symbol = symbol;\r\n            return promiseRequest( 'v1/order', params, { base:fapi, type:'SIGNED' } );\r\n        },\r\n\r\n        futuresCancel: async ( symbol, params = {} ) => { // Either orderId or origClientOrderId must be sent\r\n            params.symbol = symbol;\r\n            return promiseRequest( 'v1/order', params, { base:fapi, type:'SIGNED', method:'DELETE' } );\r\n        },\r\n\r\n        futuresCancelAll: async ( symbol, params = {} ) => {\r\n            params.symbol = symbol;\r\n            return promiseRequest( 'v1/allOpenOrders', params, { base:fapi, type:'SIGNED', method:'DELETE' } );\r\n        },\r\n\r\n        futuresCountdownCancelAll: async ( symbol, countdownTime = 0, params = {} ) => {\r\n            params.symbol = symbol;\r\n            params.countdownTime = countdownTime;\r\n            return promiseRequest( 'v1/countdownCancelAll', params, { base:fapi, type:'SIGNED', method:'POST' } );\r\n        },\r\n\r\n        futuresOpenOrders: async ( symbol = false, params = {} ) => {\r\n            if ( symbol ) params.symbol = symbol;\r\n            return promiseRequest( 'v1/openOrders', params, { base:fapi, type:'SIGNED' } );\r\n        },\r\n\r\n        futuresAllOrders: async ( symbol = false, params = {} ) => { // Get all account orders; active, canceled, or filled.\r\n            if ( symbol ) params.symbol = symbol;\r\n            return promiseRequest( 'v1/allOrders', params, { base:fapi, type:'SIGNED' } );\r\n        },\r\n\r\n        futuresPositionSideDual: async ( params = {} ) => {\r\n            return promiseRequest( 'v1/positionSide/dual', params, { base:fapi, type:'SIGNED' } );\r\n        },\r\n\r\n        futuresChangePositionSideDual: async ( dualSidePosition, params = {} ) => {\r\n            params.dualSidePosition = dualSidePosition;\r\n            return promiseRequest( 'v1/positionSide/dual', params, { base:fapi, type:'SIGNED', method:'POST' } );\r\n        },\r\n        futuresTransferAsset: async ( asset, amount, type ) => {\r\n            let params = Object.assign( { asset, amount, type } );\r\n            return promiseRequest( 'v1/futures/transfer', params, { base:sapi, type:'SIGNED', method:'POST' } );\r\n        },\r\n\r\n        futuresHistDataId: async ( symbol = false, params = {} ) => {\r\n            if ( symbol ) params.symbol = symbol;\r\n            return promiseRequest( 'v1/futuresHistDataId', params, { base: sapi, type: 'SIGNED', method: 'POST' } )\r\n        },\r\n\r\n        futuresDownloadLink: async ( downloadId ) => {\r\n            return promiseRequest( 'v1/downloadLink', { downloadId }, { base: sapi, type: 'SIGNED' } )\r\n        },\r\n\r\n        // futures websockets support: ticker bookTicker miniTicker aggTrade markPrice\r\n        /* TODO: https://binance-docs.github.io/apidocs/futures/en/#change-log\r\n        Cancel multiple orders DELETE /fapi/v1/batchOrders\r\n        New Future Account Transfer POST https://api.binance.com/sapi/v1/futures/transfer\r\n        Get Postion Margin Change History (TRADE)\r\n\r\n        wss://fstream.binance.com/ws/<listenKey>\r\n        Diff. Book Depth Streams (250ms, 100ms, or realtime): <symbol>@depth OR <symbol>@depth@100ms OR <symbol>@depth@0ms\r\n        Partial Book Depth Streams (5, 10, 20): <symbol>@depth<levels> OR <symbol>@depth<levels>@100ms\r\n        All Market Liquidation Order Streams: !forceOrder@arr\r\n        Liquidation Order Streams for specific symbol: <symbol>@forceOrder\r\n        Chart data (250ms): <symbol>@kline_<interval>\r\n        SUBSCRIBE, UNSUBSCRIBE, LIST_SUBSCRIPTIONS, SET_PROPERTY, GET_PROPERTY\r\n        Live Subscribing/Unsubscribing to streams: requires sending futures subscription id when connecting\r\n        futuresSubscriptions { \"method\": \"LIST_SUBSCRIPTIONS\", \"id\": 1 }\r\n        futuresUnsubscribe { \"method\": \"UNSUBSCRIBE\", \"params\": [ \"btcusdt@depth\" ], \"id\": 1 }\r\n        futures depthCache\r\n        */\r\n\r\n        /*\r\n        const futuresOrder = (side, symbol, quantity, price = 0, flags = {}, callback = false) => {\r\n            let opt = {\r\n                symbol: symbol,\r\n                side: side,\r\n                type: 'LIMIT',\r\n                quantity: quantity\r\n            };\r\n            if (typeof flags.type !== 'undefined') opt.type = flags.type;\r\n            if (opt.type.includes('LIMIT')) {\r\n                opt.price = price;\r\n                opt.timeInForce = 'GTC';\r\n            }\r\n            if (typeof flags.timeInForce !== 'undefined') opt.timeInForce = flags.timeInForce;\r\n            signedRequest(`${fapi}v1/order`, opt, function (error, response) {\r\n                if (!response) {\r\n                    if (callback) return callback(error, response);\r\n                    else return Binance.options.log('futuresOrder error:', error);\r\n                }\r\n                if (callback) return callback(error, response);\r\n                else return Binance.options.log(`futuresOrder ${side} (${symbol},${quantity},${price})`, response);\r\n            }, 'POST');\r\n        };*/\r\n\r\n        //** Delivery methods */\r\n        deliveryPing: async ( params = {} ) => {\r\n            return promiseRequest( 'v1/ping', params, { base:dapi } );\r\n        },\r\n\r\n        deliveryTime: async ( params = {} ) => {\r\n            return promiseRequest( 'v1/time', params, { base:dapi } ).then( r => r.serverTime );\r\n        },\r\n\r\n        deliveryExchangeInfo: async () => {\r\n            return promiseRequest( 'v1/exchangeInfo', {}, { base:dapi } );\r\n        },\r\n\r\n        deliveryPrices: async ( params = {} ) => {\r\n            let data = await promiseRequest( 'v1/ticker/price', params, { base:dapi } );\r\n            return data.reduce( ( out, i ) => ( ( out[i.symbol] =  i.price ), out ), {} );\r\n        },\r\n\r\n        deliveryDaily: async ( symbol = false, params = {} ) => {\r\n            if ( symbol ) params.symbol = symbol;\r\n            let data = await promiseRequest( 'v1/ticker/24hr', params, { base:dapi } );\r\n            return symbol ? data : data.reduce( ( out, i ) => ( ( out[i.symbol] = i ), out ), {} );\r\n        },\r\n\r\n        deliveryOpenInterest: async ( symbol ) => {\r\n            return promiseRequest( 'v1/openInterest', { symbol }, { base:dapi } ).then( r => r.openInterest );\r\n        },\r\n\r\n        deliveryCandles: async ( symbol, interval = \"30m\", params = {} ) => {\r\n            params.symbol = symbol;\r\n            params.interval = interval;\r\n            return promiseRequest( 'v1/klines', params, { base:dapi } );\r\n        },\r\n\r\n        deliveryContinuousKlines: async ( pair, contractType = \"CURRENT_QUARTER\", interval = \"30m\", params = {} ) => {\r\n            params.pair = pair;\r\n            params.interval = interval;\r\n            params.contractType = contractType;\r\n            return promiseRequest( 'v1/continuousKlines', params, { base:dapi } );\r\n        },\r\n\r\n        deliveryIndexKlines: async ( pair, interval = \"30m\", params = {} ) => {\r\n            params.pair = pair;\r\n            params.interval = interval;\r\n            return promiseRequest( 'v1/indexPriceKlines', params, { base:dapi } );\r\n        },\r\n\r\n        deliveryMarkPriceKlines: async ( symbol, interval = \"30m\", params = {} ) => {\r\n            params.symbol = symbol;\r\n            params.interval = interval;\r\n            return promiseRequest( 'v1/markPriceKlines', params, { base:dapi } );\r\n        },\r\n\r\n        deliveryMarkPrice: async ( symbol = false ) => {\r\n            return promiseRequest( 'v1/premiumIndex', symbol ? { symbol } : {}, { base:dapi } );\r\n        },\r\n\r\n        deliveryTrades: async ( symbol, params = {} ) => {\r\n            params.symbol = symbol;\r\n            return promiseRequest( 'v1/trades', params, { base:dapi } );\r\n        },\r\n\r\n        deliveryHistoricalTrades: async ( symbol, params = {} ) => {\r\n            params.symbol = symbol;\r\n            return promiseRequest( 'v1/historicalTrades', params, { base:dapi, type:'MARKET_DATA' } );\r\n        },\r\n\r\n        deliveryAggTrades: async ( symbol, params = {} ) => {\r\n            params.symbol = symbol;\r\n            return promiseRequest( 'v1/aggTrades', params, { base:dapi } );\r\n        },\r\n\r\n        deliveryUserTrades: async ( symbol, params = {} ) => {\r\n            params.symbol = symbol;\r\n            return promiseRequest( 'v1/userTrades', params, { base:dapi, type:'SIGNED' } );\r\n        },\r\n\r\n        deliveryGetDataStream: async ( params = {} ) => {\r\n            //A User Data Stream listenKey is valid for 60 minutes after creation. setInterval\r\n            return promiseRequest( 'v1/listenKey', params, { base:dapi, type:'SIGNED', method:'POST' } );\r\n        },\r\n\r\n        deliveryKeepDataStream: async ( params = {} ) => {\r\n            return promiseRequest( 'v1/listenKey', params, { base:dapi, type:'SIGNED', method:'PUT' } );\r\n        },\r\n\r\n        deliveryCloseDataStream: async ( params = {} ) => {\r\n            return promiseRequest( 'v1/listenKey', params, { base:dapi, type:'SIGNED', method:'DELETE' } );\r\n        },\r\n\r\n        deliveryLiquidationOrders: async ( symbol = false, params = {} ) => {\r\n            if ( symbol ) params.symbol = symbol;\r\n            return promiseRequest( 'v1/allForceOrders', params, { base:dapi } );\r\n        },\r\n\r\n        deliveryPositionRisk: async ( params = {} ) => {\r\n            return promiseRequest( 'v1/positionRisk', params, { base:dapi, type:'SIGNED' } );\r\n        },\r\n\r\n        deliveryLeverageBracket: async ( symbol = false, params = {} ) => {\r\n            if ( symbol ) params.symbol = symbol;\r\n            return promiseRequest( 'v1/leverageBracket', params, { base:dapi, type:'USER_DATA' } );\r\n        },\r\n\r\n        deliveryLeverageBracketSymbols: async ( symbol = false, params = {} ) => {\r\n            if ( symbol ) params.symbol = symbol;\r\n            return promiseRequest( 'v2/leverageBracket', params, { base:dapi, type:'USER_DATA' } );\r\n        },\r\n\r\n        // leverage 1 to 125\r\n        deliveryLeverage: async ( symbol, leverage, params = {} ) => {\r\n            params.symbol = symbol;\r\n            params.leverage = leverage;\r\n            return promiseRequest( 'v1/leverage', params, { base:dapi, method:'POST', type:'SIGNED' } );\r\n        },\r\n\r\n        // ISOLATED, CROSSED\r\n        deliveryMarginType: async ( symbol, marginType, params = {} ) => {\r\n            params.symbol = symbol;\r\n            params.marginType = marginType;\r\n            return promiseRequest( 'v1/marginType', params, { base:dapi, method:'POST', type:'SIGNED' } );\r\n        },\r\n\r\n        // type: 1: Add postion margin，2: Reduce postion margin\r\n        deliveryPositionMargin: async ( symbol, amount, type = 1, params = {} ) => {\r\n            params.symbol = symbol;\r\n            params.amount = amount;\r\n            params.type = type;\r\n            return promiseRequest( 'v1/positionMargin', params, { base:dapi, method:'POST', type:'SIGNED' } );\r\n        },\r\n\r\n        deliveryPositionMarginHistory: async ( symbol, params = {} ) => {\r\n            params.symbol = symbol;\r\n            return promiseRequest( 'v1/positionMargin/history', params, { base:dapi, type:'SIGNED' } );\r\n        },\r\n\r\n        deliveryIncome: async ( params = {} ) => {\r\n            return promiseRequest( 'v1/income', params, { base:dapi, type:'SIGNED' } );\r\n        },\r\n\r\n        deliveryBalance: async ( params = {} ) => {\r\n            return promiseRequest( 'v1/balance', params, { base:dapi, type:'SIGNED' } );\r\n        },\r\n\r\n        deliveryAccount: async ( params = {} ) => {\r\n            return promiseRequest( 'v1/account', params, { base:dapi, type:'SIGNED' } );\r\n        },\r\n\r\n        deliveryDepth: async ( symbol, params = {} ) => {\r\n            params.symbol = symbol;\r\n            return promiseRequest( 'v1/depth', params, { base:dapi } );\r\n        },\r\n\r\n        deliveryQuote: async ( symbol = false, params = {} ) => {\r\n            if ( symbol ) params.symbol = symbol;\r\n            //let data = await promiseRequest( 'v1/ticker/bookTicker', params, {base:dapi} );\r\n            //return data.reduce((out, i) => ((out[i.symbol] = i), out), {}),\r\n            let data = await promiseRequest( 'v1/ticker/bookTicker', params, { base:dapi } );\r\n            return symbol ? data : data.reduce( ( out, i ) => ( ( out[i.symbol] = i ), out ), {} );\r\n        },\r\n\r\n        deliveryBuy: async ( symbol, quantity, price, params = {} ) => {\r\n            return deliveryOrder( 'BUY', symbol, quantity, price, params );\r\n        },\r\n\r\n        deliverySell: async ( symbol, quantity, price, params = {} ) => {\r\n            return deliveryOrder( 'SELL', symbol, quantity, price, params );\r\n        },\r\n\r\n        deliveryMarketBuy: async ( symbol, quantity, params = {} ) => {\r\n            return deliveryOrder( 'BUY', symbol, quantity, false, params );\r\n        },\r\n\r\n        deliveryMarketSell: async ( symbol, quantity, params = {} ) => {\r\n            return deliveryOrder( 'SELL', symbol, quantity, false, params );\r\n        },\r\n\r\n        deliveryOrder, // side symbol quantity [price] [params]\r\n\r\n        deliveryOrderStatus: async ( symbol, params = {} ) => { // Either orderId or origClientOrderId must be sent\r\n            params.symbol = symbol;\r\n            return promiseRequest( 'v1/order', params, { base:dapi, type:'SIGNED' } );\r\n        },\r\n\r\n        deliveryCancel: async ( symbol, params = {} ) => { // Either orderId or origClientOrderId must be sent\r\n            params.symbol = symbol;\r\n            return promiseRequest( 'v1/order', params, { base:dapi, type:'SIGNED', method:'DELETE' } );\r\n        },\r\n\r\n        deliveryCancelAll: async ( symbol, params = {} ) => {\r\n            params.symbol = symbol;\r\n            return promiseRequest( 'v1/allOpenOrders', params, { base:dapi, type:'SIGNED', method:'DELETE' } );\r\n        },\r\n\r\n        deliveryCountdownCancelAll: async ( symbol, countdownTime = 0, params = {} ) => {\r\n            params.symbol = symbol;\r\n            params.countdownTime = countdownTime;\r\n            return promiseRequest( 'v1/countdownCancelAll', params, { base:dapi, type:'SIGNED', method:'POST' } );\r\n        },\r\n\r\n        deliveryOpenOrders: async ( symbol = false, params = {} ) => {\r\n            if ( symbol ) params.symbol = symbol;\r\n            return promiseRequest( 'v1/openOrders', params, { base:dapi, type:'SIGNED' } );\r\n        },\r\n\r\n        deliveryAllOrders: async ( symbol = false, params = {} ) => { // Get all account orders; active, canceled, or filled.\r\n            if ( symbol ) params.symbol = symbol;\r\n            return promiseRequest( 'v1/allOrders', params, { base:dapi, type:'SIGNED' } );\r\n        },\r\n\r\n        deliveryPositionSideDual: async ( params = {} ) => {\r\n            return promiseRequest( 'v1/positionSide/dual', params, { base:dapi, type:'SIGNED' } );\r\n        },\r\n\r\n        deliveryChangePositionSideDual: async ( dualSidePosition, params = {} ) => {\r\n            params.dualSidePosition = dualSidePosition;\r\n            return promiseRequest( 'v1/positionSide/dual', params, { base:dapi, type:'SIGNED', method:'POST' } );\r\n        },\r\n\r\n        //** Margin methods */\r\n        /**\r\n         * Creates an order\r\n         * @param {string} side - BUY or SELL\r\n         * @param {string} symbol - the symbol to buy\r\n         * @param {numeric} quantity - the quantity required\r\n         * @param {numeric} price - the price to pay for each unit\r\n         * @param {object} flags - additional buy order flags\r\n         * @param {function} callback - the callback function\r\n         * @param {string} isIsolated - the isolate margin option\r\n         * @return {undefined}\r\n         */\r\n        mgOrder: function ( side, symbol, quantity, price, flags = {}, callback = false,isIsolated='FALSE'  ) {\r\n            marginOrder( side, symbol, quantity, price, {...flags,isIsolated}, callback );\r\n        },\r\n\r\n        /**\r\n         * Creates a buy order\r\n         * @param {string} symbol - the symbol to buy\r\n         * @param {numeric} quantity - the quantity required\r\n         * @param {numeric} price - the price to pay for each unit\r\n         * @param {object} flags - additional buy order flags\r\n         * @param {function} callback - the callback function\r\n         * @param {string} isIsolated - the isolate margin option\r\n         * @return {undefined}\r\n         */\r\n        mgBuy: function ( symbol, quantity, price, flags = {}, callback = false,isIsolated='FALSE'  ) {\r\n            marginOrder( 'BUY', symbol, quantity, price, {...flags,isIsolated}, callback );\r\n        },\r\n\r\n        /**\r\n         * Creates a sell order\r\n         * @param {string} symbol - the symbol to sell\r\n         * @param {numeric} quantity - the quantity required\r\n         * @param {numeric} price - the price to sell each unit for\r\n         * @param {object} flags - additional order flags\r\n         * @param {function} callback - the callback function\r\n         * @param {string} isIsolated - the isolate margin option\r\n         * @return {undefined}\r\n         */\r\n        mgSell: function ( symbol, quantity, price, flags = {}, callback = false,isIsolated='FALSE'  ) {\r\n            marginOrder( 'SELL', symbol, quantity, price, {...flags,isIsolated}, callback );\r\n        },\r\n\r\n        /**\r\n         * Creates a market buy order\r\n         * @param {string} symbol - the symbol to buy\r\n         * @param {numeric} quantity - the quantity required\r\n         * @param {object} flags - additional buy order flags\r\n         * @param {function} callback - the callback function\r\n         * @param {string} isIsolated - the isolate margin option\r\n         * @return {undefined}\r\n         */\r\n        mgMarketBuy: function ( symbol, quantity, flags = { type: 'MARKET' }, callback = false,isIsolated='FALSE' ) {\r\n            if ( typeof flags === 'function' ) { // Accept callback as third parameter\r\n                callback = flags;\r\n                flags = { type: 'MARKET' };\r\n            }\r\n            if ( typeof flags.type === 'undefined' ) flags.type = 'MARKET';\r\n            marginOrder( 'BUY', symbol, quantity, 0, {...flags,isIsolated}, callback );\r\n        },\r\n\r\n        /**\r\n         * Creates a market sell order\r\n         * @param {string} symbol - the symbol to sell\r\n         * @param {numeric} quantity - the quantity required\r\n         * @param {object} flags - additional sell order flags\r\n         * @param {function} callback - the callback function\r\n         * @param {string} isIsolated - the isolate margin option\r\n         * @return {undefined}\r\n         */\r\n        mgMarketSell: function ( symbol, quantity, flags = { type: 'MARKET' }, callback = false, isIsolated='FALSE'  ) {\r\n            if ( typeof flags === 'function' ) { // Accept callback as third parameter\r\n                callback = flags;\r\n                flags = { type: 'MARKET' };\r\n            }\r\n            if ( typeof flags.type === 'undefined' ) flags.type = 'MARKET';\r\n            marginOrder( 'SELL', symbol, quantity, 0, {...flags,isIsolated}, callback );\r\n        },\r\n\r\n        /**\r\n         * Cancels an order\r\n         * @param {string} symbol - the symbol to cancel\r\n         * @param {string} orderid - the orderid to cancel\r\n         * @param {function} callback - the callback function\r\n         * @return {undefined}\r\n         */\r\n        mgCancel: function ( symbol, orderid, callback = false,isIsolated='FALSE') {\r\n            signedRequest( sapi + 'v1/margin/order', { symbol: symbol, orderId: orderid,isIsolated }, function ( error, data ) {\r\n                if ( callback ) return callback.call( this, error, data, symbol );\r\n            }, 'DELETE' );\r\n        },\r\n\r\n        /**\r\n        * Gets all order of a given symbol\r\n        * @param {string} symbol - the symbol\r\n        * @param {function} callback - the callback function\r\n        * @param {object} options - additional options\r\n        * @return {promise or undefined} - omitting the callback returns a promise\r\n        */\r\n        mgAllOrders: function ( symbol, callback, options = {} ) {\r\n            let parameters = Object.assign( { symbol: symbol }, options );\r\n            if ( !callback ) {\r\n                return new Promise( ( resolve, reject ) => {\r\n                    callback = ( error, response ) => {\r\n                        if ( error ) {\r\n                            reject( error );\r\n                        } else {\r\n                            resolve( response );\r\n                        }\r\n                    }\r\n                    signedRequest( sapi + 'v1/margin/allOrders', parameters, function ( error, data ) {\r\n                        return callback.call( this, error, data, symbol );\r\n                    } );\r\n                } )\r\n            } else {\r\n                signedRequest( sapi + 'v1/margin/allOrders', parameters, function ( error, data ) {\r\n                    return callback.call( this, error, data, symbol );\r\n                } );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets the status of an order\r\n         * @param {string} symbol - the symbol to check\r\n         * @param {string} orderid - the orderid to check\r\n         * @param {function} callback - the callback function\r\n         * @param {object} flags - any additional flags\r\n         * @return {undefined}\r\n         */\r\n        mgOrderStatus: function ( symbol, orderid, callback, flags = {} ) {\r\n            let parameters = Object.assign( { symbol: symbol, orderId: orderid }, flags );\r\n            signedRequest( sapi + 'v1/margin/order', parameters, function ( error, data ) {\r\n                if ( callback ) return callback.call( this, error, data, symbol );\r\n            } );\r\n        },\r\n\r\n        /**\r\n         * Gets open orders\r\n         * @param {string} symbol - the symbol to get\r\n         * @param {function} callback - the callback function\r\n         * @return {undefined}\r\n         */\r\n        mgOpenOrders: function ( symbol, callback ) {\r\n            let parameters = symbol ? { symbol: symbol } : {};\r\n            signedRequest( sapi + 'v1/margin/openOrders', parameters, function ( error, data ) {\r\n                return callback.call( this, error, data, symbol );\r\n            } );\r\n        },\r\n\r\n        /**\r\n         * Cancels all order of a given symbol\r\n         * @param {string} symbol - the symbol to cancel all orders for\r\n         * @param {function} callback - the callback function\r\n         * @return {undefined}\r\n         */\r\n        mgCancelOrders: function ( symbol, callback = false ) {\r\n            signedRequest( sapi + 'v1/margin/openOrders', { symbol: symbol }, function ( error, json ) {\r\n                if ( json.length === 0 ) {\r\n                    if ( callback ) return callback.call( this, 'No orders present for this symbol', {}, symbol );\r\n                }\r\n                for ( let obj of json ) {\r\n                    let quantity = obj.origQty - obj.executedQty;\r\n                    Binance.options.log( 'cancel order: ' + obj.side + ' ' + symbol + ' ' + quantity + ' @ ' + obj.price + ' #' + obj.orderId );\r\n                    signedRequest( sapi + 'v1/margin/order', { symbol: symbol, orderId: obj.orderId }, function ( error, data ) {\r\n                        if ( callback ) return callback.call( this, error, data, symbol );\r\n                    }, 'DELETE' );\r\n                }\r\n            } );\r\n        },\r\n\r\n        /**\r\n         * Transfer from main account to margin account\r\n         * @param {string} asset - the asset\r\n         * @param {number} amount - the asset\r\n         * @param {function} callback - the callback function\r\n         * @param {object} options - additional options\r\n         * @return {undefined}\r\n         */\r\n        mgTransferMainToMargin: function ( asset, amount, callback ) {\r\n            let parameters = Object.assign( { asset: asset, amount: amount, type: 1 } );\r\n            signedRequest( sapi + 'v1/margin/transfer', parameters, function ( error, data ) {\r\n                if ( callback ) return callback( error, data );\r\n            }, 'POST' );\r\n        },\r\n\r\n        /**\r\n         * Transfer from margin account to main account\r\n         * @param {string} asset - the asset\r\n         * @param {number} amount - the asset\r\n         * @param {function} callback - the callback function\r\n         * @return {undefined}\r\n         */\r\n        mgTransferMarginToMain: function ( asset, amount, callback ) {\r\n            let parameters = Object.assign( { asset: asset, amount: amount, type: 2 } );\r\n            signedRequest( sapi + 'v1/margin/transfer', parameters, function ( error, data ) {\r\n                if ( callback ) return callback( error, data );\r\n            }, 'POST' );\r\n        },\r\n\r\n        /**\r\n     * Transfer from main account to delivery account\r\n     * @param {string} asset - the asset\r\n     * @param {number} amount - the asset\r\n     * @param {function} callback - the callback function (optionnal)\r\n     * @param {object} options - additional options\r\n     * @return {undefined}\r\n     */\r\n        transferMainToFutures: ( asset, amount, callback ) =>\r\n            transferBetweenMainAndFutures( asset, amount, 1, callback ),\r\n\r\n        /**\r\n     * Transfer from delivery account to main account\r\n     * @param {string} asset - the asset\r\n     * @param {number} amount - the asset\r\n     * @param {function} callback - the callback function (optionnal)\r\n     * @return {undefined}\r\n     */\r\n        transferFuturesToMain: ( asset, amount, callback ) =>\r\n            transferBetweenMainAndFutures( asset, amount, 2, callback ),\r\n\r\n        /**\r\n     * Transfer from main account to delivery account\r\n     * @param {string} asset - the asset\r\n     * @param {number} amount - the asset\r\n     * @param {function} callback - the callback function (optionnal)\r\n     * @param {object} options - additional options\r\n     * @return {undefined}\r\n     */\r\n        transferMainToDelivery: ( asset, amount, callback ) =>\r\n            transferBetweenMainAndFutures( asset, amount, 3, callback ),\r\n\r\n        /**\r\n     * Transfer from delivery account to main account\r\n     * @param {string} asset - the asset\r\n     * @param {number} amount - the asset\r\n     * @param {function} callback - the callback function (optionnal)\r\n     * @return {undefined}\r\n     */\r\n        transferDeliveryToMain: ( asset, amount, callback ) =>\r\n            transferBetweenMainAndFutures( asset, amount, 4, callback ),\r\n\r\n        /**\r\n         * Get maximum transfer-out amount of an asset\r\n         * @param {string} asset - the asset\r\n         * @param {function} callback - the callback function\r\n         * @return {undefined}\r\n         */\r\n        maxTransferable: function ( asset, callback ) {\r\n            signedRequest( sapi + 'v1/margin/maxTransferable', { asset: asset }, function( error, data ) {\r\n                if( callback ) return callback( error, data );\r\n            } );\r\n        },\r\n\r\n        /**\r\n         * Margin account borrow/loan\r\n         * @param {string} asset - the asset\r\n         * @param {number} amount - the asset\r\n         * @param {function} callback - the callback function\r\n         * @param {string} isIsolated - the isolated option\r\n         * @param {string} symbol - symbol for isolated margin\r\n         * @return {undefined}\r\n         */\r\n        mgBorrow: function ( asset, amount, callback, isIsolated='FALSE',symbol=null ) {\r\n            let parameters = Object.assign( { asset: asset, amount: amount } );\r\n            if (isIsolated ==='TRUE' && !symbol) throw new Error('If \"isIsolated\" = \"TRUE\", \"symbol\" must be sent')\r\n            const isolatedObj = isIsolated === 'TRUE'?{\r\n                isIsolated,\r\n                symbol\r\n            }:{}\r\n            signedRequest( sapi + 'v1/margin/loan', {...parameters,...isolatedObj}, function ( error, data ) {\r\n                if ( callback ) return callback( error, data );\r\n            }, 'POST' );\r\n        },\r\n\r\n        /**\r\n         * Margin account repay\r\n         * @param {string} asset - the asset\r\n         * @param {number} amount - the asset\r\n         * @param {function} callback - the callback function\r\n         * @param {string} isIsolated - the isolated option\r\n         * @param {string} symbol - symbol for isolated margin\r\n         * @return {undefined}\r\n         */\r\n        mgRepay: function ( asset, amount, callback ,isIsolated='FALSE',symbol=null ) {\r\n            let parameters = Object.assign( { asset: asset, amount: amount } );\r\n            if (isIsolated ==='TRUE' && !symbol) throw new Error('If \"isIsolated\" = \"TRUE\", \"symbol\" must be sent')\r\n            const isolatedObj = isIsolated === 'TRUE'?{\r\n                isIsolated,\r\n                symbol\r\n            }:{}\r\n            signedRequest( sapi + 'v1/margin/repay', {...parameters,...isolatedObj}, function ( error, data ) {\r\n                if ( callback ) return callback( error, data );\r\n            }, 'POST' );\r\n        },\r\n        /**\r\n         * Margin account details\r\n         * @param {function} callback - the callback function\r\n         * @param {boolean} isIsolated - the callback function\r\n         * @return {undefined}\r\n         */\r\n        mgAccount: function( callback ,isIsolated = false) {\r\n            const endpoint = 'v1/margin' + (isIsolated)?'/isolated':''  + '/account'\r\n            signedRequest( sapi + endpoint, {}, function( error, data ) {\r\n                if( callback ) return callback( error, data );\r\n            } );\r\n        },\r\n        /**\r\n         * Get maximum borrow amount of an asset\r\n         * @param {string} asset - the asset\r\n         * @param {function} callback - the callback function\r\n         * @return {undefined}\r\n         */\r\n        maxBorrowable: function ( asset, callback ) {\r\n            signedRequest( sapi + 'v1/margin/maxBorrowable', { asset: asset }, function( error, data ) {\r\n                if( callback ) return callback( error, data );\r\n            } );\r\n        },\r\n\r\n        // Futures WebSocket Functions:\r\n        /**\r\n         * Subscribe to a single futures websocket\r\n         * @param {string} url - the futures websocket endpoint\r\n         * @param {function} callback - optional execution callback\r\n         * @param {object} params - Optional reconnect {boolean} (whether to reconnect on disconnect), openCallback {function}, id {string}\r\n         * @return {WebSocket} the websocket reference\r\n         */\r\n        futuresSubscribeSingle: function ( url, callback, params = {} ) {\r\n            return futuresSubscribeSingle( url, callback, params );\r\n        },\r\n\r\n        /**\r\n         * Subscribe to a combined futures websocket\r\n         * @param {string} streams - the list of websocket endpoints to connect to\r\n         * @param {function} callback - optional execution callback\r\n         * @param {object} params - Optional reconnect {boolean} (whether to reconnect on disconnect), openCallback {function}, id {string}\r\n         * @return {WebSocket} the websocket reference\r\n         */\r\n        futuresSubscribe: function ( streams, callback, params = {} ) {\r\n            return futuresSubscribe( streams, callback, params );\r\n        },\r\n\r\n        /**\r\n         * Returns the known futures websockets subscriptions\r\n         * @return {array} array of futures websocket subscriptions\r\n         */\r\n        futuresSubscriptions: function() {\r\n            return Binance.futuresSubscriptions;\r\n        },\r\n\r\n        /**\r\n         * Terminates a futures websocket\r\n         * @param {string} endpoint - the string associated with the endpoint\r\n         * @return {undefined}\r\n         */\r\n        futuresTerminate: function ( endpoint ) {\r\n            if ( Binance.options.verbose ) Binance.options.log( 'Futures WebSocket terminating:', endpoint );\r\n            return futuresTerminate( endpoint );\r\n        },\r\n\r\n        /**\r\n         * Futures WebSocket aggregated trades\r\n         * @param {array/string} symbols - an array or string of symbols to query\r\n         * @param {function} callback - callback function\r\n         * @return {string} the websocket endpoint\r\n         */\r\n        futuresAggTradeStream: function futuresAggTradeStream( symbols, callback ) {\r\n            let reconnect = () => {\r\n                if ( Binance.options.reconnect ) futuresAggTradeStream( symbols, callback );\r\n            };\r\n            let subscription, cleanCallback = data => callback( fAggTradeConvertData( data ) );\r\n            if ( Array.isArray( symbols ) ) {\r\n                if ( !isArrayUnique( symbols ) ) throw Error( 'futuresAggTradeStream: \"symbols\" cannot contain duplicate elements.' );\r\n                let streams = symbols.map( symbol => symbol.toLowerCase() + '@aggTrade' );\r\n                subscription = futuresSubscribe( streams, cleanCallback, { reconnect } );\r\n            } else {\r\n                let symbol = symbols;\r\n                subscription = futuresSubscribeSingle( symbol.toLowerCase() + '@aggTrade', cleanCallback, { reconnect } );\r\n            }\r\n            return subscription.endpoint;\r\n        },\r\n\r\n        /**\r\n         * Futures WebSocket mark price\r\n         * @param {symbol} symbol name or false. can also be a callback\r\n         * @param {function} callback - callback function\r\n         * @param {string} speed - 1 second updates. leave blank for default 3 seconds\r\n         * @return {string} the websocket endpoint\r\n         */\r\n        futuresMarkPriceStream: function fMarkPriceStream( symbol = false, callback = console.log, speed = '@1s' ) {\r\n            if ( typeof symbol == 'function' ) {\r\n                callback = symbol;\r\n                symbol = false;\r\n            }\r\n            let reconnect = () => {\r\n                if ( Binance.options.reconnect ) fMarkPriceStream( symbol, callback, speed );\r\n            };\r\n            const endpoint = symbol ? `${ symbol.toLowerCase() }@markPrice` : '!markPrice@arr'\r\n            let subscription = futuresSubscribeSingle( endpoint + speed, data => callback( fMarkPriceConvertData( data ) ), { reconnect } );\r\n            return subscription.endpoint;\r\n        },\r\n\r\n        /**\r\n         * Futures WebSocket liquidations stream\r\n         * @param {symbol} symbol name or false. can also be a callback\r\n         * @param {function} callback - callback function\r\n         * @return {string} the websocket endpoint\r\n         */\r\n        futuresLiquidationStream: function fLiquidationStream( symbol = false, callback = console.log ) {\r\n            if ( typeof symbol == 'function' ) {\r\n                callback = symbol;\r\n                symbol = false;\r\n            }\r\n            let reconnect = () => {\r\n                if ( Binance.options.reconnect ) fLiquidationStream( symbol, callback );\r\n            };\r\n            const endpoint = symbol ? `${ symbol.toLowerCase() }@forceOrder` : '!forceOrder@arr'\r\n            let subscription = futuresSubscribeSingle( endpoint, data => callback( fLiquidationConvertData( data ) ), { reconnect } );\r\n            return subscription.endpoint;\r\n        },\r\n\r\n        /**\r\n         * Futures WebSocket prevDay ticker\r\n         * @param {symbol} symbol name or false. can also be a callback\r\n         * @param {function} callback - callback function\r\n         * @return {string} the websocket endpoint\r\n         */\r\n        futuresTickerStream: function fTickerStream( symbol = false, callback = console.log ) {\r\n            if ( typeof symbol == 'function' ) {\r\n                callback = symbol;\r\n                symbol = false;\r\n            }\r\n            let reconnect = () => {\r\n                if ( Binance.options.reconnect ) fTickerStream( symbol, callback );\r\n            };\r\n            const endpoint = symbol ? `${ symbol.toLowerCase() }@ticker` : '!ticker@arr'\r\n            let subscription = futuresSubscribeSingle( endpoint, data => callback( fTickerConvertData( data ) ), { reconnect } );\r\n            return subscription.endpoint;\r\n        },\r\n\r\n        /**\r\n         * Futures WebSocket miniTicker\r\n         * @param {symbol} symbol name or false. can also be a callback\r\n         * @param {function} callback - callback function\r\n         * @return {string} the websocket endpoint\r\n         */\r\n        futuresMiniTickerStream: function fMiniTickerStream( symbol = false, callback = console.log ) {\r\n            if ( typeof symbol == 'function' ) {\r\n                callback = symbol;\r\n                symbol = false;\r\n            }\r\n            let reconnect = () => {\r\n                if ( Binance.options.reconnect ) fMiniTickerStream( symbol, callback );\r\n            };\r\n            const endpoint = symbol ? `${ symbol.toLowerCase() }@miniTicker` : '!miniTicker@arr'\r\n            let subscription = futuresSubscribeSingle( endpoint, data => callback( fMiniTickerConvertData( data ) ), { reconnect } );\r\n            return subscription.endpoint;\r\n        },\r\n\r\n        /**\r\n         * Futures WebSocket bookTicker\r\n         * @param {symbol} symbol name or false. can also be a callback\r\n         * @param {function} callback - callback function\r\n         * @return {string} the websocket endpoint\r\n         */\r\n        futuresBookTickerStream: function fBookTickerStream( symbol = false, callback = console.log ) {\r\n            if ( typeof symbol == 'function' ) {\r\n                callback = symbol;\r\n                symbol = false;\r\n            }\r\n            let reconnect = () => {\r\n                if ( Binance.options.reconnect ) fBookTickerStream( symbol, callback );\r\n            };\r\n            const endpoint = symbol ? `${ symbol.toLowerCase() }@bookTicker` : '!bookTicker'\r\n            let subscription = futuresSubscribeSingle( endpoint, data => callback( fBookTickerConvertData( data ) ), { reconnect } );\r\n            return subscription.endpoint;\r\n        },\r\n\r\n        /**\r\n         * Websocket futures klines\r\n         * @param {array/string} symbols - an array or string of symbols to query\r\n         * @param {string} interval - the time interval\r\n         * @param {function} callback - callback function\r\n         * @param {int} limit - maximum results, no more than 1000\r\n         * @return {string} the websocket endpoint\r\n         */\r\n        futuresChart: async function futuresChart( symbols, interval, callback, limit = 500 ) {\r\n            let reconnect = () => {\r\n                if ( Binance.options.reconnect ) futuresChart( symbols, interval, callback, limit );\r\n            };\r\n\r\n            let futuresChartInit = symbol => {\r\n                if ( typeof Binance.futuresMeta[symbol] === 'undefined' ) Binance.futuresMeta[symbol] = {};\r\n                if ( typeof Binance.futuresMeta[symbol][interval] === 'undefined' ) Binance.futuresMeta[symbol][interval] = {};\r\n                if ( typeof Binance.futuresTicks[symbol] === 'undefined' ) Binance.futuresTicks[symbol] = {};\r\n                if ( typeof Binance.futuresTicks[symbol][interval] === 'undefined' ) Binance.futuresTicks[symbol][interval] = {};\r\n                if ( typeof Binance.futuresRealtime[symbol] === 'undefined' ) Binance.futuresRealtime[symbol] = {};\r\n                if ( typeof Binance.futuresRealtime[symbol][interval] === 'undefined' ) Binance.futuresRealtime[symbol][interval] = {};\r\n                if ( typeof Binance.futuresKlineQueue[symbol] === 'undefined' ) Binance.futuresKlineQueue[symbol] = {};\r\n                if ( typeof Binance.futuresKlineQueue[symbol][interval] === 'undefined' ) Binance.futuresKlineQueue[symbol][interval] = [];\r\n                Binance.futuresMeta[symbol][interval].timestamp = 0;\r\n            }\r\n\r\n            let handleFuturesKlineStream = kline => {\r\n                let symbol = kline.s, interval = kline.k.i;\r\n                if ( !Binance.futuresMeta[symbol][interval].timestamp ) {\r\n                    if ( typeof ( Binance.futuresKlineQueue[symbol][interval] ) !== 'undefined' && kline !== null ) {\r\n                        Binance.futuresKlineQueue[symbol][interval].push( kline );\r\n                    }\r\n                } else {\r\n                    //Binance.options.log('futures klines at ' + kline.k.t);\r\n                    futuresKlineHandler( symbol, kline );\r\n                    if ( callback ) callback( symbol, interval, futuresKlineConcat( symbol, interval ) );\r\n                }\r\n            };\r\n\r\n            let getFuturesKlineSnapshot = async ( symbol, limit = 500 ) => {\r\n                let data = await promiseRequest( 'v1/klines', { symbol, interval, limit }, { base:fapi } );\r\n                futuresKlineData( symbol, interval, data );\r\n                //Binance.options.log('/futures klines at ' + Binance.futuresMeta[symbol][interval].timestamp);\r\n                if ( typeof Binance.futuresKlineQueue[symbol][interval] !== 'undefined' ) {\r\n                    for ( let kline of Binance.futuresKlineQueue[symbol][interval] ) futuresKlineHandler( symbol, kline, Binance.futuresMeta[symbol][interval].timestamp );\r\n                    delete Binance.futuresKlineQueue[symbol][interval];\r\n                }\r\n                if ( callback ) callback( symbol, interval, futuresKlineConcat( symbol, interval ) );\r\n            };\r\n\r\n            let subscription;\r\n            if ( Array.isArray( symbols ) ) {\r\n                if ( !isArrayUnique( symbols ) ) throw Error( 'futuresChart: \"symbols\" array cannot contain duplicate elements.' );\r\n                symbols.forEach( futuresChartInit );\r\n                let streams = symbols.map( symbol => `${ symbol.toLowerCase() }@kline_${ interval }` );\r\n                subscription = futuresSubscribe( streams, handleFuturesKlineStream, reconnect );\r\n                symbols.forEach( element => getFuturesKlineSnapshot( element, limit ) );\r\n            } else {\r\n                let symbol = symbols;\r\n                futuresChartInit( symbol );\r\n                subscription = futuresSubscribeSingle( symbol.toLowerCase() + '@kline_' + interval, handleFuturesKlineStream, reconnect );\r\n                getFuturesKlineSnapshot( symbol, limit );\r\n            }\r\n            return subscription.endpoint;\r\n        },\r\n\r\n        /**\r\n         * Websocket futures candlesticks\r\n         * @param {array/string} symbols - an array or string of symbols to query\r\n         * @param {string} interval - the time interval\r\n         * @param {function} callback - callback function\r\n         * @return {string} the websocket endpoint\r\n         */\r\n        futuresCandlesticks: function futuresCandlesticks( symbols, interval, callback ) {\r\n            let reconnect = () => {\r\n                if ( Binance.options.reconnect ) futuresCandlesticks( symbols, interval, callback );\r\n            };\r\n            let subscription;\r\n            if ( Array.isArray( symbols ) ) {\r\n                if ( !isArrayUnique( symbols ) ) throw Error( 'futuresCandlesticks: \"symbols\" array cannot contain duplicate elements.' );\r\n                let streams = symbols.map( symbol => symbol.toLowerCase() + '@kline_' + interval );\r\n                subscription = futuresSubscribe( streams, callback, { reconnect } );\r\n            } else {\r\n                let symbol = symbols.toLowerCase();\r\n                subscription = futuresSubscribeSingle( symbol + '@kline_' + interval, callback, { reconnect } );\r\n            }\r\n            return subscription.endpoint;\r\n        },\r\n\r\n        // Delivery WebSocket Functions:\r\n        /**\r\n         * Subscribe to a single delivery websocket\r\n         * @param {string} url - the delivery websocket endpoint\r\n         * @param {function} callback - optional execution callback\r\n         * @param {object} params - Optional reconnect {boolean} (whether to reconnect on disconnect), openCallback {function}, id {string}\r\n         * @return {WebSocket} the websocket reference\r\n         */\r\n        deliverySubscribeSingle: function ( url, callback, params = {} ) {\r\n            return deliverySubscribeSingle( url, callback, params );\r\n        },\r\n\r\n        /**\r\n         * Subscribe to a combined delivery websocket\r\n         * @param {string} streams - the list of websocket endpoints to connect to\r\n         * @param {function} callback - optional execution callback\r\n         * @param {object} params - Optional reconnect {boolean} (whether to reconnect on disconnect), openCallback {function}, id {string}\r\n         * @return {WebSocket} the websocket reference\r\n         */\r\n        deliverySubscribe: function ( streams, callback, params = {} ) {\r\n            return deliverySubscribe( streams, callback, params );\r\n        },\r\n\r\n        /**\r\n         * Returns the known delivery websockets subscriptions\r\n         * @return {array} array of delivery websocket subscriptions\r\n         */\r\n        deliverySubscriptions: function() {\r\n            return Binance.deliverySubscriptions;\r\n        },\r\n\r\n        /**\r\n         * Terminates a delivery websocket\r\n         * @param {string} endpoint - the string associated with the endpoint\r\n         * @return {undefined}\r\n         */\r\n        deliveryTerminate: function ( endpoint ) {\r\n            if ( Binance.options.verbose ) Binance.options.log( 'Delivery WebSocket terminating:', endpoint );\r\n            return deliveryTerminate( endpoint );\r\n        },\r\n\r\n        /**\r\n         * Delivery WebSocket aggregated trades\r\n         * @param {array/string} symbols - an array or string of symbols to query\r\n         * @param {function} callback - callback function\r\n         * @return {string} the websocket endpoint\r\n         */\r\n        deliveryAggTradeStream: function deliveryAggTradeStream( symbols, callback ) {\r\n            let reconnect = () => {\r\n                if ( Binance.options.reconnect ) deliveryAggTradeStream( symbols, callback );\r\n            };\r\n            let subscription, cleanCallback = data => callback( dAggTradeConvertData( data ) );\r\n            if ( Array.isArray( symbols ) ) {\r\n                if ( !isArrayUnique( symbols ) ) throw Error( 'deliveryAggTradeStream: \"symbols\" cannot contain duplicate elements.' );\r\n                let streams = symbols.map( symbol => symbol.toLowerCase() + '@aggTrade' );\r\n                subscription = deliverySubscribe( streams, cleanCallback, { reconnect } );\r\n            } else {\r\n                let symbol = symbols;\r\n                subscription = deliverySubscribeSingle( symbol.toLowerCase() + '@aggTrade', cleanCallback, { reconnect } );\r\n            }\r\n            return subscription.endpoint;\r\n        },\r\n\r\n        /**\r\n         * Delivery WebSocket mark price\r\n         * @param {symbol} symbol name or false. can also be a callback\r\n         * @param {function} callback - callback function\r\n         * @param {string} speed - 1 second updates. leave blank for default 3 seconds\r\n         * @return {string} the websocket endpoint\r\n         */\r\n        deliveryMarkPriceStream: function dMarkPriceStream( symbol = false, callback = console.log, speed = '@1s' ) {\r\n            if ( typeof symbol == 'function' ) {\r\n                callback = symbol;\r\n                symbol = false;\r\n            }\r\n            let reconnect = () => {\r\n                if ( Binance.options.reconnect ) dMarkPriceStream( symbol, callback );\r\n            };\r\n            const endpoint = symbol ? `${ symbol.toLowerCase() }@markPrice` : '!markPrice@arr'\r\n            let subscription = deliverySubscribeSingle( endpoint + speed, data => callback( dMarkPriceConvertData( data ) ), { reconnect } );\r\n            return subscription.endpoint;\r\n        },\r\n\r\n        /**\r\n         * Delivery WebSocket liquidations stream\r\n         * @param {symbol} symbol name or false. can also be a callback\r\n         * @param {function} callback - callback function\r\n         * @return {string} the websocket endpoint\r\n         */\r\n        deliveryLiquidationStream: function dLiquidationStream( symbol = false, callback = console.log ) {\r\n            if ( typeof symbol == 'function' ) {\r\n                callback = symbol;\r\n                symbol = false;\r\n            }\r\n            let reconnect = () => {\r\n                if ( Binance.options.reconnect ) dLiquidationStream( symbol, callback );\r\n            };\r\n            const endpoint = symbol ? `${ symbol.toLowerCase() }@forceOrder` : '!forceOrder@arr'\r\n            let subscription = deliverySubscribeSingle( endpoint, data => callback( dLiquidationConvertData( data ) ), { reconnect } );\r\n            return subscription.endpoint;\r\n        },\r\n\r\n        /**\r\n         * Delivery WebSocket prevDay ticker\r\n         * @param {symbol} symbol name or false. can also be a callback\r\n         * @param {function} callback - callback function\r\n         * @return {string} the websocket endpoint\r\n         */\r\n        deliveryTickerStream: function dTickerStream( symbol = false, callback = console.log ) {\r\n            if ( typeof symbol == 'function' ) {\r\n                callback = symbol;\r\n                symbol = false;\r\n            }\r\n            let reconnect = () => {\r\n                if ( Binance.options.reconnect ) dTickerStream( symbol, callback );\r\n            };\r\n            const endpoint = symbol ? `${ symbol.toLowerCase() }@ticker` : '!ticker@arr'\r\n            let subscription = deliverySubscribeSingle( endpoint, data => callback( dTickerConvertData( data ) ), { reconnect } );\r\n            return subscription.endpoint;\r\n        },\r\n\r\n        /**\r\n         * Delivery WebSocket miniTicker\r\n         * @param {symbol} symbol name or false. can also be a callback\r\n         * @param {function} callback - callback function\r\n         * @return {string} the websocket endpoint\r\n         */\r\n        deliveryMiniTickerStream: function dMiniTickerStream( symbol = false, callback = console.log ) {\r\n            if ( typeof symbol == 'function' ) {\r\n                callback = symbol;\r\n                symbol = false;\r\n            }\r\n            let reconnect = () => {\r\n                if ( Binance.options.reconnect ) dMiniTickerStream( symbol, callback );\r\n            };\r\n            const endpoint = symbol ? `${ symbol.toLowerCase() }@miniTicker` : '!miniTicker@arr'\r\n            let subscription = deliverySubscribeSingle( endpoint, data => callback( dMiniTickerConvertData( data ) ), { reconnect } );\r\n            return subscription.endpoint;\r\n        },\r\n\r\n        /**\r\n         * Delivery WebSocket bookTicker\r\n         * @param {symbol} symbol name or false. can also be a callback\r\n         * @param {function} callback - callback function\r\n         * @return {string} the websocket endpoint\r\n         */\r\n        deliveryBookTickerStream: function dBookTickerStream( symbol = false, callback = console.log ) {\r\n            if ( typeof symbol == 'function' ) {\r\n                callback = symbol;\r\n                symbol = false;\r\n            }\r\n            let reconnect = () => {\r\n                if ( Binance.options.reconnect ) dBookTickerStream( symbol, callback );\r\n            };\r\n            const endpoint = symbol ? `${ symbol.toLowerCase() }@bookTicker` : '!bookTicker'\r\n            let subscription = deliverySubscribeSingle( endpoint, data => callback( dBookTickerConvertData( data ) ), { reconnect } );\r\n            return subscription.endpoint;\r\n        },\r\n\r\n        /**\r\n         * Websocket delivery klines\r\n         * @param {array/string} symbols - an array or string of symbols to query\r\n         * @param {string} interval - the time interval\r\n         * @param {function} callback - callback function\r\n         * @param {int} limit - maximum results, no more than 1000\r\n         * @return {string} the websocket endpoint\r\n         */\r\n        deliveryChart: async function deliveryChart( symbols, interval, callback, limit = 500 ) {\r\n            let reconnect = () => {\r\n                if ( Binance.options.reconnect ) deliveryChart( symbols, interval, callback, limit );\r\n            };\r\n\r\n            let deliveryChartInit = symbol => {\r\n                if ( typeof Binance.deliveryMeta[symbol] === 'undefined' ) Binance.deliveryMeta[symbol] = {};\r\n                if ( typeof Binance.deliveryMeta[symbol][interval] === 'undefined' ) Binance.deliveryMeta[symbol][interval] = {};\r\n                if ( typeof Binance.deliveryTicks[symbol] === 'undefined' ) Binance.deliveryTicks[symbol] = {};\r\n                if ( typeof Binance.deliveryTicks[symbol][interval] === 'undefined' ) Binance.deliveryTicks[symbol][interval] = {};\r\n                if ( typeof Binance.deliveryRealtime[symbol] === 'undefined' ) Binance.deliveryRealtime[symbol] = {};\r\n                if ( typeof Binance.deliveryRealtime[symbol][interval] === 'undefined' ) Binance.deliveryRealtime[symbol][interval] = {};\r\n                if ( typeof Binance.deliveryKlineQueue[symbol] === 'undefined' ) Binance.deliveryKlineQueue[symbol] = {};\r\n                if ( typeof Binance.deliveryKlineQueue[symbol][interval] === 'undefined' ) Binance.deliveryKlineQueue[symbol][interval] = [];\r\n                Binance.deliveryMeta[symbol][interval].timestamp = 0;\r\n            }\r\n\r\n            let handleDeliveryKlineStream = kline => {\r\n                let symbol = kline.s, interval = kline.k.i;\r\n                if ( !Binance.deliveryMeta[symbol][interval].timestamp ) {\r\n                    if ( typeof ( Binance.deliveryKlineQueue[symbol][interval] ) !== 'undefined' && kline !== null ) {\r\n                        Binance.deliveryKlineQueue[symbol][interval].push( kline );\r\n                    }\r\n                } else {\r\n                    //Binance.options.log('futures klines at ' + kline.k.t);\r\n                    deliveryKlineHandler( symbol, kline );\r\n                    if ( callback ) callback( symbol, interval, deliveryKlineConcat( symbol, interval ) );\r\n                }\r\n            };\r\n\r\n            let getDeliveryKlineSnapshot = async ( symbol, limit = 500 ) => {\r\n                let data = await promiseRequest( 'v1/klines', { symbol, interval, limit }, { base:fapi } );\r\n                deliveryKlineData( symbol, interval, data );\r\n                //Binance.options.log('/delivery klines at ' + Binance.deliveryMeta[symbol][interval].timestamp);\r\n                if ( typeof Binance.deliveryKlineQueue[symbol][interval] !== 'undefined' ) {\r\n                    for ( let kline of Binance.deliveryKlineQueue[symbol][interval] ) deliveryKlineHandler( symbol, kline, Binance.deliveryMeta[symbol][interval].timestamp );\r\n                    delete Binance.deliveryKlineQueue[symbol][interval];\r\n                }\r\n                if ( callback ) callback( symbol, interval, deliveryKlineConcat( symbol, interval ) );\r\n            };\r\n\r\n            let subscription;\r\n            if ( Array.isArray( symbols ) ) {\r\n                if ( !isArrayUnique( symbols ) ) throw Error( 'deliveryChart: \"symbols\" array cannot contain duplicate elements.' );\r\n                symbols.forEach( deliveryChartInit );\r\n                let streams = symbols.map( symbol => `${ symbol.toLowerCase() }@kline_${ interval }` );\r\n                subscription = deliverySubscribe( streams, handleDeliveryKlineStream, reconnect );\r\n                symbols.forEach( element => getDeliveryKlineSnapshot( element, limit ) );\r\n            } else {\r\n                let symbol = symbols;\r\n                deliveryChartInit( symbol );\r\n                subscription = deliverySubscribeSingle( symbol.toLowerCase() + '@kline_' + interval, handleDeliveryKlineStream, reconnect );\r\n                getDeliveryKlineSnapshot( symbol, limit );\r\n            }\r\n            return subscription.endpoint;\r\n        },\r\n\r\n        /**\r\n         * Websocket delivery candlesticks\r\n         * @param {array/string} symbols - an array or string of symbols to query\r\n         * @param {string} interval - the time interval\r\n         * @param {function} callback - callback function\r\n         * @return {string} the websocket endpoint\r\n         */\r\n        deliveryCandlesticks: function deliveryCandlesticks( symbols, interval, callback ) {\r\n            let reconnect = () => {\r\n                if ( Binance.options.reconnect ) deliveryCandlesticks( symbols, interval, callback );\r\n            };\r\n            let subscription;\r\n            if ( Array.isArray( symbols ) ) {\r\n                if ( !isArrayUnique( symbols ) ) throw Error( 'deliveryCandlesticks: \"symbols\" array cannot contain duplicate elements.' );\r\n                let streams = symbols.map( symbol => symbol.toLowerCase() + '@kline_' + interval );\r\n                subscription = deliverySubscribe( streams, callback, { reconnect } );\r\n            } else {\r\n                let symbol = symbols.toLowerCase();\r\n                subscription = deliverySubscribeSingle( symbol + '@kline_' + interval, callback, { reconnect } );\r\n            }\r\n            return subscription.endpoint;\r\n        },\r\n\r\n        websockets: {\r\n            /**\r\n             * Userdata websockets function\r\n             * @param {function} callback - the callback function\r\n             * @param {function} execution_callback - optional execution callback\r\n             * @param {function} subscribed_callback - subscription callback\r\n             * @param {function} list_status_callback - status callback\r\n             * @return {undefined}\r\n             */\r\n            userData: function userData( callback, execution_callback = false, subscribed_callback = false, list_status_callback = false ) {\r\n                let reconnect = () => {\r\n                    if ( Binance.options.reconnect ) userData( callback, execution_callback, subscribed_callback );\r\n                };\r\n                apiRequest( base + 'v3/userDataStream', {}, function ( error, response ) {\r\n                    Binance.options.listenKey = response.listenKey;\r\n                    setTimeout( function userDataKeepAlive() { // keepalive\r\n                        try {\r\n                            apiRequest( base + 'v3/userDataStream?listenKey=' + Binance.options.listenKey, {}, function ( err ) {\r\n                                if ( err ) setTimeout( userDataKeepAlive, 60000 ); // retry in 1 minute\r\n                                else setTimeout( userDataKeepAlive, 60 * 30 * 1000 ); // 30 minute keepalive\r\n                            }, 'PUT' );\r\n                        } catch ( error ) {\r\n                            setTimeout( userDataKeepAlive, 60000 ); // retry in 1 minute\r\n                        }\r\n                    }, 60 * 30 * 1000 ); // 30 minute keepalive\r\n                    Binance.options.balance_callback = callback;\r\n                    Binance.options.execution_callback = execution_callback;\r\n                    Binance.options.list_status_callback = list_status_callback;\r\n                    const subscription = subscribe( Binance.options.listenKey, userDataHandler, reconnect );\r\n                    if ( subscribed_callback ) subscribed_callback( subscription.endpoint );\r\n                }, 'POST' );\r\n            },\r\n\r\n            /**\r\n             * Margin Userdata websockets function\r\n             * @param {function} callback - the callback function\r\n             * @param {function} execution_callback - optional execution callback\r\n             * @param {function} subscribed_callback - subscription callback\r\n             * @param {function} list_status_callback - status callback\r\n             * @return {undefined}\r\n             */\r\n            userMarginData: function userMarginData( callback, execution_callback = false, subscribed_callback = false, list_status_callback = false ) {\r\n                let reconnect = () => {\r\n                    if ( Binance.options.reconnect ) userMarginData( callback, execution_callback, subscribed_callback );\r\n                };\r\n                apiRequest( sapi + 'v1/userDataStream', {}, function ( error, response ) {\r\n                    Binance.options.listenMarginKey = response.listenKey;\r\n                    setTimeout( function userDataKeepAlive() { // keepalive\r\n                        try {\r\n                            apiRequest( sapi + 'v1/userDataStream?listenKey=' + Binance.options.listenMarginKey, {}, function ( err ) {\r\n                                if ( err ) setTimeout( userDataKeepAlive, 60000 ); // retry in 1 minute\r\n                                else setTimeout( userDataKeepAlive, 60 * 30 * 1000 ); // 30 minute keepalive\r\n                            }, 'PUT' );\r\n                        } catch ( error ) {\r\n                            setTimeout( userDataKeepAlive, 60000 ); // retry in 1 minute\r\n                        }\r\n                    }, 60 * 30 * 1000 ); // 30 minute keepalive\r\n                    Binance.options.margin_balance_callback = callback;\r\n                    Binance.options.margin_execution_callback = execution_callback;\r\n                    Binance.options.margin_list_status_callback = list_status_callback;\r\n                    const subscription = subscribe( Binance.options.listenMarginKey, userMarginDataHandler, reconnect );\r\n                    if ( subscribed_callback ) subscribed_callback( subscription.endpoint );\r\n                }, 'POST' );\r\n            },\r\n\r\n            /**\r\n             * Future Userdata websockets function\r\n             * @param {function} margin_call_callback\r\n             * @param {function} account_update_callback\r\n             * @param {function} order_update_callback\r\n             * @param {Function} subscribed_callback - subscription callback\r\n             */\r\n            userFutureData: function userFutureData( margin_call_callback, account_update_callback = undefined, order_update_callback = undefined, subscribed_callback = undefined, account_config_update_callback = undefined ) {\r\n                const url = ( Binance.options.test ) ? fapiTest : fapi;\r\n\r\n                let reconnect = () => {\r\n                    if ( Binance.options.reconnect ) userFutureData( margin_call_callback, account_update_callback, order_update_callback, subscribed_callback )\r\n                }\r\n\r\n                apiRequest( url + 'v1/listenKey', {}, function ( error, response ) {\r\n                    Binance.options.listenFutureKey = response.listenKey;\r\n                    setTimeout( function userDataKeepAlive() { // keepalive\r\n                        try {\r\n                            apiRequest( url + 'v1/listenKey?listenKey=' + Binance.options.listenFutureKey, {}, function ( err ) {\r\n                                if ( err ) setTimeout( userDataKeepAlive, 60000 ); // retry in 1 minute\r\n                                else setTimeout( userDataKeepAlive, 60 * 30 * 1000 ); // 30 minute keepalive\r\n                            }, 'PUT' );\r\n                        } catch ( error ) {\r\n                            setTimeout( userDataKeepAlive, 60000 ); // retry in 1 minute\r\n                        }\r\n                    }, 60 * 30 * 1000 ); // 30 minute keepalive\r\n                    Binance.options.future_margin_call_callback = margin_call_callback;\r\n                    Binance.options.future_account_update_callback = account_update_callback;\r\n                    Binance.options.future_account_config_update_callback = account_config_update_callback;\r\n                    Binance.options.future_order_update_callback = order_update_callback;\r\n                    const subscription = futuresSubscribe( Binance.options.listenFutureKey, userFutureDataHandler, { reconnect } );\r\n                    if ( subscribed_callback ) subscribed_callback( subscription.endpoint );\r\n                }, 'POST' );\r\n            },\r\n\r\n            /**\r\n           * Delivery Userdata websockets function\r\n           * @param {function} margin_call_callback\r\n           * @param {function} account_update_callback\r\n           * @param {function} order_update_callback\r\n           * @param {Function} subscribed_callback - subscription callback\r\n           */\r\n            userDeliveryData: function userDeliveryData(\r\n                margin_call_callback,\r\n                account_update_callback = undefined,\r\n                order_update_callback = undefined,\r\n                subscribed_callback = undefined\r\n            ) {\r\n                const url = Binance.options.test ? dapiTest : dapi;\r\n\r\n                let reconnect = () => {\r\n                    if ( Binance.options.reconnect )\r\n                        userDeliveryData(\r\n                            margin_call_callback,\r\n                            account_update_callback,\r\n                            order_update_callback,\r\n                            subscribed_callback\r\n                        );\r\n                };\r\n\r\n                apiRequest(\r\n                    url + \"v1/listenKey\",\r\n                    {},\r\n                    function ( error, response ) {\r\n                        Binance.options.listenDeliveryKey = response.listenKey;\r\n                        setTimeout( function userDataKeepAlive() {\r\n                            // keepalive\r\n                            try {\r\n                                apiRequest(\r\n                                    url +\r\n                        \"v1/listenKey?listenKey=\" +\r\n                        Binance.options.listenDeliveryKey,\r\n                                    {},\r\n                                    function ( err ) {\r\n                                        if ( err ) setTimeout( userDataKeepAlive, 60000 );\r\n                                        // retry in 1 minute\r\n                                        else setTimeout( userDataKeepAlive, 60 * 30 * 1000 ); // 30 minute keepalive\r\n                                    },\r\n                                    \"PUT\"\r\n                                );\r\n                            } catch ( error ) {\r\n                                setTimeout( userDataKeepAlive, 60000 ); // retry in 1 minute\r\n                            }\r\n                        }, 60 * 30 * 1000 ); // 30 minute keepalive\r\n                        Binance.options.delivery_margin_call_callback = margin_call_callback;\r\n                        Binance.options.delivery_account_update_callback = account_update_callback;\r\n                        Binance.options.delivery_order_update_callback = order_update_callback;\r\n                        const subscription = deliverySubscribe(\r\n                            Binance.options.listenDeliveryKey,\r\n                            userDeliveryDataHandler,\r\n                            { reconnect }\r\n                        );\r\n                        if ( subscribed_callback ) subscribed_callback( subscription.endpoint );\r\n                    },\r\n                    \"POST\"\r\n                );\r\n            },\r\n\r\n            /**\r\n             * Subscribe to a generic websocket\r\n             * @param {string} url - the websocket endpoint\r\n             * @param {function} callback - optional execution callback\r\n             * @param {boolean} reconnect - subscription callback\r\n             * @return {WebSocket} the websocket reference\r\n             */\r\n            subscribe: function ( url, callback, reconnect = false ) {\r\n                return subscribe( url, callback, reconnect );\r\n            },\r\n\r\n            /**\r\n             * Subscribe to a generic combined websocket\r\n             * @param {string} url - the websocket endpoint\r\n             * @param {function} callback - optional execution callback\r\n             * @param {boolean} reconnect - subscription callback\r\n             * @return {WebSocket} the websocket reference\r\n             */\r\n            subscribeCombined: function ( url, callback, reconnect = false ) {\r\n                return subscribeCombined( url, callback, reconnect );\r\n            },\r\n\r\n            /**\r\n             * Returns the known websockets subscriptions\r\n             * @return {array} array of web socket subscriptions\r\n             */\r\n            subscriptions: function() {\r\n                return Binance.subscriptions;\r\n            },\r\n\r\n            /**\r\n             * Terminates a web socket\r\n             * @param {string} endpoint - the string associated with the endpoint\r\n             * @return {undefined}\r\n             */\r\n            terminate: function ( endpoint ) {\r\n                if ( Binance.options.verbose ) Binance.options.log( 'WebSocket terminating:', endpoint );\r\n                return terminate( endpoint );\r\n            },\r\n\r\n            /**\r\n             * Websocket depth chart\r\n             * @param {array/string} symbols - an array or string of symbols to query\r\n             * @param {function} callback - callback function\r\n             * @return {string} the websocket endpoint\r\n             */\r\n            depth: function depth ( symbols, callback ) {\r\n                let reconnect = () => {\r\n                    if ( Binance.options.reconnect ) depth( symbols, callback );\r\n                };\r\n                let subscription;\r\n                if ( Array.isArray( symbols ) ) {\r\n                    if ( !isArrayUnique( symbols ) ) throw Error( 'depth: \"symbols\" cannot contain duplicate elements.' );\r\n                    let streams = symbols.map( function ( symbol ) {\r\n                        return symbol.toLowerCase() + '@depth@100ms';\r\n                    } );\r\n                    subscription = subscribeCombined( streams, callback, reconnect );\r\n                } else {\r\n                    let symbol = symbols;\r\n                    subscription = subscribe( symbol.toLowerCase() + '@depth@100ms', callback, reconnect );\r\n                }\r\n                return subscription.endpoint;\r\n            },\r\n\r\n            /**\r\n             * Websocket depth cache\r\n             * @param {array/string} symbols - an array or string of symbols to query\r\n             * @param {function} callback - callback function\r\n             * @param {int} limit - the number of entries\r\n             * @return {string} the websocket endpoint\r\n             */\r\n            depthCache: function depthCacheFunction( symbols, callback, limit = 500 ) {\r\n                let reconnect = () => {\r\n                    if ( Binance.options.reconnect ) depthCacheFunction( symbols, callback, limit );\r\n                };\r\n\r\n                let symbolDepthInit = symbol => {\r\n                    if ( typeof Binance.depthCacheContext[symbol] === 'undefined' ) Binance.depthCacheContext[symbol] = {};\r\n                    let context = Binance.depthCacheContext[symbol];\r\n                    context.snapshotUpdateId = null;\r\n                    context.lastEventUpdateId = null;\r\n                    context.messageQueue = [];\r\n                    Binance.depthCache[symbol] = { bids: {}, asks: {} };\r\n                };\r\n\r\n                let assignEndpointIdToContext = ( symbol, endpointId ) => {\r\n                    if ( Binance.depthCacheContext[symbol] ) {\r\n                        let context = Binance.depthCacheContext[symbol];\r\n                        context.endpointId = endpointId;\r\n                    }\r\n                };\r\n\r\n                let handleDepthStreamData = depth => {\r\n                    let symbol = depth.s;\r\n                    let context = Binance.depthCacheContext[symbol];\r\n                    if ( context.messageQueue && !context.snapshotUpdateId ) {\r\n                        context.messageQueue.push( depth );\r\n                    } else {\r\n                        try {\r\n                            depthHandler( depth );\r\n                        } catch ( err ) {\r\n                            return terminate( context.endpointId, true );\r\n                        }\r\n                        if ( callback ) callback( symbol, Binance.depthCache[symbol], context );\r\n                    }\r\n                };\r\n\r\n                let getSymbolDepthSnapshot = ( symbol, cb ) => {\r\n                    publicRequest( base + 'v3/depth', { symbol: symbol, limit: limit }, function ( error, json ) {\r\n                        if ( error ) {\r\n                            return cb( error, null );\r\n                        }\r\n                        // Store symbol next use\r\n                        json.symb = symbol;\r\n                        cb( null, json )\r\n                    } );\r\n                };\r\n\r\n                let updateSymbolDepthCache = json => {\r\n                    // Get previous store symbol\r\n                    let symbol = json.symb;\r\n                    // Initialize depth cache from snapshot\r\n                    Binance.depthCache[symbol] = depthData( json );\r\n                    // Prepare depth cache context\r\n                    let context = Binance.depthCacheContext[symbol];\r\n                    context.snapshotUpdateId = json.lastUpdateId;\r\n                    context.messageQueue = context.messageQueue.filter( depth => depth.u > context.snapshotUpdateId );\r\n                    // Process any pending depth messages\r\n                    for ( let depth of context.messageQueue ) {\r\n                        /* Although sync errors shouldn't ever happen here, we catch and swallow them anyway\r\n                         just in case. The stream handler function above will deal with broken caches. */\r\n                        try {\r\n                            depthHandler( depth );\r\n                        } catch ( err ) {\r\n                            // Do nothing\r\n                        }\r\n                    }\r\n                    delete context.messageQueue;\r\n                    if ( callback ) callback( symbol, Binance.depthCache[symbol] );\r\n                };\r\n\r\n                /* If an array of symbols are sent we use a combined stream connection rather.\r\n                 This is transparent to the developer, and results in a single socket connection.\r\n                 This essentially eliminates \"unexpected response\" errors when subscribing to a lot of data. */\r\n                let subscription;\r\n                if ( Array.isArray( symbols ) ) {\r\n                    if ( !isArrayUnique( symbols ) ) throw Error( 'depthCache: \"symbols\" cannot contain duplicate elements.' );\r\n                    symbols.forEach( symbolDepthInit );\r\n                    let streams = symbols.map( function ( symbol ) {\r\n                        return symbol.toLowerCase() + `@depth@100ms`;\r\n                    } );\r\n                    subscription = subscribeCombined( streams, handleDepthStreamData, reconnect, function () {\r\n                        async.mapLimit( symbols, 50, getSymbolDepthSnapshot, ( err, results ) => {\r\n                            if ( err ) throw err;\r\n                            results.forEach( updateSymbolDepthCache );\r\n                        } );\r\n                    } );\r\n                    symbols.forEach( s => assignEndpointIdToContext( s, subscription.endpoint ) );\r\n                } else {\r\n                    let symbol = symbols;\r\n                    symbolDepthInit( symbol );\r\n                    subscription = subscribe( symbol.toLowerCase() + `@depth@100ms`, handleDepthStreamData, reconnect, function () {\r\n                        async.mapLimit( [ symbol ], 1, getSymbolDepthSnapshot, ( err, results ) => {\r\n                            if ( err ) throw err;\r\n                            results.forEach( updateSymbolDepthCache );\r\n                        } );\r\n                    } );\r\n                    assignEndpointIdToContext( symbol, subscription.endpoint );\r\n                }\r\n                return subscription.endpoint;\r\n            },\r\n\r\n            /**\r\n             * Clear Websocket depth cache\r\n             * @param {String|Array} symbols   - a single symbol, or an array of symbols, to clear the cache of\r\n             * @returns {void}\r\n             */\r\n            clearDepthCache( symbols ) {\r\n                const symbolsArr = Array.isArray( symbols ) ? symbols : [ symbols ];\r\n                symbolsArr.forEach( thisSymbol => {\r\n                    delete Binance.depthCache[thisSymbol];\r\n                } );\r\n            },\r\n\r\n            /**\r\n             * Websocket staggered depth cache\r\n             * @param {array/string} symbols - an array of symbols to query\r\n             * @param {function} callback - callback function\r\n             * @param {int} limit - the number of entries\r\n             * @param {int} stagger - ms between each depth cache\r\n             * @return {Promise} the websocket endpoint\r\n             */\r\n            depthCacheStaggered: function ( symbols, callback, limit = 100, stagger = 200 ) {\r\n                if ( !Array.isArray( symbols ) ) symbols = [ symbols ];\r\n                let chain = null;\r\n\r\n                symbols.forEach( symbol => {\r\n                    let promise = () => new Promise( resolve => {\r\n                        this.depthCache( symbol, callback, limit );\r\n                        setTimeout( resolve, stagger );\r\n                    } );\r\n                    chain = chain ? chain.then( promise ) : promise();\r\n                } );\r\n\r\n                return chain;\r\n            },\r\n\r\n            /**\r\n             * Websocket aggregated trades\r\n             * @param {array/string} symbols - an array or string of symbols to query\r\n             * @param {function} callback - callback function\r\n             * @return {string} the websocket endpoint\r\n             */\r\n            aggTrades: function trades( symbols, callback ) {\r\n                let reconnect = () => {\r\n                    if ( Binance.options.reconnect ) trades( symbols, callback );\r\n                };\r\n                let subscription;\r\n                if ( Array.isArray( symbols ) ) {\r\n                    if ( !isArrayUnique( symbols ) ) throw Error( 'trades: \"symbols\" cannot contain duplicate elements.' );\r\n                    let streams = symbols.map( function ( symbol ) {\r\n                        return symbol.toLowerCase() + '@aggTrade';\r\n                    } );\r\n                    subscription = subscribeCombined( streams, callback, reconnect );\r\n                } else {\r\n                    let symbol = symbols;\r\n                    subscription = subscribe( symbol.toLowerCase() + '@aggTrade', callback, reconnect );\r\n                }\r\n                return subscription.endpoint;\r\n            },\r\n\r\n            /**\r\n            * Websocket raw trades\r\n            * @param {array/string} symbols - an array or string of symbols to query\r\n            * @param {function} callback - callback function\r\n            * @return {string} the websocket endpoint\r\n            */\r\n            trades: function trades( symbols, callback ) {\r\n                let reconnect = () => {\r\n                    if ( Binance.options.reconnect ) trades( symbols, callback );\r\n                };\r\n\r\n                let subscription;\r\n                if ( Array.isArray( symbols ) ) {\r\n                    if ( !isArrayUnique( symbols ) ) throw Error( 'trades: \"symbols\" cannot contain duplicate elements.' );\r\n                    let streams = symbols.map( function ( symbol ) {\r\n                        return symbol.toLowerCase() + '@trade';\r\n                    } );\r\n                    subscription = subscribeCombined( streams, callback, reconnect );\r\n                } else {\r\n                    let symbol = symbols;\r\n                    subscription = subscribe( symbol.toLowerCase() + '@trade', callback, reconnect );\r\n                }\r\n                return subscription.endpoint;\r\n            },\r\n\r\n            /**\r\n             * Websocket klines\r\n             * @param {array/string} symbols - an array or string of symbols to query\r\n             * @param {string} interval - the time interval\r\n             * @param {function} callback - callback function\r\n             * @param {int} limit - maximum results, no more than 1000\r\n             * @return {string} the websocket endpoint\r\n             */\r\n            chart: function chart( symbols, interval, callback, limit = 500 ) {\r\n                let reconnect = () => {\r\n                    if ( Binance.options.reconnect ) chart( symbols, interval, callback, limit );\r\n                };\r\n\r\n                let symbolChartInit = symbol => {\r\n                    if ( typeof Binance.info[symbol] === 'undefined' ) Binance.info[symbol] = {};\r\n                    if ( typeof Binance.info[symbol][interval] === 'undefined' ) Binance.info[symbol][interval] = {};\r\n                    if ( typeof Binance.ohlc[symbol] === 'undefined' ) Binance.ohlc[symbol] = {};\r\n                    if ( typeof Binance.ohlc[symbol][interval] === 'undefined' ) Binance.ohlc[symbol][interval] = {};\r\n                    if ( typeof Binance.ohlcLatest[symbol] === 'undefined' ) Binance.ohlcLatest[symbol] = {};\r\n                    if ( typeof Binance.ohlcLatest[symbol][interval] === 'undefined' ) Binance.ohlcLatest[symbol][interval] = {};\r\n                    if ( typeof Binance.klineQueue[symbol] === 'undefined' ) Binance.klineQueue[symbol] = {};\r\n                    if ( typeof Binance.klineQueue[symbol][interval] === 'undefined' ) Binance.klineQueue[symbol][interval] = [];\r\n                    Binance.info[symbol][interval].timestamp = 0;\r\n                }\r\n\r\n                let handleKlineStreamData = kline => {\r\n                    let symbol = kline.s, interval = kline.k.i;\r\n                    if ( !Binance.info[symbol][interval].timestamp ) {\r\n                        if ( typeof ( Binance.klineQueue[symbol][interval] ) !== 'undefined' && kline !== null ) {\r\n                            Binance.klineQueue[symbol][interval].push( kline );\r\n                        }\r\n                    } else {\r\n                        //Binance.options.log('@klines at ' + kline.k.t);\r\n                        klineHandler( symbol, kline );\r\n                        if ( callback ) callback( symbol, interval, klineConcat( symbol, interval ) );\r\n                    }\r\n                };\r\n\r\n                let getSymbolKlineSnapshot = ( symbol, limit = 500 ) => {\r\n                    publicRequest( base + 'v3/klines', { symbol: symbol, interval: interval, limit: limit }, function ( error, data ) {\r\n                        klineData( symbol, interval, data );\r\n                        //Binance.options.log('/klines at ' + Binance.info[symbol][interval].timestamp);\r\n                        if ( typeof Binance.klineQueue[symbol][interval] !== 'undefined' ) {\r\n                            for ( let kline of Binance.klineQueue[symbol][interval] ) klineHandler( symbol, kline, Binance.info[symbol][interval].timestamp );\r\n                            delete Binance.klineQueue[symbol][interval];\r\n                        }\r\n                        if ( callback ) callback( symbol, interval, klineConcat( symbol, interval ) );\r\n                    } );\r\n                };\r\n\r\n                let subscription;\r\n                if ( Array.isArray( symbols ) ) {\r\n                    if ( !isArrayUnique( symbols ) ) throw Error( 'chart: \"symbols\" cannot contain duplicate elements.' );\r\n                    symbols.forEach( symbolChartInit );\r\n                    let streams = symbols.map( function ( symbol ) {\r\n                        return symbol.toLowerCase() + '@kline_' + interval;\r\n                    } );\r\n                    subscription = subscribeCombined( streams, handleKlineStreamData, reconnect );\r\n                    symbols.forEach( element => getSymbolKlineSnapshot( element, limit ) );\r\n                } else {\r\n                    let symbol = symbols;\r\n                    symbolChartInit( symbol );\r\n                    subscription = subscribe( symbol.toLowerCase() + '@kline_' + interval, handleKlineStreamData, reconnect );\r\n                    getSymbolKlineSnapshot( symbol, limit );\r\n                }\r\n                return subscription.endpoint;\r\n            },\r\n\r\n            /**\r\n             * Websocket candle sticks\r\n             * @param {array/string} symbols - an array or string of symbols to query\r\n             * @param {string} interval - the time interval\r\n             * @param {function} callback - callback function\r\n             * @return {string} the websocket endpoint\r\n             */\r\n            candlesticks: function candlesticks( symbols, interval, callback ) {\r\n                let reconnect = () => {\r\n                    if ( Binance.options.reconnect ) candlesticks( symbols, interval, callback );\r\n                };\r\n\r\n                /* If an array of symbols are sent we use a combined stream connection rather.\r\n                 This is transparent to the developer, and results in a single socket connection.\r\n                 This essentially eliminates \"unexpected response\" errors when subscribing to a lot of data. */\r\n                let subscription;\r\n                if ( Array.isArray( symbols ) ) {\r\n                    if ( !isArrayUnique( symbols ) ) throw Error( 'candlesticks: \"symbols\" cannot contain duplicate elements.' );\r\n                    let streams = symbols.map( function ( symbol ) {\r\n                        return symbol.toLowerCase() + '@kline_' + interval;\r\n                    } );\r\n                    subscription = subscribeCombined( streams, callback, reconnect );\r\n                } else {\r\n                    let symbol = symbols.toLowerCase();\r\n                    subscription = subscribe( symbol + '@kline_' + interval, callback, reconnect );\r\n                }\r\n                return subscription.endpoint;\r\n            },\r\n\r\n            /**\r\n             * Websocket mini ticker\r\n             * @param {function} callback - callback function\r\n             * @return {string} the websocket endpoint\r\n             */\r\n            miniTicker: function miniTicker( callback ) {\r\n                let reconnect = () => {\r\n                    if ( Binance.options.reconnect ) miniTicker( callback );\r\n                };\r\n                let subscription = subscribe( '!miniTicker@arr', function ( data ) {\r\n                    let markets = {};\r\n                    for ( let obj of data ) {\r\n                        markets[obj.s] = {\r\n                            close: obj.c,\r\n                            open: obj.o,\r\n                            high: obj.h,\r\n                            low: obj.l,\r\n                            volume: obj.v,\r\n                            quoteVolume: obj.q,\r\n                            eventTime: obj.E\r\n                        };\r\n                    }\r\n                    callback( markets );\r\n                }, reconnect );\r\n                return subscription.endpoint;\r\n            },\r\n\r\n            /**\r\n             * Spot WebSocket bookTicker (bid/ask quotes including price & amount)\r\n             * @param {symbol} symbol name or false. can also be a callback\r\n             * @param {function} callback - callback function\r\n             * @return {string} the websocket endpoint\r\n             */\r\n            bookTickers: function bookTickerStream( symbol = false, callback = console.log ) {\r\n                if ( typeof symbol == 'function' ) {\r\n                    callback = symbol;\r\n                    symbol = false;\r\n                }\r\n                let reconnect = () => {\r\n                    if ( Binance.options.reconnect ) bookTickerStream( symbol, callback );\r\n                };\r\n                const endpoint = symbol ? `${ symbol.toLowerCase() }@bookTicker` : '!bookTicker'\r\n                let subscription = subscribe( endpoint, data => callback( fBookTickerConvertData( data ) ), reconnect );\r\n                return subscription.endpoint;\r\n            },\r\n\r\n            /**\r\n             * Websocket prevday percentage\r\n             * @param {array/string} symbols - an array or string of symbols to query\r\n             * @param {function} callback - callback function\r\n             * @param {boolean} singleCallback - avoid call one callback for each symbol in data array\r\n             * @return {string} the websocket endpoint\r\n             */\r\n            prevDay: function prevDay( symbols, callback, singleCallback ) {\r\n                let reconnect = () => {\r\n                    if ( Binance.options.reconnect ) prevDay( symbols, callback, singleCallback );\r\n                };\r\n\r\n                let subscription;\r\n                // Combine stream for array of symbols\r\n                if ( Array.isArray( symbols ) ) {\r\n                    if ( !isArrayUnique( symbols ) ) throw Error( 'prevDay: \"symbols\" cannot contain duplicate elements.' );\r\n                    let streams = symbols.map( function ( symbol ) {\r\n                        return symbol.toLowerCase() + '@ticker';\r\n                    } );\r\n                    subscription = subscribeCombined( streams, function ( data ) {\r\n                        prevDayStreamHandler( data, callback );\r\n                    }, reconnect );\r\n                    // Raw stream for  a single symbol\r\n                } else if ( symbols ) {\r\n                    let symbol = symbols;\r\n                    subscription = subscribe( symbol.toLowerCase() + '@ticker', function ( data ) {\r\n                        prevDayStreamHandler( data, callback );\r\n                    }, reconnect );\r\n                    // Raw stream of all listed symbols\r\n                } else {\r\n                    subscription = subscribe( '!ticker@arr', function ( data ) {\r\n                        if ( singleCallback ) {\r\n                            prevDayStreamHandler( data, callback );\r\n                        } else {\r\n                            for ( let line of data ) {\r\n                                prevDayStreamHandler( line, callback );\r\n                            }\r\n                        }\r\n                    }, reconnect );\r\n                }\r\n                return subscription.endpoint;\r\n            }\r\n        }\r\n    };\r\n}\r\nmodule.exports = api;\r\n//https://github.com/binance-exchange/binance-official-api-docs\r\n"]},"metadata":{},"sourceType":"script"}