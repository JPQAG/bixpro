{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/James Price/Documents/VS Code/bixpro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/James Price/Documents/VS Code/bixpro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/James Price/Documents/VS Code/bixpro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Row,Col,Card}from'react-bootstrap';import FullCalendar from\"@fullcalendar/react\";import dayGridPlugin from\"@fullcalendar/daygrid\";import interaction from\"@fullcalendar/interaction\";import timeGrid from\"@fullcalendar/timegrid\";import ModuleNotification from'../../components/Widgets/Statistic/Notification';import axios from'../../utils/axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var randomDate=function randomDate(){var date=new Date();var start=new Date(date.getFullYear(),date.getMonth(),1);var end=new Date(date.getFullYear(),date.getMonth()+1,0);return new Date(start.getTime()+Math.random()*(end.getTime()-start.getTime()));};var FullEventCalendar=function FullEventCalendar(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),event=_useState2[0],setEvent=_useState2[1];var getEvent=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('/api/calendar/events');case 2:response=_context.sent;setEvent(response.data.events);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getEvent(){return _ref.apply(this,arguments);};}();useEffect(function(){getEvent();},[]);var head={left:\"prev,next today\",center:\"title\",right:\"dayGridMonth,timeGridWeek,timeGridDay\"};return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{sm:12,children:/*#__PURE__*/_jsx(ModuleNotification,{message:\"For more info please check the components's official documentation\",link:\"https://fullcalendar.io/docs/react\"})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(Card.Title,{as:\"h5\",children:\"Full Calendar\"})}),/*#__PURE__*/_jsx(Card.Body,{className:\"calendar\",children:/*#__PURE__*/_jsx(FullCalendar,{defaultView:\"dayGridMonth\",header:head,editable:true,defaultDate:randomDate(),droppable:true,events:event,plugins:[dayGridPlugin,interaction,timeGrid]})})]})})})]});};export default FullEventCalendar;","map":{"version":3,"sources":["C:/Users/James Price/Documents/VS Code/bixpro/src/views/extensions/FullEventCalendar.js"],"names":["React","useState","useEffect","Row","Col","Card","FullCalendar","dayGridPlugin","interaction","timeGrid","ModuleNotification","axios","randomDate","date","Date","start","getFullYear","getMonth","end","getTime","Math","random","FullEventCalendar","event","setEvent","getEvent","get","response","data","events","head","left","center","right"],"mappings":"yeAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,IAAnB,KAA+B,iBAA/B,CACA,MAAOC,CAAAA,YAAP,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,aAAP,KAA0B,uBAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CAEA,MAAOC,CAAAA,kBAAP,KAA+B,iDAA/B,CACA,MAAOC,CAAAA,KAAP,KAAkB,mBAAlB,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrB,GAAMC,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,EAAb,CACA,GAAMC,CAAAA,KAAK,CAAG,GAAID,CAAAA,IAAJ,CAASD,IAAI,CAACG,WAAL,EAAT,CAA6BH,IAAI,CAACI,QAAL,EAA7B,CAA8C,CAA9C,CAAd,CACA,GAAMC,CAAAA,GAAG,CAAG,GAAIJ,CAAAA,IAAJ,CAASD,IAAI,CAACG,WAAL,EAAT,CAA6BH,IAAI,CAACI,QAAL,GAAkB,CAA/C,CAAkD,CAAlD,CAAZ,CACA,MAAO,IAAIH,CAAAA,IAAJ,CAASC,KAAK,CAACI,OAAN,GAAkBC,IAAI,CAACC,MAAL,IAAiBH,GAAG,CAACC,OAAJ,GAAgBJ,KAAK,CAACI,OAAN,EAAjC,CAA3B,CAAP,CACH,CALD,CAOA,GAAMG,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,eACFrB,QAAQ,CAAC,EAAD,CADN,wCACrBsB,KADqB,eACdC,QADc,eAG5B,GAAMC,CAAAA,QAAQ,0FAAG,sKACUd,CAAAA,KAAK,CAACe,GAAN,CAAU,sBAAV,CADV,QACPC,QADO,eAEbH,QAAQ,CAACG,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAAR,CAFa,sDAAH,kBAARJ,CAAAA,QAAQ,0CAAd,CAKAvB,SAAS,CAAC,UAAM,CACZuB,QAAQ,GACX,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMK,CAAAA,IAAI,CAAG,CACTC,IAAI,CAAE,iBADG,CAETC,MAAM,CAAE,OAFC,CAGTC,KAAK,CAAE,uCAHE,CAAb,CAMA,mBACI,MAAC,KAAD,CAAO,QAAP,yBACI,KAAC,GAAD,wBACI,KAAC,GAAD,EAAK,EAAE,CAAE,EAAT,uBACI,KAAC,kBAAD,EAAoB,OAAO,CAAC,oEAA5B,CAAiG,IAAI,CAAC,oCAAtG,EADJ,EADJ,EADJ,cAMI,KAAC,GAAD,wBACI,KAAC,GAAD,wBACI,MAAC,IAAD,yBACI,KAAC,IAAD,CAAM,MAAN,wBACI,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,IAAf,2BADJ,EADJ,cAII,KAAC,IAAD,CAAM,IAAN,EAAW,SAAS,CAAC,UAArB,uBACI,KAAC,YAAD,EACI,WAAW,CAAC,cADhB,CAEI,MAAM,CAAEH,IAFZ,CAGI,QAAQ,CAAE,IAHd,CAII,WAAW,CAAIlB,UAAU,EAJ7B,CAKI,SAAS,CAAE,IALf,CAMI,MAAM,CAAEW,KANZ,CAOI,OAAO,CAAE,CAAChB,aAAD,CAAgBC,WAAhB,CAA6BC,QAA7B,CAPb,EADJ,EAJJ,GADJ,EADJ,EANJ,GADJ,CA6BH,CA/CD,CAiDA,cAAea,CAAAA,iBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interaction from \"@fullcalendar/interaction\";\r\nimport timeGrid from \"@fullcalendar/timegrid\";\r\n\r\nimport ModuleNotification from '../../components/Widgets/Statistic/Notification';\r\nimport axios from '../../utils/axios';\r\n\r\nconst randomDate = () => {\r\n    const date = new Date();\r\n    const start = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    const end = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r\n};\r\n\r\nconst FullEventCalendar = () => {\r\n    const [event, setEvent] = useState([]);\r\n\r\n    const getEvent = async () => {\r\n        const response = await axios.get('/api/calendar/events');\r\n        setEvent(response.data.events);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getEvent();\r\n    }, [])\r\n\r\n    const head = {\r\n        left: \"prev,next today\",\r\n        center: \"title\",\r\n        right: \"dayGridMonth,timeGridWeek,timeGridDay\"\r\n    };\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col sm={12}>  \r\n                    <ModuleNotification message=\"For more info please check the components's official documentation\" link='https://fullcalendar.io/docs/react' />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as='h5'>Full Calendar</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body className='calendar'>\r\n                            <FullCalendar\r\n                                defaultView=\"dayGridMonth\"\r\n                                header={head}\r\n                                editable={true}\r\n                                defaultDate= { randomDate() }\r\n                                droppable={true}\r\n                                events={event}\r\n                                plugins={[dayGridPlugin, interaction, timeGrid]}\r\n                            />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default FullEventCalendar;"]},"metadata":{},"sourceType":"module"}