{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\James Price\\\\Documents\\\\VS Code\\\\bixpro\\\\src\\\\components\\\\cryptX\\\\tables\\\\React\\\\AllHoldingsTable.js\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\n//IMPORTS\n//Module Imports\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Card, Table, Tab, Nav, Form, InputGroup, FormControl } from 'react-bootstrap';\nimport BTable from 'react-bootstrap/Table';\nimport { useTable, useSortBy, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table';\nimport axios from 'axios';\nimport { CONFIG } from '../../../../config/constant';\nimport dataTable from '../../../../data/FullTableData'; //API Configuration\n///Import for API Keys from Config\n\nconst secretKey = CONFIG.binance.secretKey;\nconst apiKey = CONFIG.binance.apiKey; //Binance API\n\nconst Binance = require('node-binance-api');\n\nconst binance = new Binance().options({\n  APIKEY: apiKey,\n  APISECRET: secretKey\n});\nbinance.options({\n  APIKEY: apiKey,\n  APISECRET: secretKey,\n  useServerTime: true,\n  recvWindow: 5000,\n  // Set a higher recvWindow to increase response timeout\n  verbose: true,\n  // Add extra output when subscribing to WebSockets, etc\n  log: log => {\n    console.log(log); // You can create your own logger here, or disable console output\n  }\n}); //Refactor Data\n\nfunction objectParse(data) {\n  let newData = [];\n\n  for (const prop in data) {\n    newData.push({\n      symbol: prop,\n      quantity: data[prop].available,\n      onOrder: data[prop].onOrder\n    });\n  }\n\n  return newData;\n} //Table Component\n\n\nfunction TableFull({\n  columns,\n  data\n}) {\n  _s();\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setFilter\n  } = useTable({\n    columns,\n    data\n  }, useFilters, useSortBy);\n  const [filterInput, setFilterInput] = useState(\"\");\n\n  const handleFilterChange = e => {\n    const value = e.target.value || undefined;\n    setFilter(\"name\", value);\n    setFilterInput(value);\n  }; // We don't want to render all 2000 rows for this example, so cap\n  // it at 20 for this use case\n\n\n  const firstPageRows = rows;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BTable, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column =>\n          /*#__PURE__*/\n          // Add the sorting props to control sorting. For this example\n          // we can add them into the header props\n          _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"feather icon-arrow-down text-muted float-right mt-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 29\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"feather icon-arrow-up text-muted float-right mt-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 29\n              }, this) : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: firstPageRows.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(TableFull, \"prOEyr/GV8vzaMroyNvw/s48UUY=\", false, function () {\n  return [useTable];\n});\n\n_c = TableFull;\n\nfunction App() {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  const columns = React.useMemo(() => [{\n    Header: 'Security Information',\n    columns: [{\n      Header: 'Quantity Held',\n      accessor: 'available'\n    }, {\n      Header: 'Quantity On Order',\n      accessor: 'onOrder'\n    }]\n  }], []); // const columns = React.useMemo(\n  //   () => dataTable,\n  //   []\n  // )\n\n  const [search, setSearch] = useState('');\n  const [holdings, setHoldings] = useState('');\n  const [coins, setCoins] = useState([]);\n  const url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false';\n  const filteredCoins = coins.filter(coin => coin.name.toLowerCase().includes(search.toLowerCase()));\n  const filteredHoldings = filteredCoins; // filter(holding => \n  //   holding.name.toLowerCase().includes(search.toLowerCase())\n  // );\n  // console.log(`The filter input: ${search}`)\n\n  const getHoldings = async () => {\n    _s2();\n\n    axios.get(url).then(res => {\n      setCoins(res.data);\n    }).catch(error => console.log(error)); //Binance\n\n    console.info(await binance.futuresPrices());\n    await binance.useServerTime();\n    binance.balance((error, balances) => {\n      if (error) return console.error(error);\n      console.info(\"balances()\", balances);\n      console.info(\"BNB balance: \", balances.BNB.available);\n      setHoldings(balances);\n      return balances;\n    });\n  };\n\n  _s2(getHoldings, \"ryztZvy2ym7HSTFils++uZK2CyY=\", false, function () {\n    return [binance.useServerTime];\n  });\n\n  useEffect(() => {\n    getHoldings();\n    const interval = setInterval(() => {\n      getHoldings();\n    }, 10000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleChange = e => {\n    setSearch(e.target.value);\n  };\n\n  console.log(\"HERE\");\n  console.info(holdings);\n  const dataOne = objectParse(holdings);\n  console.log(dataOne);\n  console.log(\"THERE\");\n  const data = dataOne;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              as: \"h5\",\n              children: \"Cryptocurrencies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n              size: \"sm\",\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  id: \"inputGroup-sizing-sm\",\n                  children: \"Filter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                onChange: handleChange,\n                \"aria-label\": \"Small\",\n                \"aria-describedby\": \"inputGroup-sizing-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableFull, {\n              columns: columns,\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 7\n  }, this);\n}\n\n_s3(App, \"Vf6sRwy0zkmvgTiGFp2CelHH8kU=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TableFull\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/James Price/Documents/VS Code/bixpro/src/components/cryptX/tables/React/AllHoldingsTable.js"],"names":["React","useState","useEffect","Row","Col","Card","Table","Tab","Nav","Form","InputGroup","FormControl","BTable","useTable","useSortBy","useFilters","useGlobalFilter","useAsyncDebounce","axios","CONFIG","dataTable","secretKey","binance","apiKey","Binance","require","options","APIKEY","APISECRET","useServerTime","recvWindow","verbose","log","console","objectParse","data","newData","prop","push","symbol","quantity","available","onOrder","TableFull","columns","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setFilter","filterInput","setFilterInput","handleFilterChange","e","value","target","undefined","firstPageRows","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","App","useMemo","Header","accessor","search","setSearch","holdings","setHoldings","coins","setCoins","url","filteredCoins","filter","coin","name","toLowerCase","includes","filteredHoldings","getHoldings","get","then","res","catch","error","info","futuresPrices","balance","balances","BNB","interval","setInterval","clearInterval","handleChange","dataOne"],"mappings":"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","sourcesContent":["//IMPORTS\r\n//Module Imports\r\nimport React, {useState, useEffect } from 'react';\r\nimport {Row, Col, Card, Table, Tab, Nav, Form, InputGroup, FormControl } from 'react-bootstrap';\r\nimport BTable from 'react-bootstrap/Table';\r\nimport { useTable, useSortBy, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table';\r\nimport axios from 'axios';\r\nimport { CONFIG } from '../../../../config/constant';\r\nimport dataTable from '../../../../data/FullTableData';\r\n\r\n//API Configuration\r\n///Import for API Keys from Config\r\nconst secretKey = CONFIG.binance.secretKey;\r\nconst apiKey = CONFIG.binance.apiKey;\r\n//Binance API\r\nconst Binance = require('node-binance-api');\r\nconst binance = new Binance().options({\r\n  APIKEY: apiKey,\r\n  APISECRET: secretKey\r\n});\r\n\r\nbinance.options({\r\n  APIKEY: apiKey,\r\n  APISECRET: secretKey,\r\n  useServerTime: true,\r\n  recvWindow: 5000, // Set a higher recvWindow to increase response timeout\r\n  verbose: true, // Add extra output when subscribing to WebSockets, etc\r\n  log: log => {\r\n    console.log(log); // You can create your own logger here, or disable console output\r\n  }\r\n});\r\n\r\n//Refactor Data\r\nfunction objectParse(data) {\r\n  let newData = [];\r\n  for (const prop in data) {\r\n    newData.push({\r\n      symbol: prop,\r\n      quantity: data[prop].available,\r\n      onOrder: data[prop].onOrder\r\n    })\r\n  }\r\n  return newData;\r\n}\r\n\r\n//Table Component\r\nfunction TableFull({ columns, data }) {\r\n    const {\r\n          getTableProps, \r\n          getTableBodyProps, \r\n          headerGroups, \r\n          rows, \r\n          prepareRow, \r\n          setFilter\r\n        } = useTable(\r\n      {\r\n        columns,\r\n        data,\r\n      },\r\n      useFilters,\r\n      useSortBy\r\n    );\r\n\r\n    const [ filterInput, setFilterInput ] = useState(\"\");\r\n\r\n    const handleFilterChange = e => {\r\n        const value = e.target.value || undefined;\r\n        setFilter(\"name\", value);\r\n        setFilterInput(value);\r\n    };\r\n  \r\n    // We don't want to render all 2000 rows for this example, so cap\r\n    // it at 20 for this use case\r\n    const firstPageRows = rows\r\n\r\n    return (\r\n      <>\r\n        <BTable striped bordered hover responsive {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  // Add the sorting props to control sorting. For this example\r\n                  // we can add them into the header props\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    {column.render('Header')}\r\n                    {/* Add a sort direction indicator */}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? <span className='feather icon-arrow-down text-muted float-right mt-1' />\r\n                          : <span className='feather icon-arrow-up text-muted float-right mt-1' />\r\n                        : ''}\r\n                    </span>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {firstPageRows.map(\r\n              (row, i) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <tr {...row.getRowProps()}>\r\n                    {row.cells.map(cell => {\r\n                      return (\r\n                        <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                      )\r\n                    })}\r\n                  </tr>\r\n                )}\r\n            )}\r\n          </tbody>\r\n        </BTable>\r\n      </>\r\n    )\r\n}\r\n  \r\nfunction App() {\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Security Information',\r\n        columns: [\r\n          {\r\n            Header: 'Quantity Held',\r\n            accessor: 'available',\r\n          },\r\n          {\r\n            Header: 'Quantity On Order',\r\n            accessor: 'onOrder',\r\n          },\r\n        ],\r\n      }, \r\n    ],\r\n    []\r\n  )\r\n\r\n  // const columns = React.useMemo(\r\n  //   () => dataTable,\r\n  //   []\r\n  // )\r\n\r\n  const [ search, setSearch ] = useState('');\r\n  const [ holdings, setHoldings ] = useState('');\r\n  const [ coins, setCoins ] = useState([]);\r\n\r\n  const url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false';\r\n\r\n  const filteredCoins = coins.filter(coin => \r\n    coin.name.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n  \r\n  const filteredHoldings = filteredCoins;\r\n  // filter(holding => \r\n  //   holding.name.toLowerCase().includes(search.toLowerCase())\r\n  // );\r\n\r\n  // console.log(`The filter input: ${search}`)\r\n\r\n  const getHoldings = async () => {\r\n    axios\r\n      .get(\r\n        url\r\n      )\r\n      .then(res => {\r\n        setCoins(res.data);\r\n      })\r\n      .catch(error => console.log(error));\r\n    //Binance\r\n    console.info( await binance.futuresPrices() );\r\n    await binance.useServerTime();\r\n    binance.balance((error, balances) => {\r\n      if ( error ) return console.error(error);\r\n      console.info(\"balances()\", balances);\r\n      console.info(\"BNB balance: \", balances.BNB.available);\r\n      setHoldings(balances)\r\n      return balances;\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n      getHoldings()\r\n\r\n      const interval=setInterval(() => {\r\n          getHoldings()\r\n      }, 10000)\r\n\r\n      return() => clearInterval(\r\n          interval\r\n          )\r\n      }, []\r\n  );\r\n\r\n  const handleChange = e => {\r\n    setSearch(e.target.value)\r\n  }\r\n\r\n  console.log(\"HERE\")\r\n  console.info(holdings);\r\n  const dataOne = objectParse(holdings);\r\n  console.log(dataOne);\r\n  console.log(\"THERE\")\r\n  const data = dataOne;\r\n\r\n  return (\r\n      <React.Fragment>\r\n        <Row>\r\n            <Col>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <Card.Title as=\"h5\">Cryptocurrencies</Card.Title>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <InputGroup size=\"sm\" className=\"mb-3\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text id=\"inputGroup-sizing-sm\">Filter</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl onChange={handleChange} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\r\n                            </InputGroup>\r\n                        <TableFull columns={columns} data={data} />\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n  )\r\n}\r\n  \r\nexport default App\r\n  "]},"metadata":{},"sourceType":"module"}