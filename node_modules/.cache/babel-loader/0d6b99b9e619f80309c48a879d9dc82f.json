{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\James Price\\\\Documents\\\\VS Code\\\\bixpro\\\\src\\\\views\\\\widgets\\\\WidgetChart\\\\chart\\\\AmChartWorldUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4geodata_continentsLow from \"@amcharts/amcharts4-geodata/continentsLow\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nam4core.useTheme(am4themes_animated);\n\nconst AmChartWorldUser = props => {\n  _s();\n\n  useEffect(() => {\n    let chart = am4core.create(\"world-low\", am4maps.MapChart);\n    chart.geodata = am4geodata_continentsLow;\n    chart.projection = new am4maps.projections.Miller();\n    let polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\n    polygonSeries.exclude = [\"antarctica\"];\n    polygonSeries.useGeodata = true;\n    let pieSeries = chart.series.push(new am4maps.MapImageSeries());\n    let pieTemplate = pieSeries.mapImages.template;\n    pieTemplate.propertyFields.latitude = \"latitude\";\n    pieTemplate.propertyFields.longitude = \"longitude\";\n    let pieChartTemplate = pieTemplate.createChild(am4charts.PieChart);\n    pieChartTemplate.adapter.add(\"data\", function (data, target) {\n      if (target.dataItem) {\n        return target.dataItem.dataContext.pieData;\n      } else {\n        return [];\n      }\n    });\n    pieChartTemplate.propertyFields.width = \"width\";\n    pieChartTemplate.propertyFields.height = \"height\";\n    pieChartTemplate.horizontalCenter = \"middle\";\n    pieChartTemplate.verticalCenter = \"middle\";\n    let pieTitle = pieChartTemplate.titles.create();\n    pieTitle.text = \"{title}\";\n    let pieSeriesTemplate = pieChartTemplate.series.push(new am4charts.PieSeries());\n    pieSeriesTemplate.dataFields.category = \"category\";\n    pieSeriesTemplate.dataFields.value = \"value\";\n    pieSeriesTemplate.labels.template.disabled = true;\n    pieSeriesTemplate.ticks.template.disabled = true;\n    pieSeries.data = [{\n      \"title\": \"North America\",\n      \"latitude\": 39.563353,\n      \"longitude\": -99.316406,\n      \"width\": 100,\n      \"height\": 100,\n      \"pieData\": [{\n        \"category\": \"Category #1\",\n        \"value\": 1200,\n        \"fill\": 'red'\n      }, {\n        \"category\": \"Category #2\",\n        \"value\": 500\n      }, {\n        \"category\": \"Category #3\",\n        \"value\": 765\n      }, {\n        \"category\": \"Category #4\",\n        \"value\": 260\n      }]\n    }, {\n      \"title\": \"Europe\",\n      \"latitude\": 50.896104,\n      \"longitude\": 19.160156,\n      \"width\": 50,\n      \"height\": 50,\n      \"pieData\": [{\n        \"category\": \"Category #1\",\n        \"value\": 200\n      }, {\n        \"category\": \"Category #2\",\n        \"value\": 600\n      }, {\n        \"category\": \"Category #3\",\n        \"value\": 350\n      }]\n    }, {\n      \"title\": \"Asia\",\n      \"latitude\": 47.212106,\n      \"longitude\": 103.183594,\n      \"width\": 80,\n      \"height\": 80,\n      \"pieData\": [{\n        \"category\": \"Category #1\",\n        \"value\": 352\n      }, {\n        \"category\": \"Category #2\",\n        \"value\": 266\n      }, {\n        \"category\": \"Category #3\",\n        \"value\": 512\n      }, {\n        \"category\": \"Category #4\",\n        \"value\": 199\n      }]\n    }, {\n      \"title\": \"Africa\",\n      \"latitude\": 11.081385,\n      \"longitude\": 21.621094,\n      \"width\": 50,\n      \"height\": 50,\n      \"pieData\": [{\n        \"category\": \"Category #1\",\n        \"value\": 200\n      }, {\n        \"category\": \"Category #2\",\n        \"value\": 300\n      }, {\n        \"category\": \"Category #3\",\n        \"value\": 599\n      }, {\n        \"category\": \"Category #4\",\n        \"value\": 512\n      }]\n    }];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"world-low\",\n    style: {\n      width: '100%',\n      height: props.height\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AmChartWorldUser, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = AmChartWorldUser;\nexport default AmChartWorldUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AmChartWorldUser\");","map":{"version":3,"sources":["C:/Users/James Price/Documents/VS Code/bixpro/src/views/widgets/WidgetChart/chart/AmChartWorldUser.js"],"names":["React","useEffect","am4core","am4charts","am4maps","am4geodata_continentsLow","am4themes_animated","useTheme","AmChartWorldUser","props","chart","create","MapChart","geodata","projection","projections","Miller","polygonSeries","series","push","MapPolygonSeries","exclude","useGeodata","pieSeries","MapImageSeries","pieTemplate","mapImages","template","propertyFields","latitude","longitude","pieChartTemplate","createChild","PieChart","adapter","add","data","target","dataItem","dataContext","pieData","width","height","horizontalCenter","verticalCenter","pieTitle","titles","text","pieSeriesTemplate","PieSeries","dataFields","category","value","labels","disabled","ticks"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\r\nimport am4geodata_continentsLow from \"@amcharts/amcharts4-geodata/continentsLow\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nconst AmChartWorldUser = props => {\r\n\r\n    useEffect(() => {\r\n        let chart = am4core.create(\"world-low\", am4maps.MapChart);\r\n\r\n        chart.geodata = am4geodata_continentsLow;\r\n\r\n        chart.projection = new am4maps.projections.Miller();\r\n\r\n        let polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n        polygonSeries.exclude = [\"antarctica\"];\r\n        polygonSeries.useGeodata = true;\r\n\r\n        let pieSeries = chart.series.push(new am4maps.MapImageSeries());\r\n        let pieTemplate = pieSeries.mapImages.template;\r\n        pieTemplate.propertyFields.latitude = \"latitude\";\r\n        pieTemplate.propertyFields.longitude = \"longitude\";\r\n\r\n        let pieChartTemplate = pieTemplate.createChild(am4charts.PieChart);\r\n        pieChartTemplate.adapter.add(\"data\", function(data, target) {\r\n            if (target.dataItem) {\r\n                return target.dataItem.dataContext.pieData;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        });\r\n        pieChartTemplate.propertyFields.width = \"width\";\r\n        pieChartTemplate.propertyFields.height = \"height\";\r\n        pieChartTemplate.horizontalCenter = \"middle\";\r\n        pieChartTemplate.verticalCenter = \"middle\";\r\n\r\n        let pieTitle = pieChartTemplate.titles.create();\r\n        pieTitle.text = \"{title}\";\r\n\r\n        let pieSeriesTemplate = pieChartTemplate.series.push(new am4charts.PieSeries());\r\n        pieSeriesTemplate.dataFields.category = \"category\";\r\n        pieSeriesTemplate.dataFields.value = \"value\";\r\n        pieSeriesTemplate.labels.template.disabled = true;\r\n        pieSeriesTemplate.ticks.template.disabled = true;\r\n\r\n        pieSeries.data = [\r\n            {\r\n            \"title\": \"North America\",\r\n            \"latitude\": 39.563353,\r\n            \"longitude\": -99.316406,\r\n            \"width\": 100,\r\n            \"height\": 100,\r\n            \"pieData\": [{\r\n                \"category\": \"Category #1\",\r\n                \"value\": 1200,\r\n                \"fill\": 'red'\r\n            }, {\r\n                \"category\": \"Category #2\",\r\n                \"value\": 500\r\n            }, {\r\n                \"category\": \"Category #3\",\r\n                \"value\": 765\r\n            }, {\r\n                \"category\": \"Category #4\",\r\n                \"value\": 260\r\n            }]\r\n        }, {\r\n            \"title\": \"Europe\",\r\n            \"latitude\": 50.896104,\r\n            \"longitude\": 19.160156,\r\n            \"width\": 50,\r\n            \"height\": 50,\r\n            \"pieData\": [{\r\n                \"category\": \"Category #1\",\r\n                \"value\": 200\r\n            }, {\r\n                \"category\": \"Category #2\",\r\n                \"value\": 600\r\n            }, {\r\n                \"category\": \"Category #3\",\r\n                \"value\": 350\r\n            }]\r\n        }, {\r\n            \"title\": \"Asia\",\r\n            \"latitude\": 47.212106,\r\n            \"longitude\": 103.183594,\r\n            \"width\": 80,\r\n            \"height\": 80,\r\n            \"pieData\": [{\r\n                \"category\": \"Category #1\",\r\n                \"value\": 352\r\n            }, {\r\n                \"category\": \"Category #2\",\r\n                \"value\": 266\r\n            }, {\r\n                \"category\": \"Category #3\",\r\n                \"value\": 512\r\n            }, {\r\n                \"category\": \"Category #4\",\r\n                \"value\": 199\r\n            }]\r\n        }, {\r\n            \"title\": \"Africa\",\r\n            \"latitude\": 11.081385,\r\n            \"longitude\": 21.621094,\r\n            \"width\": 50,\r\n            \"height\": 50,\r\n            \"pieData\": [{\r\n                \"category\": \"Category #1\",\r\n                \"value\": 200\r\n            }, {\r\n                \"category\": \"Category #2\",\r\n                \"value\": 300\r\n            }, {\r\n                \"category\": \"Category #3\",\r\n                \"value\": 599\r\n            }, {\r\n                \"category\": \"Category #4\",\r\n                \"value\": 512\r\n            }]\r\n        }];\r\n    });\r\n\r\n    return <div id='world-low' style={{width: '100%', height: props.height}} />;\r\n}\r\n\r\nexport default AmChartWorldUser;"]},"metadata":{},"sourceType":"module"}