{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James Price\\\\Documents\\\\VS Code\\\\bixpro\\\\src\\\\components\\\\cryptX\\\\charts\\\\chart\\\\MarketsPriceLineAreaChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Chart from 'react-google-charts';\nimport { CONFIG } from '../../../../config/constant';\nimport { Row, Col, Card, Table, Tab, Nav, Form, InputGroup, FormControl } from 'react-bootstrap';\nimport BTable from 'react-bootstrap/Table';\nimport axios from 'axios'; //Create Data for Chart\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createLineData(data) {\n  const LineData = [['Date', 'Price']];\n\n  for (const dayData in data) {\n    console.log(data[dayData]);\n  }\n\n  return barData;\n}\n\nconst MarketsPriceLineAreaChart = () => {\n  _s();\n\n  const [priceData, setPriceData] = useState([]);\n  const url = 'https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=365&interval=daily';\n\n  const getPriceData = async () => {\n    axios.get(url).then(res => {\n      setPriceData(res.data);\n    }).catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n    getPriceData();\n    const interval = setInterval(() => {\n      getPriceData();\n    }, 60000);\n    console.log('PRICEDATA', priceData['prices']);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    width: \"100%\",\n    height: \"300px\",\n    chartType: \"AreaChart\",\n    loader: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this),\n    data: [['Year', 'Sales', 'Expenses'], ['2013', 1000, 400], ['2014', 1170, 460], ['2015', 660, 1120], ['2016', 1030, 540]],\n    options: {\n      title: 'Company Performance',\n      hAxis: {\n        title: 'Year',\n        titleTextStyle: {\n          color: '#333'\n        }\n      },\n      vAxis: {\n        minValue: 0\n      },\n      colors: ['#1de9b6', '#1dc4e9']\n    },\n    rootProps: {\n      'data-testid': '1'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n};\n\n_s(MarketsPriceLineAreaChart, \"evnTVV+ojccWro9vmrVPhQHmNmw=\");\n\n_c = MarketsPriceLineAreaChart;\nexport default MarketsPriceLineAreaChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarketsPriceLineAreaChart\");","map":{"version":3,"sources":["C:/Users/James Price/Documents/VS Code/bixpro/src/components/cryptX/charts/chart/MarketsPriceLineAreaChart.js"],"names":["React","useState","useEffect","Chart","CONFIG","Row","Col","Card","Table","Tab","Nav","Form","InputGroup","FormControl","BTable","axios","createLineData","data","LineData","dayData","console","log","barData","MarketsPriceLineAreaChart","priceData","setPriceData","url","getPriceData","get","then","res","catch","error","interval","setInterval","clearInterval","title","hAxis","titleTextStyle","color","vAxis","minValue","colors"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,SAAQC,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,GAA/B,EAAoCC,GAApC,EAAyCC,IAAzC,EAA+CC,UAA/C,EAA2DC,WAA3D,QAA8E,iBAA9E;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;;AACA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC1B,QAAMC,QAAQ,GAAG,CACb,CAAC,MAAD,EAAQ,OAAR,CADa,CAAjB;;AAIA,OAAK,MAAMC,OAAX,IAAsBF,IAAtB,EAA4B;AACxBG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,OAAD,CAAhB;AACH;;AACD,SAAOG,OAAP;AACH;;AAED,MAAMC,yBAAyB,GAAG,MAAM;AAAA;;AAEpC,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BxB,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMyB,GAAG,GAAG,qGAAZ;;AAEA,QAAMC,YAAY,GAAG,YAAY;AAC7BZ,IAAAA,KAAK,CACAa,GADL,CAEQF,GAFR,EAIKG,IAJL,CAIUC,GAAG,IAAI;AACTL,MAAAA,YAAY,CAACK,GAAG,CAACb,IAAL,CAAZ;AACH,KANL,EAOKc,KAPL,CAOWC,KAAK,IAAIZ,OAAO,CAACC,GAAR,CAAYW,KAAZ,CAPpB;AAQC,GATL;;AAWE9B,EAAAA,SAAS,CAAC,MAAM;AACZyB,IAAAA,YAAY;AAEZ,UAAMM,QAAQ,GAACC,WAAW,CAAC,MAAM;AAC7BP,MAAAA,YAAY;AACf,KAFyB,EAEvB,KAFuB,CAA1B;AAIAP,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBG,SAAS,CAAC,QAAD,CAAlC;AAEA,WAAM,MAAMW,aAAa,CACrBF,QADqB,CAAzB;AAGC,GAZI,EAYF,EAZE,CAAT;AAgBF,sBAAO,QAAC,KAAD;AACH,IAAA,KAAK,EAAC,MADH;AAEH,IAAA,MAAM,EAAC,OAFJ;AAGH,IAAA,SAAS,EAAC,WAHP;AAIH,IAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJL;AAKH,IAAA,IAAI,EAAE,CACF,CAAC,MAAD,EAAS,OAAT,EAAkB,UAAlB,CADE,EAEF,CAAC,MAAD,EAAS,IAAT,EAAe,GAAf,CAFE,EAGF,CAAC,MAAD,EAAS,IAAT,EAAe,GAAf,CAHE,EAIF,CAAC,MAAD,EAAS,GAAT,EAAc,IAAd,CAJE,EAKF,CAAC,MAAD,EAAS,IAAT,EAAe,GAAf,CALE,CALH;AAYH,IAAA,OAAO,EAAE;AACLG,MAAAA,KAAK,EAAE,qBADF;AAELC,MAAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBE,QAAAA,cAAc,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAAjC,OAFF;AAGLC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAHF;AAILC,MAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ;AAJH,KAZN;AAkBH,IAAA,SAAS,EAAE;AAAE,qBAAe;AAAjB;AAlBR;AAAA;AAAA;AAAA;AAAA,UAAP;AAoBH,CArDD;;GAAMnB,yB;;KAAAA,yB;AAuDN,eAAeA,yBAAf","sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport Chart from 'react-google-charts';\r\nimport { CONFIG } from '../../../../config/constant';\r\nimport {Row, Col, Card, Table, Tab, Nav, Form, InputGroup, FormControl } from 'react-bootstrap';\r\nimport BTable from 'react-bootstrap/Table';\r\nimport axios from 'axios';\r\n\r\n//Create Data for Chart\r\nfunction createLineData(data) {\r\n    const LineData = [\r\n        ['Date','Price']\r\n    ];\r\n\r\n    for (const dayData in data) {\r\n        console.log(data[dayData])\r\n    }\r\n    return barData;\r\n}\r\n\r\nconst MarketsPriceLineAreaChart = () => {\r\n\r\n    const [ priceData, setPriceData ] = useState([]);\r\n\r\n    const url = 'https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=365&interval=daily';\r\n\r\n    const getPriceData = async () => {\r\n        axios\r\n            .get(\r\n                url\r\n            )\r\n            .then(res => {\r\n                setPriceData(res.data);\r\n            })\r\n            .catch(error => console.log(error));\r\n        }\r\n    \r\n      useEffect(() => {\r\n          getPriceData()\r\n    \r\n          const interval=setInterval(() => {\r\n              getPriceData()\r\n          }, 60000)\r\n    \r\n          console.log('PRICEDATA', priceData['prices'])\r\n    \r\n          return() => clearInterval(\r\n              interval\r\n              )\r\n          }, []\r\n      );\r\n\r\n\r\n    return <Chart\r\n        width='100%'\r\n        height='300px'\r\n        chartType=\"AreaChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={[\r\n            ['Year', 'Sales', 'Expenses'],\r\n            ['2013', 1000, 400],\r\n            ['2014', 1170, 460],\r\n            ['2015', 660, 1120],\r\n            ['2016', 1030, 540],\r\n        ]}\r\n        options={{\r\n            title: 'Company Performance',\r\n            hAxis: { title: 'Year', titleTextStyle: { color: '#333' } },\r\n            vAxis: { minValue: 0 },\r\n            colors: ['#1de9b6', '#1dc4e9']\r\n        }}\r\n        rootProps={{ 'data-testid': '1' }}\r\n    />;\r\n}\r\n\r\nexport default MarketsPriceLineAreaChart;"]},"metadata":{},"sourceType":"module"}