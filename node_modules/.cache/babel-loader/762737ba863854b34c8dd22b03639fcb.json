{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\James Price\\\\Documents\\\\VS Code\\\\bixpro\\\\src\\\\components\\\\To-Do\\\\BasicToDo.js\",\n    _s = $RefreshSig$();\n\nimport React, { createRef, useState, useEffect } from 'react';\nimport { Row, Col, Button, Form } from 'react-bootstrap';\nimport { ValidationForm, TextInputGroup } from 'react-bootstrap4-form-validation';\nimport { Link } from 'react-router-dom';\nimport axios from '../../utils/axios';\n\nconst BasicToDo = props => {\n  _s();\n\n  const formRef = /*#__PURE__*/createRef();\n  const [newNote, setNewNote] = useState('');\n  const [basicTodo, setBasicTodo] = useState([]);\n  const {\n    todoList\n  } = props.todoList ? props : [];\n  useEffect(() => {\n    setBasicTodo(todoList);\n  }, [todoList]);\n\n  const completeHandler = async (e, key) => {\n    await axios.post('/api/todo/basic/complete', {\n      key: key,\n      complete: e.target.checked\n    }).then(response => {\n      setBasicTodo(response.data.basicTodo);\n    });\n  };\n\n  const handleChange = e => {\n    setNewNote(e.target.value);\n  };\n\n  const handleSubmit = async (e, formData, inputs) => {\n    e.preventDefault();\n    await axios.post('/api/todo/basic/add', {\n      note: newNote\n    }).then(response => {\n      resetForm();\n      setBasicTodo(response.data.basicTodo);\n      setNewNote('');\n    });\n  };\n\n  const resetForm = () => {\n    formRef.current.resetValidationState(true);\n  };\n\n  const handleErrorSubmit = (e, formData, errorInputs) => {//console.log(errorInputs);\n  };\n\n  const deleteHandler = async key => {\n    await axios.post('/api/todo/basic/delete', {\n      key: key\n    }).then(response => {\n      setBasicTodo(response.data.basicTodo);\n    });\n  };\n\n  const todoListHTML = basicTodo.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"to-do-list mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-inline-block\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: [item.complete ? 'done-task' : '', 'check-task custom-control custom-checkbox d-flex justify-content-center'].join(' '),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"custom-control-input\",\n              id: \"customCheck2\",\n              defaultChecked: item.complete,\n              onChange: e => completeHandler(e, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"custom-control-label\",\n              children: item.note\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"float-right\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            className: \"delete_todolist\",\n            onClick: () => deleteHandler(index),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-trash-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 128\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(ValidationForm, {\n          ref: formRef,\n          onSubmit: handleSubmit,\n          onErrorSubmit: handleErrorSubmit,\n          children: /*#__PURE__*/_jsxDEV(Form.Row, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              children: /*#__PURE__*/_jsxDEV(TextInputGroup, {\n                name: \"newNote\",\n                id: \"newNote\",\n                placeholder: \"Create your task list\",\n                required: true,\n                append: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"secondary\",\n                  className: \"btn-icon\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-plus\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 108\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 45\n                }, this),\n                value: newNote,\n                onChange: handleChange,\n                autoComplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-task\",\n          children: todoListHTML\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BasicToDo, \"CNWlasUbejNEyeEVy4DXK/trhKY=\");\n\n_c = BasicToDo;\nexport default BasicToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicToDo\");","map":{"version":3,"sources":["C:/Users/James Price/Documents/VS Code/bixpro/src/components/To-Do/BasicToDo.js"],"names":["React","createRef","useState","useEffect","Row","Col","Button","Form","ValidationForm","TextInputGroup","Link","axios","BasicToDo","props","formRef","newNote","setNewNote","basicTodo","setBasicTodo","todoList","completeHandler","e","key","post","complete","target","checked","then","response","data","handleChange","value","handleSubmit","formData","inputs","preventDefault","note","resetForm","current","resetValidationState","handleErrorSubmit","errorInputs","deleteHandler","todoListHTML","map","item","index","join"],"mappings":"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","sourcesContent":["import React, { createRef, useState, useEffect } from 'react';\r\nimport { Row, Col, Button, Form } from 'react-bootstrap';\r\nimport { ValidationForm, TextInputGroup } from 'react-bootstrap4-form-validation';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from '../../utils/axios';\r\n\r\nconst BasicToDo = props => {\r\n    const formRef = createRef();\r\n    const [newNote, setNewNote] = useState('');\r\n    const [basicTodo, setBasicTodo] = useState([]);\r\n\r\n    const { todoList } = (props.todoList) ? props : [];\r\n\r\n    useEffect(() => {\r\n        setBasicTodo(todoList);\r\n    }, [todoList]);\r\n\r\n    const completeHandler = async (e, key) => {\r\n        await axios.post('/api/todo/basic/complete', {\r\n            key: key,\r\n            complete: e.target.checked\r\n        }).then(response => {\r\n            setBasicTodo(response.data.basicTodo);\r\n        });\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setNewNote(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (e, formData, inputs) => {\r\n        e.preventDefault();\r\n\r\n        await axios.post('/api/todo/basic/add', {\r\n            note: newNote\r\n        }).then(response => {\r\n            resetForm();\r\n            setBasicTodo(response.data.basicTodo);\r\n            setNewNote('');\r\n        });\r\n    };\r\n\r\n    const resetForm = () => {\r\n        (formRef.current).resetValidationState(true);\r\n    };\r\n\r\n    const handleErrorSubmit = (e, formData, errorInputs) => {\r\n        //console.log(errorInputs);\r\n    };\r\n\r\n    const deleteHandler = async key => {\r\n        await axios.post('/api/todo/basic/delete', {\r\n            key: key\r\n        }).then(response => {\r\n            setBasicTodo(response.data.basicTodo);\r\n        });\r\n    };\r\n\r\n    const todoListHTML = basicTodo.map((item, index) => {\r\n        return (\r\n            <div key={index}>\r\n                <div className=\"to-do-list mb-3\">\r\n                    <div className=\"d-inline-block\">\r\n                        <label className={[item.complete ? 'done-task' : '', 'check-task custom-control custom-checkbox d-flex justify-content-center'].join(' ')} >\r\n                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck2\" defaultChecked={item.complete} onChange={(e) => completeHandler(e, index)} />\r\n                                <span className=\"custom-control-label\">{item.note}</span>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"float-right\"><Link to='#' className=\"delete_todolist\" onClick={() => deleteHandler(index)}><i className=\"fa fa-trash-alt\"/></Link></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <ValidationForm ref={formRef} onSubmit={handleSubmit} onErrorSubmit={handleErrorSubmit}>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <TextInputGroup\r\n                                    name=\"newNote\"\r\n                                    id=\"newNote\"\r\n                                    placeholder=\"Create your task list\"\r\n                                    required\r\n                                    append={<Button type=\"submit\" variant=\"secondary\" className='btn-icon'><i className=\"fa fa-plus\"/></Button>}\r\n                                    value={newNote}\r\n                                    onChange={handleChange}\r\n                                    autoComplete=\"off\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </ValidationForm>\r\n                    <div className=\"new-task\">\r\n                        {todoListHTML}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default BasicToDo;"]},"metadata":{},"sourceType":"module"}