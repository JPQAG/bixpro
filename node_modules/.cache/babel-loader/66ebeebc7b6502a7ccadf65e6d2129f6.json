{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James Price\\\\Documents\\\\VS Code\\\\bixpro\\\\src\\\\components\\\\cryptX\\\\charts\\\\chart\\\\MarketsBubbleChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Chart from 'react-google-charts';\nimport axios from 'axios'; //Create Data for Chart\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createBubbleData(data) {\n  const bubbleData = [['Symbol', 'Total Volume', '24h Return (%)', 'Coin Type', 'Market Capitalisation']];\n\n  for (const holding in data) {\n    if (data[holding]['market_cap_rank'] < 11) {\n      bubbleData.push([data[holding]['symbol'].toUpperCase(), data[holding]['total_volume'], data[holding]['price_change_percentage_24h'], data[holding]['symbol'].toUpperCase(), data[holding]['market_cap']]); // console.log('Bubble Data', bubbleData);\n    }\n  }\n\n  return bubbleData;\n}\n\nconst MarketsBubbleChart = () => {\n  _s();\n\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState('');\n  const url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false';\n  const filteredCoins = coins.filter(coin => coin.name.toLowerCase().includes(search.toLowerCase()));\n\n  const getCoins = async () => {\n    axios.get(url).then(res => {\n      setCoins(res.data);\n    }).catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n    getCoins();\n    const interval = setInterval(() => {\n      getCoins();\n    }, 60000);\n    console.log(coins);\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleChange = e => {\n    setSearch(e.target.value);\n  };\n\n  const data = createBubbleData(filteredCoins);\n  console.log(\"Here is bubble the data\", data);\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    width: \"100%\",\n    height: \"300px\",\n    chartType: \"BubbleChart\",\n    loader: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this) // data={[\n    //     ['ID', 'Life Expectancy', 'Fertility Rate', 'Region', 'Population'],\n    //     ['CAN', 80.66, 1.67, 'North America', 33739900],\n    //     ['DEU', 79.84, 1.36, 'Europe', 81902307],\n    //     ['DNK', 78.6, 1.84, 'Europe', 5523095],\n    //     ['EGY', 72.73, 2.78, 'Middle East', 79716203],\n    //     ['GBR', 80.05, 2, 'Europe', 61801570],\n    //     ['IRN', 72.49, 1.7, 'Middle East', 73137148],\n    //     ['IRQ', 68.09, 4.77, 'Middle East', 31090763],\n    //     ['ISR', 81.55, 2.96, 'Middle East', 7485600],\n    //     ['RUS', 68.6, 1.54, 'Europe', 141850000],\n    //     ['USA', 78.09, 2.05, 'North America', 307007000],\n    // ]}\n    ,\n    data: data,\n    options: {\n      title: 'Daily Return, Volume and Market Capitalization (Bubble Size)',\n      hAxis: {\n        title: 'Total Volume'\n      },\n      vAxis: {\n        title: 'Price Change 24 (%)'\n      },\n      bubble: {\n        textStyle: {\n          fontSize: 11\n        }\n      },\n      colors: ['#1dc4e9', '#1de9b6', '#3ebfea', '#A389D4', '#899FD4']\n    },\n    rootProps: {\n      'data-testid': '4'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 12\n  }, this);\n};\n\n_s(MarketsBubbleChart, \"eYytcDICYFEoR+cpw9A5MMZCk2k=\");\n\n_c = MarketsBubbleChart;\nexport default MarketsBubbleChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarketsBubbleChart\");","map":{"version":3,"sources":["C:/Users/James Price/Documents/VS Code/bixpro/src/components/cryptX/charts/chart/MarketsBubbleChart.js"],"names":["React","useState","useEffect","Chart","axios","createBubbleData","data","bubbleData","holding","push","toUpperCase","MarketsBubbleChart","coins","setCoins","search","setSearch","url","filteredCoins","filter","coin","name","toLowerCase","includes","getCoins","get","then","res","catch","error","console","log","interval","setInterval","clearInterval","handleChange","e","target","value","title","hAxis","vAxis","bubble","textStyle","fontSize","colors"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Chart from 'react-google-charts';\r\nimport axios from 'axios';\r\n\r\n//Create Data for Chart\r\nfunction createBubbleData(data) {\r\n    const bubbleData = [\r\n        ['Symbol', 'Total Volume', '24h Return (%)', 'Coin Type', 'Market Capitalisation']\r\n    ];\r\n\r\n    for (const holding in data) {\r\n        if (data[holding]['market_cap_rank'] < 11) {\r\n            bubbleData.push([\r\n                data[holding]['symbol'].toUpperCase(),\r\n                data[holding]['total_volume'],\r\n                data[holding]['price_change_percentage_24h'],\r\n                data[holding]['symbol'].toUpperCase(),\r\n                data[holding]['market_cap']\r\n            ]);\r\n            // console.log('Bubble Data', bubbleData);\r\n        }\r\n    }\r\n    return bubbleData;\r\n}\r\n\r\nconst MarketsBubbleChart = () => {\r\n\r\n    const [ coins, setCoins ] = useState([]);\r\n    const [ search, setSearch ] = useState('');\r\n\r\n    const url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false';\r\n\r\n    const filteredCoins = coins.filter(coin => \r\n        coin.name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n\r\n    const getCoins = async () => {\r\n        axios\r\n            .get(\r\n                url\r\n            )\r\n            .then(res => {\r\n                setCoins(res.data);\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCoins()\r\n  \r\n        const interval=setInterval(() => {\r\n            getCoins()\r\n        }, 60000)\r\n  \r\n        console.log(coins)\r\n  \r\n        return() => clearInterval(\r\n            interval\r\n            )\r\n        }, []\r\n    );\r\n\r\n    const handleChange = e => {\r\n        setSearch(e.target.value)\r\n    }\r\n    \r\n    const data = createBubbleData(filteredCoins);\r\n\r\n    console.log(\"Here is bubble the data\", data);\r\n\r\n\r\n    return <Chart\r\n        width='100%'\r\n        height='300px'\r\n        chartType=\"BubbleChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        // data={[\r\n        //     ['ID', 'Life Expectancy', 'Fertility Rate', 'Region', 'Population'],\r\n        //     ['CAN', 80.66, 1.67, 'North America', 33739900],\r\n        //     ['DEU', 79.84, 1.36, 'Europe', 81902307],\r\n        //     ['DNK', 78.6, 1.84, 'Europe', 5523095],\r\n        //     ['EGY', 72.73, 2.78, 'Middle East', 79716203],\r\n        //     ['GBR', 80.05, 2, 'Europe', 61801570],\r\n        //     ['IRN', 72.49, 1.7, 'Middle East', 73137148],\r\n        //     ['IRQ', 68.09, 4.77, 'Middle East', 31090763],\r\n        //     ['ISR', 81.55, 2.96, 'Middle East', 7485600],\r\n        //     ['RUS', 68.6, 1.54, 'Europe', 141850000],\r\n        //     ['USA', 78.09, 2.05, 'North America', 307007000],\r\n        // ]}\r\n        data={data}\r\n        options={{\r\n            title:\r\n            'Daily Return, Volume and Market Capitalization (Bubble Size)',\r\n            hAxis: { title: 'Total Volume' },\r\n            vAxis: { title: 'Price Change 24 (%)' },\r\n            bubble: { textStyle: { fontSize: 11 } },\r\n            colors: ['#1dc4e9', '#1de9b6', '#3ebfea', '#A389D4', '#899FD4']\r\n        }}\r\n        rootProps={{ 'data-testid': '4' }}\r\n    />;\r\n}\r\n\r\nexport default MarketsBubbleChart;"]},"metadata":{},"sourceType":"module"}