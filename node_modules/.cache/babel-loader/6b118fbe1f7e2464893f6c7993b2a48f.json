{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useContext}from'react';import{ListGroup}from'react-bootstrap';import{NavLink}from\"react-router-dom\";import NavIcon from\"../NavIcon\";import NavBadge from\"../NavBadge\";import{ConfigContext}from\"../../../../../contexts/ConfigContext\";import*as actionType from\"../../../../../store/actions\";import useWindowSize from\"../../../../../hooks/useWindowSize\";var NavItem=function NavItem(_ref){var layout=_ref.layout,item=_ref.item;var windowSize=useWindowSize();var configContext=useContext(ConfigContext);var dispatch=configContext.dispatch;var itemTitle=item.title;if(item.icon){itemTitle=/*#__PURE__*/_jsx(\"span\",{className:\"pcoded-mtext\",children:item.title});}var itemTarget='';if(item.target){itemTarget='_blank';}var subContent;if(item.external){subContent=/*#__PURE__*/_jsxs(\"a\",{href:item.url,target:\"_blank\",rel:\"noopener noreferrer\",children:[/*#__PURE__*/_jsx(NavIcon,{items:item}),itemTitle,/*#__PURE__*/_jsx(NavBadge,{items:item})]});}else{subContent=/*#__PURE__*/_jsxs(NavLink,{to:item.url,className:\"nav-link\",exact:true,target:itemTarget,children:[/*#__PURE__*/_jsx(NavIcon,{items:item}),itemTitle,/*#__PURE__*/_jsx(NavBadge,{items:item})]});}var mainContent='';if(layout==='horizontal'){mainContent=/*#__PURE__*/_jsx(ListGroup.Item,{as:\"li\",bsPrefix:\" \",onClick:function onClick(){return dispatch({type:actionType.NAV_CONTENT_LEAVE});},children:subContent});}else{if(windowSize.width<992){mainContent=/*#__PURE__*/_jsx(ListGroup.Item,{as:\"li\",bsPrefix:\" \",className:item.classes,onClick:function onClick(){return dispatch({type:actionType.COLLAPSE_MENU});},children:subContent});}else{mainContent=/*#__PURE__*/_jsx(ListGroup.Item,{as:\"li\",bsPrefix:\" \",className:item.classes,children:subContent});}}return/*#__PURE__*/_jsx(React.Fragment,{children:mainContent});};export default NavItem;","map":{"version":3,"sources":["C:/Users/James Price/Documents/VS Code/bixpro/src/layouts/AdminLayout/Navigation/NavContent/NavItem/index.js"],"names":["React","useContext","ListGroup","NavLink","NavIcon","NavBadge","ConfigContext","actionType","useWindowSize","NavItem","layout","item","windowSize","configContext","dispatch","itemTitle","title","icon","itemTarget","target","subContent","external","url","mainContent","type","NAV_CONTENT_LEAVE","width","classes","COLLAPSE_MENU"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nimport NavIcon from \"../NavIcon\";\r\nimport NavBadge from \"../NavBadge\";\r\n\r\nimport { ConfigContext } from \"../../../../../contexts/ConfigContext\";\r\nimport * as actionType from \"../../../../../store/actions\";\r\nimport useWindowSize from \"../../../../../hooks/useWindowSize\";\r\n\r\nconst NavItem = ({ layout, item }) => {\r\n    const windowSize = useWindowSize();\r\n    const configContext = useContext(ConfigContext);\r\n    const { dispatch } = configContext;\r\n\r\n    let itemTitle = item.title;\r\n    if (item.icon) {\r\n        itemTitle = <span className=\"pcoded-mtext\">{item.title}</span>;\r\n    }\r\n\r\n    let itemTarget = '';\r\n    if (item.target) {\r\n        itemTarget = '_blank';\r\n    }\r\n\r\n    let subContent;\r\n    if(item.external) {\r\n        subContent = (\r\n            <a href={item.url} target='_blank' rel='noopener noreferrer'>\r\n                <NavIcon items={item}/>\r\n                {itemTitle}\r\n                <NavBadge items={item}/>\r\n            </a>\r\n        );\r\n    } else {\r\n        subContent = (\r\n            <NavLink to={item.url} className=\"nav-link\" exact={true} target={itemTarget}>\r\n                <NavIcon items={item}/>\r\n                {itemTitle}\r\n                <NavBadge items={item}/>\r\n            </NavLink>\r\n        );\r\n    }\r\n    let mainContent = '';\r\n    if (layout === 'horizontal') {\r\n        mainContent = (\r\n            <ListGroup.Item as='li' bsPrefix=' ' onClick={() => dispatch({type: actionType.NAV_CONTENT_LEAVE})}>{subContent}</ListGroup.Item>\r\n        );\r\n    } else {\r\n        if (windowSize.width < 992) {\r\n            mainContent = (\r\n                <ListGroup.Item as='li' bsPrefix=' ' className={item.classes} onClick={() => dispatch({type: actionType.COLLAPSE_MENU})}>{subContent}</ListGroup.Item>\r\n            );\r\n        } else {\r\n            mainContent = (\r\n                <ListGroup.Item as='li' bsPrefix=' ' className={item.classes}>{subContent}</ListGroup.Item>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {mainContent}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default NavItem;\r\n"]},"metadata":{},"sourceType":"module"}