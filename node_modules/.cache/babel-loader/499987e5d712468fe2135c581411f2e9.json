{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"C:/Users/James Price/Documents/VS Code/bixpro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/James Price/Documents/VS Code/bixpro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/James Price/Documents/VS Code/bixpro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Row,Col,Card,Table,Tab,Nav,Form,InputGroup,FormControl}from'react-bootstrap';import{Link}from'react-router-dom';import axios from'axios';import{CONFIG}from'../../../../config/constant';console.log('HELLO');var secretKey=CONFIG.binance.secretKey;var apiKey=CONFIG.binance.apiKey;var Binance=require('node-binance-api');var binance=new Binance().options({APIKEY:apiKey,APISECRET:secretKey});binance.options({APIKEY:CONFIG.binance.secretKey,APISECRET:CONFIG.binance.apiKey,useServerTime:true,recvWindow:60000,// Set a higher recvWindow to increase response timeout\nverbose:true,// Add extra output when subscribing to WebSockets, etc\nlog:function log(_log){console.log(_log);// You can create your own logger here, or disable console output\n}});var baseURL=\"https://api.binance.com\";var query='/api/v3/time';var url=baseURL+query;var Holdings=function Holdings(){binance.prices('BNBBTC',function(error,ticker){console.info(\"Price of BNB: \",ticker.BNBBTC);});var _useState=useState([]),_useState2=_slicedToArray(_useState,2),holdings=_useState2[0],setHoldings=_useState2[1];var getHoldings=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var ticker;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return binance.prices();case 2:ticker=_context.sent;console.info(\"Price of BNB: \".concat(ticker.BNBUSDT));console.log('price of Bitcoin: '+ticker.BTCUSDT);_context.next=7;return binance.useServerTime();case 7:binance.balance(function(error,balances){if(error)return console.error(error);console.info(\"balances()\",balances);console.info(\"ETH balance: \",balances.ETH.available);});case 8:case\"end\":return _context.stop();}}},_callee);}));return function getHoldings(){return _ref.apply(this,arguments);};}();useEffect(function(){getHoldings();var interval=setInterval(function(){getHoldings();},1000);return function(){return clearInterval(interval);};},[]);return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{xl:12,md:6,children:/*#__PURE__*/_jsxs(Card,{className:\"code-table\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(Card.Title,{as:\"h5\",children:\"Portfolio Holdings\"})}),/*#__PURE__*/_jsxs(Card.Body,{className:\"pb-0\",children:[/*#__PURE__*/_jsxs(InputGroup,{size:\"sm\",className:\"mb-3\",children:[/*#__PURE__*/_jsx(InputGroup.Prepend,{children:/*#__PURE__*/_jsx(InputGroup.Text,{id:\"inputGroup-sizing-sm\",children:\"Filter\"})}),/*#__PURE__*/_jsx(FormControl,{\"aria-label\":\"Small\",\"aria-describedby\":\"input-Group-sizing-sm\"})]}),/*#__PURE__*/_jsxs(Table,{response:true,hover:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"First Column\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Second Column\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"First Data\"}),/*#__PURE__*/_jsx(\"td\",{children:\"Second Data\"})]})})]})]})]})})})});};export default Holdings;","map":{"version":3,"sources":["C:/Users/James Price/Documents/VS Code/bixpro/src/views/cryptX/Portfolio/Holdings/index.js"],"names":["React","useState","useEffect","Row","Col","Card","Table","Tab","Nav","Form","InputGroup","FormControl","Link","axios","CONFIG","console","log","secretKey","binance","apiKey","Binance","require","options","APIKEY","APISECRET","useServerTime","recvWindow","verbose","baseURL","query","url","Holdings","prices","error","ticker","info","BNBBTC","holdings","setHoldings","getHoldings","BNBUSDT","BTCUSDT","balance","balances","ETH","available","interval","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Card, Table, Tab, Nav, Form, InputGroup, FormControl } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { CONFIG } from '../../../../config/constant';\r\n\r\nconsole.log('HELLO');\r\n\r\nconst secretKey = CONFIG.binance.secretKey;\r\nconst apiKey = CONFIG.binance.apiKey;\r\nconst Binance = require('node-binance-api');\r\nconst binance = new Binance().options({\r\n    APIKEY: apiKey,\r\n    APISECRET: secretKey\r\n});\r\n\r\nbinance.options({\r\n    APIKEY: CONFIG.binance.secretKey,\r\n    APISECRET: CONFIG.binance.apiKey,\r\n    useServerTime: true,\r\n    recvWindow: 60000, // Set a higher recvWindow to increase response timeout\r\n    verbose: true, // Add extra output when subscribing to WebSockets, etc\r\n    log: log => {\r\n      console.log(log); // You can create your own logger here, or disable console output\r\n    }\r\n});\r\n\r\nconst baseURL = \"https://api.binance.com\";\r\nconst query = '/api/v3/time';\r\nconst url = baseURL + query;\r\n\r\nconst Holdings = () => {\r\n    binance.prices('BNBBTC', (error, ticker) => {\r\n        console.info(\"Price of BNB: \", ticker.BNBBTC);\r\n    });\r\n\r\n    const [holdings, setHoldings] = useState([]);\r\n\r\n    const getHoldings = async () => {\r\n        \r\n\r\n        let ticker = await binance.prices();\r\n        console.info(`Price of BNB: ${ticker.BNBUSDT}`);\r\n        console.log('price of Bitcoin: ' + ticker.BTCUSDT);\r\n\r\n        await binance.useServerTime();\r\n        binance.balance((error, balances) => {\r\n            if ( error ) return console.error(error);\r\n            console.info(\"balances()\", balances);\r\n            console.info(\"ETH balance: \", balances.ETH.available);\r\n          });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getHoldings()\r\n\r\n        const interval=setInterval(() => {\r\n            getHoldings()\r\n        }, 1000)\r\n\r\n        return() => clearInterval(\r\n            interval\r\n        )}, []\r\n    );\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col xl={12} md={6}>\r\n                    <Card className='code-table'>\r\n                        <Card.Header>\r\n                            <Card.Title as='h5'>Portfolio Holdings</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body className='pb-0'>\r\n                            <InputGroup size=\"sm\" className=\"mb-3\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text id=\"inputGroup-sizing-sm\">Filter</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl aria-label=\"Small\" aria-describedby=\"input-Group-sizing-sm\" />\r\n                            </InputGroup>\r\n                            <Table response hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>First Column</th>\r\n                                        <th>Second Column</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>First Data</td>\r\n                                        <td>Second Data</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Holdings;"]},"metadata":{},"sourceType":"module"}