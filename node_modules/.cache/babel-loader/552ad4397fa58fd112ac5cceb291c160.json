{"ast":null,"code":"import _slicedToArray from\"C:/Users/James Price/Documents/VS Code/bixpro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback}from'react';import{Row,Col,Card}from'react-bootstrap';import Gallery from\"react-photo-gallery\";import{Modal,ModalGateway}from\"react-images\";import{photos}from'./gallery';import LightBox from'../../../components/Gallery/LightBox';import ModuleNotification from'../../../components/Widgets/Statistic/Notification';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PhotoGrid=function PhotoGrid(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentImage=_useState2[0],setCurrentImage=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),viewerIsOpen=_useState4[0],setViewerIsOpen=_useState4[1];var openLightbox=useCallback(function(event,_ref){var photo=_ref.photo,index=_ref.index;setCurrentImage(index);setViewerIsOpen(true);},[]);var closeLightbox=function closeLightbox(){setCurrentImage(0);setViewerIsOpen(false);};return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{sm:12,children:/*#__PURE__*/_jsx(ModuleNotification,{message:\"For more info please check the components's official documentation\",link:\"https://www.npmjs.com/package/react-photo-gallery\"})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(Gallery,{photos:photos,onClick:openLightbox})})})})}),/*#__PURE__*/_jsx(ModalGateway,{children:viewerIsOpen?/*#__PURE__*/_jsx(Modal,{onClose:closeLightbox,children:/*#__PURE__*/_jsx(LightBox,{currentImage:currentImage,photos:photos})}):null})]});};export default PhotoGrid;","map":{"version":3,"sources":["C:/Users/James Price/Documents/VS Code/bixpro/src/views/applications/gallery/PhotoGrid.js"],"names":["React","useState","useCallback","Row","Col","Card","Gallery","Modal","ModalGateway","photos","LightBox","ModuleNotification","PhotoGrid","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","event","photo","index","closeLightbox"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,WAA1B,KAA6C,OAA7C,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,IAAnB,KAA+B,iBAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,CACA,OAASC,KAAT,CAAgBC,YAAhB,KAAoC,cAApC,CACA,OAASC,MAAT,KAAuB,WAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,sCAArB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,oDAA/B,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,eACoBX,QAAQ,CAAC,CAAD,CAD5B,wCACbY,YADa,eACCC,eADD,8BAEoBb,QAAQ,CAAC,KAAD,CAF5B,yCAEbc,YAFa,eAECC,eAFD,eAIpB,GAAMC,CAAAA,YAAY,CAAGf,WAAW,CAAC,SAACgB,KAAD,MAA6B,IAAnBC,CAAAA,KAAmB,MAAnBA,KAAmB,CAAZC,KAAY,MAAZA,KAAY,CAC1DN,eAAe,CAACM,KAAD,CAAf,CACAJ,eAAe,CAAC,IAAD,CAAf,CACH,CAH+B,CAG7B,EAH6B,CAAhC,CAKA,GAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxBP,eAAe,CAAC,CAAD,CAAf,CACAE,eAAe,CAAC,KAAD,CAAf,CACH,CAHD,CAKA,mBACI,MAAC,KAAD,CAAO,QAAP,yBACI,KAAC,GAAD,wBACI,KAAC,GAAD,EAAK,EAAE,CAAE,EAAT,uBACI,KAAC,kBAAD,EAAoB,OAAO,CAAC,oEAA5B,CAAiG,IAAI,CAAC,mDAAtG,EADJ,EADJ,EADJ,cAMI,KAAC,GAAD,wBACI,KAAC,GAAD,wBACI,KAAC,IAAD,wBACI,KAAC,IAAD,CAAM,IAAN,wBACI,KAAC,OAAD,EAAS,MAAM,CAAEP,MAAjB,CAAyB,OAAO,CAAEQ,YAAlC,EADJ,EADJ,EADJ,EADJ,EANJ,cAeI,KAAC,YAAD,WACKF,YAAY,cACT,KAAC,KAAD,EAAO,OAAO,CAAEM,aAAhB,uBACI,KAAC,QAAD,EAAU,YAAY,CAAER,YAAxB,CAAsC,MAAM,CAAEJ,MAA9C,EADJ,EADS,CAIT,IALR,EAfJ,GADJ,CAyBH,CAvCD,CAyCA,cAAeG,CAAAA,SAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport Gallery from \"react-photo-gallery\";\r\nimport { Modal, ModalGateway } from \"react-images\";\r\nimport { photos } from './gallery';\r\nimport LightBox from '../../../components/Gallery/LightBox';\r\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\r\n\r\nconst PhotoGrid = () => {\r\n    const [currentImage, setCurrentImage] = useState(0);\r\n    const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n    const openLightbox = useCallback((event, { photo, index }) => {\r\n        setCurrentImage(index);\r\n        setViewerIsOpen(true);\r\n    }, []);\r\n\r\n    const closeLightbox = () => {\r\n        setCurrentImage(0);\r\n        setViewerIsOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col sm={12}>  \r\n                    <ModuleNotification message=\"For more info please check the components's official documentation\" link='https://www.npmjs.com/package/react-photo-gallery' />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Gallery photos={photos} onClick={openLightbox} />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <ModalGateway>\r\n                {viewerIsOpen ? (\r\n                    <Modal onClose={closeLightbox}>\r\n                        <LightBox currentImage={currentImage} photos={photos} />\r\n                    </Modal>\r\n                ) : null}\r\n            </ModalGateway>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default PhotoGrid;"]},"metadata":{},"sourceType":"module"}