{"ast":null,"code":"var chartData={height:350,type:'heatmap',options:{stroke:{width:0},plotOptions:{heatmap:{radius:30,enableShades:false,colorScale:{ranges:[{from:0,to:50,color:'#FFB64D'},{from:51,to:100,color:'#FF5370'}]}}},dataLabels:{enabled:true,style:{colors:['#fff']}},colors:['#4099ff','#00bcd4','#0e9e4a','#FFB64D','#FF5370'],xaxis:{type:'category'},title:{text:'Rounded (Range without Shades)'}},series:[{name:'Metric1',data:generateDatasehrat(15,{min:0,max:90})},{name:'Metric2',data:generateDatasehrat(15,{min:0,max:90})},{name:'Metric3',data:generateDatasehrat(15,{min:0,max:90})},{name:'Metric4',data:generateDatasehrat(15,{min:0,max:90})},{name:'Metric5',data:generateDatasehrat(15,{min:0,max:90})},{name:'Metric6',data:generateDatasehrat(15,{min:0,max:90})},{name:'Metric7',data:generateDatasehrat(15,{min:0,max:90})},{name:'Metric8',data:generateDatasehrat(15,{min:0,max:90})},{name:'Metric8',data:generateDatasehrat(15,{min:0,max:90})}]};export default chartData;function generateDatasehrat(count,yrange){var i=0;var series=[];while(i<count){series.push({x:(i+1).toString(),y:Math.floor(Math.random()*(yrange.max-yrange.min+1))+yrange.min});i++;}return series;}","map":{"version":3,"sources":["C:/Users/James Price/Documents/VS Code/bixpro/src/views/charts/apex-chart/chart/heat-map-chart-2.js"],"names":["chartData","height","type","options","stroke","width","plotOptions","heatmap","radius","enableShades","colorScale","ranges","from","to","color","dataLabels","enabled","style","colors","xaxis","title","text","series","name","data","generateDatasehrat","min","max","count","yrange","i","push","x","toString","y","Math","floor","random"],"mappings":"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","sourcesContent":["const chartData = {\r\n    height: 350,\r\n    type: 'heatmap',\r\n    options: {\r\n        stroke: {\r\n            width: 0\r\n        },\r\n        plotOptions: {\r\n            heatmap: {\r\n                radius: 30,\r\n                enableShades: false,\r\n                colorScale: {\r\n                    ranges: [{\r\n                        from: 0,\r\n                        to: 50,\r\n                        color: '#FFB64D'\r\n                    },\r\n                        {\r\n                            from: 51,\r\n                            to: 100,\r\n                            color: '#FF5370'\r\n                        },\r\n                    ],\r\n                },\r\n\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: true,\r\n            style: {\r\n                colors: ['#fff']\r\n            }\r\n        },\r\n        colors: ['#4099ff', '#00bcd4', '#0e9e4a', '#FFB64D', '#FF5370'],\r\n        xaxis: {\r\n            type: 'category',\r\n        },\r\n        title: {\r\n            text: 'Rounded (Range without Shades)'\r\n        },\r\n    },\r\n    series: [\r\n        {\r\n            name: 'Metric1',\r\n            data: generateDatasehrat(15, {\r\n                min: 0,\r\n                max: 90\r\n            })\r\n        },\r\n        {\r\n            name: 'Metric2',\r\n            data: generateDatasehrat(15, {\r\n                min: 0,\r\n                max: 90\r\n            })\r\n        },\r\n        {\r\n            name: 'Metric3',\r\n            data: generateDatasehrat(15, {\r\n                min: 0,\r\n                max: 90\r\n            })\r\n        },\r\n        {\r\n            name: 'Metric4',\r\n            data: generateDatasehrat(15, {\r\n                min: 0,\r\n                max: 90\r\n            })\r\n        },\r\n        {\r\n            name: 'Metric5',\r\n            data: generateDatasehrat(15, {\r\n                min: 0,\r\n                max: 90\r\n            })\r\n        },\r\n        {\r\n            name: 'Metric6',\r\n            data: generateDatasehrat(15, {\r\n                min: 0,\r\n                max: 90\r\n            })\r\n        },\r\n        {\r\n            name: 'Metric7',\r\n            data: generateDatasehrat(15, {\r\n                min: 0,\r\n                max: 90\r\n            })\r\n        },\r\n        {\r\n            name: 'Metric8',\r\n            data: generateDatasehrat(15, {\r\n                min: 0,\r\n                max: 90\r\n            })\r\n        },\r\n        {\r\n            name: 'Metric8',\r\n            data: generateDatasehrat(15, {\r\n                min: 0,\r\n                max: 90\r\n            })\r\n        }\r\n    ]\r\n}\r\nexport default chartData;\r\n\r\nfunction generateDatasehrat(count, yrange) {\r\n    let i = 0;\r\n    const series = [];\r\n    while (i < count) {\r\n        series.push({\r\n            x: (i + 1).toString(),\r\n            y: Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min\r\n        });\r\n        i++;\r\n    }\r\n    return series;\r\n}"]},"metadata":{},"sourceType":"module"}