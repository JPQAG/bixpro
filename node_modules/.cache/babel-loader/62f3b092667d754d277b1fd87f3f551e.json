{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\James Price\\\\Documents\\\\VS Code\\\\bixpro\\\\src\\\\components\\\\cryptX\\\\tables\\\\React\\\\FullTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport BTable from 'react-bootstrap/Table';\nimport { useTable, useSortBy, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table';\nimport matchSorter from 'match-sorter';\nimport makeData from '../../../../data/tableData';\nimport moduleNotification from '../../../../components/Widgets/Statistic/Notification'; // Define a default UI for filtering\n\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter\n}) {\n  _s();\n\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = React.useState(globalFilter);\n  const onChange = onAsyncDebounce(value => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"d-flex align-items-center\",\n    children: [\"Search:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-control ml-3\",\n      value: value || \"\",\n      onchange: e => {\n        setValue(e.target.value);\n        onChange(e.target.value);\n      },\n      placeholder: `${count} records...`,\n      style: {\n        fontSize: '1.1rem',\n        border: '0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n} // Define a default UI for filtering\n\n\n_s(GlobalFilter, \"PZfmrXpM2hZvq7+lZwYi9vGu99o=\");\n\n_c = GlobalFilter;\n\nfunction DefaultColumnFilter({\n  column: {\n    filterValue,\n    preFilteredRows,\n    setFilter\n  }\n}) {\n  const count = preFilteredRows.length;\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"form-control\",\n    value: filterValue || '',\n    onChange: e => {\n      setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n    },\n    placeholder: `Search ${count} records...`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = DefaultColumnFilter;\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, {\n    keys: [row => row.values[id]]\n  });\n} // Let the table remove the filter if the string is empty\n\n\nfuzzyTextFilterFn.autoRemove = val => !val;\n\nfunction Table({\n  columns,\n  data\n}) {\n  _s2();\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    visibleColumns,\n    preGlobalFilteredRows,\n    setGlobalFilter\n  } = useTable({\n    columns,\n    data,\n    defaultColumn,\n    filterTypes\n  }, useFilters, useSortBy, useGlobalFilter);\n  const filterTypes = React.useMemo(() => ({\n    // Add a new fuzzyTextFilterFn filter type.\n    fuzzyText: fuzzyTextFilterFn,\n    // Or, override the default text filter to use 'startWith'\n    text: (rows, id, filterValue) => {\n      return rows.filter(row => {\n        const rowValue = row.values[id];\n        return rowValue !== undefined ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()) : true;\n      });\n    }\n  }), []);\n  const defaultColumn = React.useMemo(() => ({\n    // Let's set up our default filter UI\n    filter: DefaultColumnFilter\n  }), []); //Only render first 20\n\n  const firstPageRows = rows.slice(0, 100);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BTable, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column =>\n          /*#__PURE__*/\n          //Add the sorting props to control sorting. For this example we can add them into the header props\n          _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: column.canFilter ? column.render('Filter') : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"feather icon-arrow-down text-muted float-right mt-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 47\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"feather icon-arrow-up text-muted float-right mt-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 47\n              }, this) : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: visibleColumns.length,\n            style: {\n              textAlign: 'left'\n            },\n            children: /*#__PURE__*/_jsxDEV(GlobalFilter, {\n              preGlobalFilteredRows: preGlobalFilteredRows,\n              globalFilter: state.globalFilter,\n              setGlobalFilter: setGlobalFilter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: firstPageRows.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s2(Table, \"xtJcfeOSxWOQV/bC/ZHqoOhDSbc=\", false, function () {\n  return [useTable];\n});\n\n_c3 = Table;\n\nfunction App() {\n  _s3();\n\n  const columns = React.useMemo(() => [{\n    Header: 'Name',\n    columns: [{\n      Header: 'First Name',\n      accessor: 'firstName'\n    }, {\n      Header: 'Last Name',\n      accessor: 'lastName'\n    }]\n  }, {\n    Header: 'Info',\n    columns: [{\n      Header: 'Age',\n      accessor: 'age'\n    }, {\n      Header: 'Visits',\n      accessor: 'visits'\n    }, {\n      Header: 'Status',\n      accessor: 'status'\n    }, {\n      Header: 'Profile Progress',\n      accessor: 'progress'\n    }]\n  }], []);\n  const data = React.useMemo(() => makeData(10), []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              as: \"h5\",\n              children: \"Column Sorting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              columns: columns,\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(App, \"7zObr1GywQUmP9L3sfy/4IDluAk=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"GlobalFilter\");\n$RefreshReg$(_c2, \"DefaultColumnFilter\");\n$RefreshReg$(_c3, \"Table\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["C:/Users/James Price/Documents/VS Code/bixpro/src/components/cryptX/tables/React/FullTable.js"],"names":["React","Row","Col","Card","BTable","useTable","useSortBy","useFilters","useGlobalFilter","useAsyncDebounce","matchSorter","makeData","moduleNotification","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","value","setValue","useState","onChange","onAsyncDebounce","undefined","e","target","fontSize","border","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","fuzzyTextFilterFn","rows","id","keys","row","values","autoRemove","val","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","prepareRow","state","visibleColumns","defaultColumn","filterTypes","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","firstPageRows","slice","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","canFilter","isSorted","isSortedDesc","textAlign","i","getRowProps","cells","cell","getCellProps","App","Header","accessor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport BTable from 'react-bootstrap/Table';\r\nimport { useTable, useSortBy, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table';\r\nimport matchSorter from 'match-sorter';\r\n\r\nimport makeData from '../../../../data/tableData';\r\nimport moduleNotification from '../../../../components/Widgets/Statistic/Notification';\r\n\r\n// Define a default UI for filtering\r\nfunction GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n}) {\r\n    const count = preGlobalFilteredRows.length\r\n    const [ value, setValue ] = React.useState(globalFilter)\r\n    const onChange = onAsyncDebounce(value => {\r\n        setGlobalFilter(value || undefined)\r\n    }, 200)\r\n\r\n    return (\r\n        <span className='d-flex align-items-center'>\r\n            Search:{' '}\r\n            <input \r\n            className='form-control ml-3'\r\n                value={value || \"\"}\r\n                onchange={e => {\r\n                    setValue(e.target.value);\r\n                    onChange(e.target.value);\r\n                }}\r\n                placeholder={`${count} records...`}\r\n                style={{\r\n                    fontSize: '1.1rem',\r\n                    border: '0',\r\n                }}\r\n            />            \r\n        </span>\r\n    )\r\n}\r\n\r\n// Define a default UI for filtering\r\nfunction DefaultColumnFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n    const count = preFilteredRows.length\r\n\r\n    return (\r\n        <input\r\n        className='form-control'\r\n        value={filterValue || ''}\r\n        onChange={e => {\r\n            setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n        }}\r\n        placeholder={`Search ${count} records...`}\r\n        />\r\n    )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n    return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\n\r\nfunction Table( {columns, data} ) {\r\n    const {\r\n        getTableProps, \r\n        getTableBodyProps, \r\n        headerGroups, \r\n        rows, \r\n        prepareRow, \r\n        state,\r\n        visibleColumns, \r\n        preGlobalFilteredRows,\r\n        setGlobalFilter,\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            defaultColumn, \r\n            filterTypes,\r\n        },\r\n        useFilters,\r\n        useSortBy,\r\n        useGlobalFilter\r\n    )\r\n\r\n    const filterTypes = React.useMemo(\r\n        () => ({\r\n            // Add a new fuzzyTextFilterFn filter type.\r\n            fuzzyText: fuzzyTextFilterFn,\r\n            // Or, override the default text filter to use 'startWith'\r\n            text: (rows, id, filterValue) => {\r\n                return rows.filter(row => {\r\n                    const rowValue = row.values[id]\r\n                    return rowValue !== undefined\r\n                        ? String(rowValue)\r\n                            .toLowerCase()\r\n                            .startsWith(String(filterValue).toLowerCase())\r\n                        : true\r\n                })\r\n            },\r\n        }),\r\n        []\r\n    )\r\n\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Let's set up our default filter UI\r\n            filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n\r\n    //Only render first 20\r\n    const firstPageRows = rows.slice(0, 100)\r\n\r\n    return (\r\n        <>\r\n            <BTable striped bordered hover responsive {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                //Add the sorting props to control sorting. For this example we can add them into the header props\r\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                                    {column.render('Header')}\r\n                                    {/* Add a sort direction indicator  */}\r\n                                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                                    <span>\r\n                                        {column.isSorted \r\n                                        ? column.isSortedDesc\r\n                                            ? <span className='feather icon-arrow-down text-muted float-right mt-1' />\r\n                                            : <span className='feather icon-arrow-up text-muted float-right mt-1' />\r\n                                        : ''}\r\n                                    </span>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                    <tr>\r\n                        <th\r\n                            colSpan={visibleColumns.length}\r\n                            style={{\r\n                                textAlign: 'left'\r\n                            }}\r\n                        >\r\n                            <GlobalFilter\r\n                                preGlobalFilteredRows={preGlobalFilteredRows}\r\n                                globalFilter={state.globalFilter}\r\n                                setGlobalFilter={setGlobalFilter}\r\n                            />\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {firstPageRows.map(\r\n                        (row, i) => {\r\n                            prepareRow(row);\r\n                            return (\r\n                                <tr {...row.getRowProps()}>\r\n                                    {row.cells.map(cell => {\r\n                                        return (\r\n                                            <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                        )\r\n                                    })}\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    )}\r\n                </tbody>\r\n            </BTable>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction App() {\r\n    const columns = React.useMemo(\r\n        () => [\r\n        {\r\n            Header: 'Name',\r\n            columns: [\r\n            {\r\n                Header: 'First Name',\r\n                accessor: 'firstName',\r\n            },\r\n            {\r\n                Header: 'Last Name',\r\n                accessor: 'lastName',\r\n            },\r\n            ],\r\n        },\r\n        {\r\n            Header: 'Info',\r\n            columns: [\r\n            {\r\n                Header: 'Age',\r\n                accessor: 'age',\r\n            },\r\n            {\r\n                Header: 'Visits',\r\n                accessor: 'visits',\r\n            },\r\n            {\r\n                Header: 'Status',\r\n                accessor: 'status',\r\n            },\r\n            {\r\n                Header: 'Profile Progress',\r\n                accessor: 'progress',\r\n            },\r\n            ],\r\n        },\r\n        ],\r\n        []\r\n    )\r\n\r\n    const data = React.useMemo(() => makeData(10), [])\r\n\r\n    return (\r\n        <React.Fragment>\r\n          <Row>\r\n              <Col>\r\n                  <Card>\r\n                      <Card.Header>\r\n                          <Card.Title as=\"h5\">Column Sorting</Card.Title>\r\n                      </Card.Header>\r\n                      <Card.Body>\r\n                          <Table columns={columns} data={data} />\r\n                      </Card.Body>\r\n                  </Card>\r\n              </Col>\r\n          </Row>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}