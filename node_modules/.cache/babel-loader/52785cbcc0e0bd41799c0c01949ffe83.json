{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/James Price/Documents/VS Code/bixpro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/James Price/Documents/VS Code/bixpro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/James Price/Documents/VS Code/bixpro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Chart from'react-google-charts';import axios from'axios';//Create Data for Chart\nimport{jsx as _jsx}from\"react/jsx-runtime\";function createBubbleData(data){var bubbleData=[['Symbol','Total Volume (Millions)','24h Return (%)','Coin','Market Capitalisation']];for(var holding in data){if(data[holding]['market_cap_rank']<11){bubbleData.push([data[holding]['symbol'].toUpperCase(),data[holding]['total_volume']/1000000,data[holding]['price_change_percentage_24h'],data[holding]['symbol'].toUpperCase(),data[holding]['market_cap']]);// console.log('Bubble Data', bubbleData);\n}}return bubbleData;}var MarketsBubbleChart=function MarketsBubbleChart(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),coins=_useState2[0],setCoins=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),search=_useState4[0],setSearch=_useState4[1];var url='https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false';var filteredCoins=coins.filter(function(coin){return coin.name.toLowerCase().includes(search.toLowerCase());});var getCoins=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:axios.get(url).then(function(res){setCoins(res.data);}).catch(function(error){return console.log(error);});case 1:case\"end\":return _context.stop();}}},_callee);}));return function getCoins(){return _ref.apply(this,arguments);};}();useEffect(function(){getCoins();var interval=setInterval(function(){getCoins();},60000);console.log(coins);return function(){return clearInterval(interval);};},[]);var handleChange=function handleChange(e){setSearch(e.target.value);};var data=createBubbleData(filteredCoins);console.log(\"Here is bubble the data\",data);return/*#__PURE__*/_jsx(Chart,{width:\"100%\",height:\"600px\",chartType:\"BubbleChart\",loader:/*#__PURE__*/_jsx(\"div\",{children:\"Loading Chart\"})// data={[\n//     ['ID', 'Life Expectancy', 'Fertility Rate', 'Region', 'Population'],\n//     ['CAN', 80.66, 1.67, 'North America', 33739900],\n//     ['DEU', 79.84, 1.36, 'Europe', 81902307],\n//     ['DNK', 78.6, 1.84, 'Europe', 5523095],\n//     ['EGY', 72.73, 2.78, 'Middle East', 79716203],\n//     ['GBR', 80.05, 2, 'Europe', 61801570],\n//     ['IRN', 72.49, 1.7, 'Middle East', 73137148],\n//     ['IRQ', 68.09, 4.77, 'Middle East', 31090763],\n//     ['ISR', 81.55, 2.96, 'Middle East', 7485600],\n//     ['RUS', 68.6, 1.54, 'Europe', 141850000],\n//     ['USA', 78.09, 2.05, 'North America', 307007000],\n// ]}\n,data:data,options:{title:'Daily Return, Traded Volume and Market Capitalization (Bubble Size)',hAxis:{title:'Total Traded Volume (Millions)'},vAxis:{title:'Price Change 24 (%)'},bubble:{textStyle:{fontSize:10}},colors:['#1dc4e9','#1de9b6','#3ebfea','#A389D4','#899FD4']},rootProps:{'data-testid':'4'}});};export default MarketsBubbleChart;","map":{"version":3,"sources":["C:/Users/James Price/Documents/VS Code/bixpro/src/components/cryptX/charts/chart/MarketsBubbleChart.js"],"names":["React","useState","useEffect","Chart","axios","createBubbleData","data","bubbleData","holding","push","toUpperCase","MarketsBubbleChart","coins","setCoins","search","setSearch","url","filteredCoins","filter","coin","name","toLowerCase","includes","getCoins","get","then","res","catch","error","console","log","interval","setInterval","clearInterval","handleChange","e","target","value","title","hAxis","vAxis","bubble","textStyle","fontSize","colors"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Chart from 'react-google-charts';\r\nimport axios from 'axios';\r\n\r\n//Create Data for Chart\r\nfunction createBubbleData(data) {\r\n    const bubbleData = [\r\n        ['Symbol', 'Total Volume (Millions)', '24h Return (%)', 'Coin', 'Market Capitalisation']\r\n    ];\r\n\r\n    for (const holding in data) {\r\n        if (data[holding]['market_cap_rank'] < 11) {\r\n            bubbleData.push([\r\n                data[holding]['symbol'].toUpperCase(),\r\n                (data[holding]['total_volume'] / 1000000),\r\n                data[holding]['price_change_percentage_24h'],\r\n                data[holding]['symbol'].toUpperCase(),\r\n                data[holding]['market_cap']\r\n            ]);\r\n            // console.log('Bubble Data', bubbleData);\r\n        }\r\n    }\r\n    return bubbleData;\r\n}\r\n\r\nconst MarketsBubbleChart = () => {\r\n\r\n    const [ coins, setCoins ] = useState([]);\r\n    const [ search, setSearch ] = useState('');\r\n\r\n    const url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false';\r\n\r\n    const filteredCoins = coins.filter(coin => \r\n        coin.name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n\r\n    const getCoins = async () => {\r\n        axios\r\n            .get(\r\n                url\r\n            )\r\n            .then(res => {\r\n                setCoins(res.data);\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCoins()\r\n  \r\n        const interval=setInterval(() => {\r\n            getCoins()\r\n        }, 60000)\r\n  \r\n        console.log(coins)\r\n  \r\n        return() => clearInterval(\r\n            interval\r\n            )\r\n        }, []\r\n    );\r\n\r\n    const handleChange = e => {\r\n        setSearch(e.target.value)\r\n    }\r\n    \r\n    const data = createBubbleData(filteredCoins);\r\n\r\n    console.log(\"Here is bubble the data\", data);\r\n\r\n\r\n    return <Chart\r\n        width='100%'\r\n        height='600px'\r\n        chartType=\"BubbleChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        // data={[\r\n        //     ['ID', 'Life Expectancy', 'Fertility Rate', 'Region', 'Population'],\r\n        //     ['CAN', 80.66, 1.67, 'North America', 33739900],\r\n        //     ['DEU', 79.84, 1.36, 'Europe', 81902307],\r\n        //     ['DNK', 78.6, 1.84, 'Europe', 5523095],\r\n        //     ['EGY', 72.73, 2.78, 'Middle East', 79716203],\r\n        //     ['GBR', 80.05, 2, 'Europe', 61801570],\r\n        //     ['IRN', 72.49, 1.7, 'Middle East', 73137148],\r\n        //     ['IRQ', 68.09, 4.77, 'Middle East', 31090763],\r\n        //     ['ISR', 81.55, 2.96, 'Middle East', 7485600],\r\n        //     ['RUS', 68.6, 1.54, 'Europe', 141850000],\r\n        //     ['USA', 78.09, 2.05, 'North America', 307007000],\r\n        // ]}\r\n        data={data}\r\n        options={{\r\n            title:\r\n            'Daily Return, Traded Volume and Market Capitalization (Bubble Size)',\r\n            hAxis: { title: 'Total Traded Volume (Millions)' },\r\n            vAxis: { title: 'Price Change 24 (%)' },\r\n            bubble: { textStyle: { fontSize: 10 } },\r\n            colors: ['#1dc4e9', '#1de9b6', '#3ebfea', '#A389D4', '#899FD4']\r\n        }}\r\n        rootProps={{ 'data-testid': '4' }}\r\n    />;\r\n}\r\n\r\nexport default MarketsBubbleChart;"]},"metadata":{},"sourceType":"module"}