{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\James Price\\\\Documents\\\\VS Code\\\\bixpro\\\\src\\\\views\\\\extensions\\\\FullEventCalendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, Card } from 'react-bootstrap';\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interaction from \"@fullcalendar/interaction\";\nimport timeGrid from \"@fullcalendar/timegrid\";\nimport ModuleNotification from '../../components/Widgets/Statistic/Notification';\nimport axios from '../../utils/axios';\n\nconst randomDate = () => {\n  const date = new Date();\n  const start = new Date(date.getFullYear(), date.getMonth(), 1);\n  const end = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n};\n\nconst FullEventCalendar = () => {\n  _s();\n\n  const [event, setEvent] = useState([]);\n\n  const getEvent = async () => {\n    const response = await axios.get('/api/calendar/events');\n    setEvent(response.data.events);\n  };\n\n  useEffect(() => {\n    getEvent();\n  }, []);\n  const head = {\n    left: \"prev,next today\",\n    center: \"title\",\n    right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(ModuleNotification, {\n          message: \"For more info please check the components's official documentation\",\n          link: \"https://fullcalendar.io/docs/react\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              as: \"h5\",\n              children: \"Full Calendar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"calendar\",\n            children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n              defaultView: \"dayGridMonth\",\n              header: head,\n              editable: true,\n              defaultDate: randomDate(),\n              droppable: true,\n              events: event,\n              plugins: [dayGridPlugin, interaction, timeGrid]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FullEventCalendar, \"AYqBrxO44pwJKsXivbsALnTdP+U=\");\n\n_c = FullEventCalendar;\nexport default FullEventCalendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"FullEventCalendar\");","map":{"version":3,"sources":["C:/Users/James Price/Documents/VS Code/bixpro/src/views/extensions/FullEventCalendar.js"],"names":["React","useState","useEffect","Row","Col","Card","FullCalendar","dayGridPlugin","interaction","timeGrid","ModuleNotification","axios","randomDate","date","Date","start","getFullYear","getMonth","end","getTime","Math","random","FullEventCalendar","event","setEvent","getEvent","response","get","data","events","head","left","center","right"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interaction from \"@fullcalendar/interaction\";\r\nimport timeGrid from \"@fullcalendar/timegrid\";\r\n\r\nimport ModuleNotification from '../../components/Widgets/Statistic/Notification';\r\nimport axios from '../../utils/axios';\r\n\r\nconst randomDate = () => {\r\n    const date = new Date();\r\n    const start = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    const end = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r\n};\r\n\r\nconst FullEventCalendar = () => {\r\n    const [event, setEvent] = useState([]);\r\n\r\n    const getEvent = async () => {\r\n        const response = await axios.get('/api/calendar/events');\r\n        setEvent(response.data.events);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getEvent();\r\n    }, [])\r\n\r\n    const head = {\r\n        left: \"prev,next today\",\r\n        center: \"title\",\r\n        right: \"dayGridMonth,timeGridWeek,timeGridDay\"\r\n    };\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col sm={12}>  \r\n                    <ModuleNotification message=\"For more info please check the components's official documentation\" link='https://fullcalendar.io/docs/react' />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as='h5'>Full Calendar</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body className='calendar'>\r\n                            <FullCalendar\r\n                                defaultView=\"dayGridMonth\"\r\n                                header={head}\r\n                                editable={true}\r\n                                defaultDate= { randomDate() }\r\n                                droppable={true}\r\n                                events={event}\r\n                                plugins={[dayGridPlugin, interaction, timeGrid]}\r\n                            />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default FullEventCalendar;"]},"metadata":{},"sourceType":"module"}