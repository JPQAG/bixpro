{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"C:/Users/James Price/Documents/VS Code/bixpro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/James Price/Documents/VS Code/bixpro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/James Price/Documents/VS Code/bixpro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"C:/Users/James Price/Documents/VS Code/bixpro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";//FireBase is used as an authentication database.\n//React Context allows us to pass states more efficiently\n//In this module we create a React Context for Firebase Authentication\n//////// IMPORTS\n//React Context API passes props without propdrilling\nimport React,{createContext,useEffect,useReducer}from'react';import{FIREBASE_STATE_CHANGED}from\"../store/actions\";import firebase from'../firebase/lib';import Loader from\"../components/Loader/Loader\";var initialState={isLoggedIn:false,isInitialised:false,user:null};var reducer=function reducer(state,action){switch(action.type){case FIREBASE_STATE_CHANGED:{var _action$payload=action.payload,isLoggedIn=_action$payload.isLoggedIn,user=_action$payload.user;return _objectSpread(_objectSpread({},state),{},{isLoggedIn:isLoggedIn,isInitialised:true,user:user});}default:{return _objectSpread({},state);}}};var FirebaseContext=/*#__PURE__*/createContext(_objectSpread(_objectSpread({},initialState),{},{firebaseEmailPasswordNewUser:function firebaseEmailPasswordNewUser(){return Promise.resolve();},firebaseEmailPasswordSignIn:function firebaseEmailPasswordSignIn(){return Promise.resolve();},firebaseGoogleSignIn:function firebaseGoogleSignIn(){return Promise.resolve();},logout:function logout(){return Promise.resolve();}}));export var FirebaseProvider=function FirebaseProvider(_ref){var children=_ref.children;var _useReducer=useReducer(reducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var firebaseEmailPasswordSignIn=function firebaseEmailPasswordSignIn(email,password){return firebase.auth().signInWithEmailAndPassword(email,password);};var firebaseGoogleSignIn=function firebaseGoogleSignIn(){var provider=new firebase.auth.GoogleAuthProvider();return firebase.auth().signInWithPopup(provider);};var firebaseEmailPasswordNewUser=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(email,password){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",firebase.auth().createUserWithEmailAndPassword(email,password));case 1:case\"end\":return _context.stop();}}},_callee);}));return function firebaseEmailPasswordNewUser(_x,_x2){return _ref2.apply(this,arguments);};}();var logout=function logout(){return firebase.auth().signOut();};useEffect(function(){return firebase.auth().onAuthStateChanged(function(user){if(user){dispatch({type:FIREBASE_STATE_CHANGED,payload:{isLoggedIn:true,user:{id:user.uid,email:user.email}}});}else{dispatch({type:FIREBASE_STATE_CHANGED,payload:{isLoggedIn:false,user:null}});}});},[dispatch]);if(!state.isInitialised){return/*#__PURE__*/_jsx(Loader,{});}return/*#__PURE__*/_jsx(FirebaseContext.Provider,{value:_objectSpread(_objectSpread({},state),{},{firebaseEmailPasswordNewUser:firebaseEmailPasswordNewUser,firebaseEmailPasswordSignIn:firebaseEmailPasswordSignIn,firebaseGoogleSignIn:firebaseGoogleSignIn,logout:logout}),children:children});};export default FirebaseContext;","map":{"version":3,"sources":["C:/Users/James Price/Documents/VS Code/bixpro/src/contexts/FirebaseContext.js"],"names":["React","createContext","useEffect","useReducer","FIREBASE_STATE_CHANGED","firebase","Loader","initialState","isLoggedIn","isInitialised","user","reducer","state","action","type","payload","FirebaseContext","firebaseEmailPasswordNewUser","Promise","resolve","firebaseEmailPasswordSignIn","firebaseGoogleSignIn","logout","FirebaseProvider","children","dispatch","email","password","auth","signInWithEmailAndPassword","provider","GoogleAuthProvider","signInWithPopup","createUserWithEmailAndPassword","signOut","onAuthStateChanged","id","uid"],"mappings":"urBAAA;AACA;AACA;AAEA;AAEA;AACA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,SAA/B,CAA0CC,UAA1C,KAA4D,OAA5D,CAEA,OAASC,sBAAT,KAAuC,kBAAvC,CACA,MAAOC,CAAAA,QAAP,KAAqB,iBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,6BAAnB,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,UAAU,CAAE,KADO,CAEnBC,aAAa,CAAE,KAFI,CAGnBC,IAAI,CAAE,IAHa,CAArB,CAMA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACjC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKV,CAAAA,sBAAL,CAA6B,qBACES,MAAM,CAACE,OADT,CACnBP,UADmB,iBACnBA,UADmB,CACPE,IADO,iBACPA,IADO,CAG3B,sCACKE,KADL,MAEEJ,UAAU,CAAVA,UAFF,CAGEC,aAAa,CAAE,IAHjB,CAIEC,IAAI,CAAJA,IAJF,GAMD,CACD,QAAS,CACP,wBAAYE,KAAZ,EACD,CAbH,CAeD,CAhBD,CAkBA,GAAMI,CAAAA,eAAe,cAAGf,aAAa,gCAChCM,YADgC,MAEnCU,4BAA4B,CAAE,8CAAMC,CAAAA,OAAO,CAACC,OAAR,EAAN,EAFK,CAGnCC,2BAA2B,CAAE,6CAAMF,CAAAA,OAAO,CAACC,OAAR,EAAN,EAHM,CAInCE,oBAAoB,CAAE,sCAAMH,CAAAA,OAAO,CAACC,OAAR,EAAN,EAJa,CAKnCG,MAAM,CAAE,wBAAMJ,CAAAA,OAAO,CAACC,OAAR,EAAN,EAL2B,GAArC,CAQA,MAAO,IAAMI,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,iBACtBrB,UAAU,CAACQ,OAAD,CAAUJ,YAAV,CADY,4CACzCK,KADyC,iBAClCa,QADkC,iBAGhD,GAAML,CAAAA,2BAA2B,CAAG,QAA9BA,CAAAA,2BAA8B,CAACM,KAAD,CAAQC,QAAR,CAAqB,CACvD,MAAOtB,CAAAA,QAAQ,CAACuB,IAAT,GAAgBC,0BAAhB,CAA2CH,KAA3C,CAAkDC,QAAlD,CAAP,CACD,CAFD,CAIA,GAAMN,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CACjC,GAAMS,CAAAA,QAAQ,CAAG,GAAIzB,CAAAA,QAAQ,CAACuB,IAAT,CAAcG,kBAAlB,EAAjB,CAEA,MAAO1B,CAAAA,QAAQ,CAACuB,IAAT,GAAgBI,eAAhB,CAAgCF,QAAhC,CAAP,CACD,CAJD,CAMA,GAAMb,CAAAA,4BAA4B,2FAAG,iBAAOS,KAAP,CAAcC,QAAd,kJAC5BtB,QAAQ,CAACuB,IAAT,GAAgBK,8BAAhB,CAA+CP,KAA/C,CAAsDC,QAAtD,CAD4B,wDAAH,kBAA5BV,CAAAA,4BAA4B,iDAAlC,CAIA,GAAMK,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB,MAAOjB,CAAAA,QAAQ,CAACuB,IAAT,GAAgBM,OAAhB,EAAP,CACD,CAFD,CAIAhC,SAAS,CAAC,UAAM,CACd,MAAOG,CAAAA,QAAQ,CAACuB,IAAT,GAAgBO,kBAAhB,CAAmC,SAACzB,IAAD,CAAU,CAClD,GAAIA,IAAJ,CAAU,CACRe,QAAQ,CAAC,CACPX,IAAI,CAAEV,sBADC,CAEPW,OAAO,CAAE,CACPP,UAAU,CAAE,IADL,CAEPE,IAAI,CAAE,CACJ0B,EAAE,CAAE1B,IAAI,CAAC2B,GADL,CAEJX,KAAK,CAAEhB,IAAI,CAACgB,KAFR,CAFC,CAFF,CAAD,CAAR,CAUD,CAXD,IAWO,CACLD,QAAQ,CAAC,CACPX,IAAI,CAAEV,sBADC,CAEPW,OAAO,CAAE,CACPP,UAAU,CAAE,KADL,CAEPE,IAAI,CAAE,IAFC,CAFF,CAAD,CAAR,CAOD,CACF,CArBM,CAAP,CAsBD,CAvBQ,CAuBN,CAACe,QAAD,CAvBM,CAAT,CAyBA,GAAI,CAACb,KAAK,CAACH,aAAX,CAA0B,CACxB,mBAAO,KAAC,MAAD,IAAP,CACD,CAED,mBACI,KAAC,eAAD,CAAiB,QAAjB,EAA0B,KAAK,gCAAOG,KAAP,MAAcK,4BAA4B,CAA5BA,4BAAd,CAA4CG,2BAA2B,CAA3BA,2BAA5C,CAAyEC,oBAAoB,CAApBA,oBAAzE,CAA+FC,MAAM,CAANA,MAA/F,EAA/B,UACGE,QADH,EADJ,CAKD,CAvDM,CAyDP,cAAeR,CAAAA,eAAf","sourcesContent":["//FireBase is used as an authentication database.\r\n//React Context allows us to pass states more efficiently\r\n//In this module we create a React Context for Firebase Authentication\r\n\r\n//////// IMPORTS\r\n\r\n//React Context API passes props without propdrilling\r\nimport React, { createContext, useEffect, useReducer } from 'react';\r\n\r\nimport { FIREBASE_STATE_CHANGED } from \"../store/actions\";\r\nimport firebase from '../firebase/lib';\r\nimport Loader from \"../components/Loader/Loader\";\r\n\r\nconst initialState = {\r\n  isLoggedIn: false,\r\n  isInitialised: false,\r\n  user: null\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case FIREBASE_STATE_CHANGED: {\r\n      const { isLoggedIn, user } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        isLoggedIn,\r\n        isInitialised: true,\r\n        user\r\n      };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nconst FirebaseContext = createContext({\r\n  ...initialState,\r\n  firebaseEmailPasswordNewUser: () => Promise.resolve(),\r\n  firebaseEmailPasswordSignIn: () => Promise.resolve(),\r\n  firebaseGoogleSignIn: () => Promise.resolve(),\r\n  logout: () => Promise.resolve()\r\n});\r\n\r\nexport const FirebaseProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const firebaseEmailPasswordSignIn = (email, password) => {\r\n    return firebase.auth().signInWithEmailAndPassword(email, password);\r\n  };\r\n\r\n  const firebaseGoogleSignIn = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n    return firebase.auth().signInWithPopup(provider);\r\n  };\r\n\r\n  const firebaseEmailPasswordNewUser = async (email, password) => {\r\n    return firebase.auth().createUserWithEmailAndPassword(email, password);\r\n  };\r\n\r\n  const logout = () => {\r\n    return firebase.auth().signOut();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        dispatch({\r\n          type: FIREBASE_STATE_CHANGED,\r\n          payload: {\r\n            isLoggedIn: true,\r\n            user: {\r\n              id: user.uid,\r\n              email: user.email,\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: FIREBASE_STATE_CHANGED,\r\n          payload: {\r\n            isLoggedIn: false,\r\n            user: null\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }, [dispatch]);\r\n\r\n  if (!state.isInitialised) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n      <FirebaseContext.Provider value={{ ...state, firebaseEmailPasswordNewUser, firebaseEmailPasswordSignIn, firebaseGoogleSignIn, logout }}>\r\n        {children}\r\n      </FirebaseContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FirebaseContext;\r\n"]},"metadata":{},"sourceType":"module"}