{"ast":null,"code":"import React,{useEffect}from'react';import*as am4core from\"@amcharts/amcharts4/core\";import*as am4charts from\"@amcharts/amcharts4/charts\";import am4themes_animated from\"@amcharts/amcharts4/themes/animated\";import{jsx as _jsx}from\"react/jsx-runtime\";am4core.useTheme(am4themes_animated);var XyChart=function XyChart(){useEffect(function(){var chart=am4core.create(\"am-xy-1\",am4charts.XYChart);chart.data=[{\"country\":\"Lithuania\",\"research\":501.9,\"marketing\":250,\"sales\":199},{\"country\":\"Czech Republic\",\"research\":301.9,\"marketing\":222,\"sales\":251},{\"country\":\"Ireland\",\"research\":201.1,\"marketing\":170,\"sales\":199},{\"country\":\"Germany\",\"research\":165.8,\"marketing\":122,\"sales\":90},{\"country\":\"Australia\",\"research\":139.9,\"marketing\":99,\"sales\":252},{\"country\":\"Austria\",\"research\":128.3,\"marketing\":85,\"sales\":84},{\"country\":\"UK\",\"research\":99,\"marketing\":93,\"sales\":142},{\"country\":\"Belgium\",\"research\":60,\"marketing\":50,\"sales\":55},{\"country\":\"The Netherlands\",\"research\":50,\"marketing\":42,\"sales\":25}];var categoryAxis=chart.xAxes.push(new am4charts.CategoryAxis());categoryAxis.dataFields.category=\"country\";categoryAxis.title.text=\"Local country offices\";categoryAxis.renderer.grid.template.location=0;categoryAxis.renderer.minGridDistance=20;var valueAxis=chart.yAxes.push(new am4charts.ValueAxis());valueAxis.title.text=\"Expenditure (M)\";var series=chart.series.push(new am4charts.ColumnSeries());series.dataFields.valueY=\"research\";series.dataFields.categoryX=\"country\";series.name=\"Research\";series.tooltipText=\"{name}: [bold]{valueY}[/]\";series.stacked=true;var series2=chart.series.push(new am4charts.ColumnSeries());series2.dataFields.valueY=\"marketing\";series2.dataFields.categoryX=\"country\";series2.name=\"Marketing\";series2.tooltipText=\"{name}: [bold]{valueY}[/]\";series2.stacked=true;var series3=chart.series.push(new am4charts.ColumnSeries());series3.dataFields.valueY=\"sales\";series3.dataFields.categoryX=\"country\";series3.name=\"Sales\";series3.tooltipText=\"{name}: [bold]{valueY}[/]\";chart.cursor=new am4charts.XYCursor();});return/*#__PURE__*/_jsx(\"div\",{id:\"am-xy-1\",style:{width:\"100%\",height:\"500px\"}});};export default XyChart;","map":{"version":3,"sources":["C:/Users/James Price/Documents/VS Code/bixpro/src/views/charts/am-chart/chart/XyChart.js"],"names":["React","useEffect","am4core","am4charts","am4themes_animated","useTheme","XyChart","chart","create","XYChart","data","categoryAxis","xAxes","push","CategoryAxis","dataFields","category","title","text","renderer","grid","template","location","minGridDistance","valueAxis","yAxes","ValueAxis","series","ColumnSeries","valueY","categoryX","name","tooltipText","stacked","series2","series3","cursor","XYCursor","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nconst XyChart = () => {\r\n\r\n    useEffect(() => {\r\n        let chart = am4core.create(\"am-xy-1\", am4charts.XYChart);\r\n        chart.data = [{\r\n            \"country\": \"Lithuania\",\r\n            \"research\": 501.9,\r\n            \"marketing\": 250,\r\n            \"sales\": 199\r\n        }, {\r\n            \"country\": \"Czech Republic\",\r\n            \"research\": 301.9,\r\n            \"marketing\": 222,\r\n            \"sales\": 251\r\n        }, {\r\n            \"country\": \"Ireland\",\r\n            \"research\": 201.1,\r\n            \"marketing\": 170,\r\n            \"sales\": 199\r\n        }, {\r\n            \"country\": \"Germany\",\r\n            \"research\": 165.8,\r\n            \"marketing\": 122,\r\n            \"sales\": 90\r\n        }, {\r\n            \"country\": \"Australia\",\r\n            \"research\": 139.9,\r\n            \"marketing\": 99,\r\n            \"sales\": 252\r\n        }, {\r\n            \"country\": \"Austria\",\r\n            \"research\": 128.3,\r\n            \"marketing\": 85,\r\n            \"sales\": 84\r\n        }, {\r\n            \"country\": \"UK\",\r\n            \"research\": 99,\r\n            \"marketing\": 93,\r\n            \"sales\": 142\r\n        }, {\r\n            \"country\": \"Belgium\",\r\n            \"research\": 60,\r\n            \"marketing\": 50,\r\n            \"sales\": 55\r\n        }, {\r\n            \"country\": \"The Netherlands\",\r\n            \"research\": 50,\r\n            \"marketing\": 42,\r\n            \"sales\": 25\r\n        }];\r\n\r\n        let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n        categoryAxis.dataFields.category = \"country\";\r\n        categoryAxis.title.text = \"Local country offices\";\r\n        categoryAxis.renderer.grid.template.location = 0;\r\n        categoryAxis.renderer.minGridDistance = 20;\r\n\r\n        let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n        valueAxis.title.text = \"Expenditure (M)\";\r\n\r\n        let series = chart.series.push(new am4charts.ColumnSeries());\r\n        series.dataFields.valueY = \"research\";\r\n        series.dataFields.categoryX = \"country\";\r\n        series.name = \"Research\";\r\n        series.tooltipText = \"{name}: [bold]{valueY}[/]\";\r\n        series.stacked = true;\r\n\r\n        let series2 = chart.series.push(new am4charts.ColumnSeries());\r\n        series2.dataFields.valueY = \"marketing\";\r\n        series2.dataFields.categoryX = \"country\";\r\n        series2.name = \"Marketing\";\r\n        series2.tooltipText = \"{name}: [bold]{valueY}[/]\";\r\n        series2.stacked = true;\r\n\r\n        let series3 = chart.series.push(new am4charts.ColumnSeries());\r\n        series3.dataFields.valueY = \"sales\";\r\n        series3.dataFields.categoryX = \"country\";\r\n        series3.name = \"Sales\";\r\n        series3.tooltipText = \"{name}: [bold]{valueY}[/]\";\r\n\r\n        chart.cursor = new am4charts.XYCursor();\r\n    })\r\n\r\n    return <div id=\"am-xy-1\" style={{ width: \"100%\", height: \"500px\" }} />;\r\n}\r\n\r\nexport default XyChart;"]},"metadata":{},"sourceType":"module"}