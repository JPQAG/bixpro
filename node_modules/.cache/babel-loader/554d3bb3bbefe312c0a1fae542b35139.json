{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\James Price\\\\Documents\\\\VS Code\\\\bixpro\\\\src\\\\components\\\\cryptX\\\\tables\\\\React\\\\FullTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport BTable from 'react-bootstrap/Table';\nimport { useTable, useSortBy, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table';\nimport matchSorter from 'match-sorter';\nimport makeData from '../../../../data/tableData';\nimport moduleNotification from '../../../../components/Widgets/Statistic/Notification';\n\nfunction Table({\n  columns,\n  data\n}) {\n  _s();\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy); //Only render first 20\n\n  const firstPageRows = rows.slice(0, 100);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BTable, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column =>\n          /*#__PURE__*/\n          //Add the sorting props to control sorting. For this example we can add them into the header props\n          _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"feather icon-arrow-down text-muted float-right mt-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 47\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"feather icon-arrow-up text-muted float-right mt-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 47\n              }, this) : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: firstPageRows.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Table, \"gB+BLxNdPKWTp63dgIzQO47/ynI=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\n\nfunction App() {\n  _s2();\n\n  const columns = React.useMemo(() => [{\n    Header: 'Name',\n    columns: [{\n      Header: 'First Name',\n      accessor: 'firstName'\n    }, {\n      Header: 'Last Name',\n      accessor: 'lastName'\n    }]\n  }, {\n    Header: 'Info',\n    columns: [{\n      Header: 'Age',\n      accessor: 'age'\n    }, {\n      Header: 'Visits',\n      accessor: 'visits'\n    }, {\n      Header: 'Status',\n      accessor: 'status'\n    }, {\n      Header: 'Profile Progress',\n      accessor: 'progress'\n    }]\n  }], []);\n  const data = React.useMemo(() => makeData(10), []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              as: \"h5\",\n              children: \"Column Sorting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              columns: columns,\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(App, \"7zObr1GywQUmP9L3sfy/4IDluAk=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Table\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/James Price/Documents/VS Code/bixpro/src/components/cryptX/tables/React/FullTable.js"],"names":["React","Row","Col","Card","BTable","useTable","useSortBy","useFilters","useGlobalFilter","useAsyncDebounce","matchSorter","makeData","moduleNotification","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","firstPageRows","slice","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","App","useMemo","Header","accessor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport BTable from 'react-bootstrap/Table';\r\nimport { useTable, useSortBy, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table';\r\nimport matchSorter from 'match-sorter';\r\n\r\nimport makeData from '../../../../data/tableData';\r\nimport moduleNotification from '../../../../components/Widgets/Statistic/Notification';\r\n\r\nfunction Table( {columns, data} ) {\r\n    const {getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n        },\r\n        useSortBy\r\n    )\r\n\r\n    //Only render first 20\r\n    const firstPageRows = rows.slice(0, 100)\r\n\r\n    return (\r\n        <>\r\n            <BTable striped bordered hover responsive {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                //Add the sorting props to control sorting. For this example we can add them into the header props\r\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                                    {column.render('Header')}\r\n                                    {/* Add a sort direction indicator  */}\r\n                                    <span>\r\n                                        {column.isSorted \r\n                                        ? column.isSortedDesc\r\n                                            ? <span className='feather icon-arrow-down text-muted float-right mt-1' />\r\n                                            : <span className='feather icon-arrow-up text-muted float-right mt-1' />\r\n                                        : ''}\r\n                                    </span>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {firstPageRows.map(\r\n                        (row, i) => {\r\n                            prepareRow(row);\r\n                            return (\r\n                                <tr {...row.getRowProps()}>\r\n                                    {row.cells.map(cell => {\r\n                                        return (\r\n                                            <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                        )\r\n                                    })}\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    )}\r\n                </tbody>\r\n            </BTable>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction App() {\r\n    const columns = React.useMemo(\r\n        () => [\r\n        {\r\n            Header: 'Name',\r\n            columns: [\r\n            {\r\n                Header: 'First Name',\r\n                accessor: 'firstName',\r\n            },\r\n            {\r\n                Header: 'Last Name',\r\n                accessor: 'lastName',\r\n            },\r\n            ],\r\n        },\r\n        {\r\n            Header: 'Info',\r\n            columns: [\r\n            {\r\n                Header: 'Age',\r\n                accessor: 'age',\r\n            },\r\n            {\r\n                Header: 'Visits',\r\n                accessor: 'visits',\r\n            },\r\n            {\r\n                Header: 'Status',\r\n                accessor: 'status',\r\n            },\r\n            {\r\n                Header: 'Profile Progress',\r\n                accessor: 'progress',\r\n            },\r\n            ],\r\n        },\r\n        ],\r\n        []\r\n    )\r\n\r\n    const data = React.useMemo(() => makeData(10), [])\r\n\r\n    return (\r\n        <React.Fragment>\r\n          <Row>\r\n              <Col>\r\n                  <Card>\r\n                      <Card.Header>\r\n                          <Card.Title as=\"h5\">Column Sorting</Card.Title>\r\n                      </Card.Header>\r\n                      <Card.Body>\r\n                          <Table columns={columns} data={data} />\r\n                      </Card.Body>\r\n                  </Card>\r\n              </Col>\r\n          </Row>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}